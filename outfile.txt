    1  cat ~/.zshrc
    2  vim ~/.zshrc
    3  source ~/.zshrc
    4  cat ~/.zshrc
    5  exec zsh
    6  z 
    7  vim ~/.zshrc
    8  z
    9  vim ~/.zshrc
   10  source ~/.zshrc
   11  git clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/plugins/zsh-autosuggestions
   12  git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.oh-my-zsh/plugins/zsh-syntax-highlighting
   13  source ~/.zshrc
   14  git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.oh-my-zsh/plugins/zsh-syntax-highlighting
   15  z
   16  z Documents
   17  ls
   18  cd ojacobsdev
   19  ls
   20  cd libft
   21  cd
   22  ls
   23  z libft
   24  cd
   25  vim ~/.zshrc
   26  source ~/.zshrc
   27  vim ~/.zshrc
   28  ls
   29  git clone https://github.com/Remi-Jacobs/ft_printf.git
   30  git clone https://github.com/Remi-Jacobs/getnextline.git
   31  z Scribble
   32  ls
   33  make
   34  z Makemake
   35  ls
   36  make
   37  make hello
   38  make help
   39  make hello
   40  touch blah.c
   41  touch Makefile
   42  make
   43  z Makemake
   44  make
   45  z pushswap
   46  ls
   47  touch testlib.c
   48  cc testlib.c
   49  ./a.out
   50  cc testlib.c
   51  touch Makefile
   52  z Makemake
   53  make
   54  clean
   55  make clean
   56  make
   57  make clean
   58  make
   59  make clean
   60  make
   61  make clean
   62  make
   63  make clean
   64  make
   65  make clean
   66  make
   67  make clean
   68  make
   69  make clean
   70  make
   71  make clean
   72  make
   73  make clean
   74  make
   75  make clean
   76  make
   77  make clean
   78  make
   79  LS
   80  ls
   81  make
   82  make clean
   83  make
   84  make clean
   85  make
   86  make clean
   87  make
   88  make clean
   89  make
   90  make clean
   91  make
   92  make clean
   93  make
   94  make clean
   95  make
   96  make clean
   97  make
   98  make clean
   99  make
  100  make clean
  101  z pushswap
  102  ls
  103  touch init_stack2.c
  104  ls
  105  make
  106  cat Makefile
  107  make
  108  make re
  109  make fclean
  110  make
  111  make fclean
  112  make clean
  113  make fclean
  114  make re
  115  make
  116  cd inc
  117  ls
  118  cd libft
  119  make re
  120  make
  121  make 
  122  make
  123  make fclean
  124  make re
  125  make
  126  make re
  127  make fclean
  128  cd ..
  129  clear
  130  make re
  131  make fclean
  132  make re
  133  make fclean
  134  make re
  135  make
  136  make re
  137  ./a.out
  138  make
  139  make re
  140  ./a.out
  141  ./push-swap
  142  make
  143  ./push-swap
  144  make
  145  ./push-swap
  146  norminette init_stack.c
  147  clear
  148  norminette init_stack.c
  149  clear
  150  make
  151  ./push-swap
  152  make
  153  clear
  154  make
  155  clear
  156  make
  157  ./push-swap
  158  make
  159  ./push-swap
  160  make
  161  ./push-swap
  162  clear
  163  make
  164  ./push-swap
  165  cc testarray.c
  166  ./a.out
  167  cc testarray.c
  168  ./a.out
  169  cc testarray.c
  170  ./a.out
  171  cc testarray.c
  172  ./a.out
  173  cc testarray.c
  174  ./a.out
  175  cc testarray.c
  176  ./a.out
  177  cc testarray.c
  178  ./a.out
  179  cc testarray.c
  180  ./a.out
  181  cc testarray.c
  182  ./a.out
  183  cc testarray.c
  184  ./a.out
  185  cc testarray.c
  186  ./a.out
  187  cc testarray.c
  188  ./a.out
  189  cc testarray.c
  190  ./a.out
  191  cc testarray.c
  192  ./a.out
  193  cc testarray.c
  194  ./a.out
  195  cc testarray.c
  196  ./a.out
  197  cc testarray.c
  198  ./a.out
  199  cc testarray.c
  200  ./a.out
  201  cc testarray.c
  202  cc testarray.c\\ncc testarray.c
  203  cc testarray.c
  204  ./a.out
  205  cc testarray.c
  206  ./a.out
  207  cc testarray.c
  208  ./a.out
  209  cc testarray.c
  210  ./a.out
  211  cc testarray.c
  212  ./a.out
  213  cc testarray.c
  214  ./a.out
  215  cc testarray.c
  216  ./a.out
  217  cc testarray.c
  218  ./a.out
  219  cc testarray.c
  220  ./a.out
  221  cc testarray.c
  222  ./a.out
  223  cc testarray.c
  224  ./a.out
  225  cc testarray.c
  226  ./a.out
  227  man strlcpy
  228  touch ft_split_num.c
  229  man isspace
  230  touch ft_clear_spaces.c
  231  cc ft_clear_spaces.c
  232  ./a.out
  233  cc ft_clear_spaces.c
  234  ./a.out
  235  cc ft_clear_spaces.c
  236  ./a.out
  237  cc ft_clear_spaces.c
  238  ./a.out
  239  cc ft_clear_spaces.c
  240  ./a.out
  241  cc ft_clear_spaces.c
  242  ./a.out
  243  cc ft_clear_spaces.c
  244  ./a.out
  245  cc ft_clear_spaces.c > test.txt
  246  ./a.out > test.txt
  247  cc ft_clear_spaces.c
  248  ./a.out
  249  cc ft_clear_spaces.c
  250  ./a.out
  251  ./a.out > test.txt
  252  cc ft_clear_spaces.c
  253  ./a.out
  254  ./a.out > test.txt
  255  clear
  256  make
  257  make fclean
  258  make
  259  make fclean
  260  make
  261  ./push-swap
  262  make
  263  ./push-swap
  264  make
  265  ./push-swap
  266  make
  267  ./push-swap
  268  make
  269  ./push-swap
  270  make
  271  ./push-swap
  272  make
  273  ./push-swap
  274  make
  275  ./push-swap
  276  make
  277  ./push-swap
  278  make
  279  ./push-swap
  280  make
  281  ./push-swap
  282  make
  283  ./push-swap
  284  make
  285  ./push-swap
  286  make
  287  ./push-swap
  288  make
  289  ./push-swap
  290  make
  291  ./push-swap
  292  make
  293  ./push-swap
  294  make
  295  ./push-swap
  296  make
  297  ./push-swap
  298  make
  299  ./push-swap
  300  make
  301  ./push-swap
  302  make
  303  ./push-swap
  304  make
  305  ./push-swap
  306  make
  307  ./push-swap
  308  make
  309  ./push-swap
  310  make
  311  ./push-swap
  312  make
  313  ./push-swap
  314  make
  315  ./push-swap
  316  make
  317  ./push-swap
  318  make
  319  ./push-swap
  320  make
  321  ./push-swap
  322  make
  323  make re
  324  make
  325  ./push-swap
  326  clear
  327  make fclean
  328  make
  329  ./push-swap
  330  valgrind
  331  AddressSanitizer 
  332  ./push-swap
  333  make
  334  ./push-swap
  335  make
  336  ./push-swap
  337  make
  338  ./push-swap
  339  make
  340  ./push-swap
  341  make
  342  ./push-swap
  343  make
  344  ./push-swap
  345  make
  346  ./push-swap
  347  make
  348  ./push-swap
  349  make
  350  ./push-swap
  351  make
  352  ./push-swap
  353  make
  354  ./push-swap
  355  make
  356  ./push-swap
  357  make
  358  ./push-swap
  359  make
  360  ./push-swap
  361  make
  362  ./push-swap
  363  make
  364  ./push-swap
  365  make
  366  ./push-swap
  367  make
  368  ./push-swap
  369  make
  370  ./push-swap
  371  make
  372  ./push-swap
  373  make
  374  ./push-swap
  375  make
  376  ./push-swap
  377  make
  378  ./push-swap
  379  make
  380  ./push-swap
  381  make
  382  ./push-swap
  383  make fclean
  384  make re
  385  ./push-swap
  386  make re
  387  ./push-swap
  388  make
  389  ./push-swap
  390  make
  391  ./push-swap
  392  make
  393  ./push-swap
  394  clear
  395  make
  396  ./push-swap
  397  make
  398  ./push-swap
  399  clear
  400  make
  401  ./push-swap
  402  make
  403  ./push-swap
  404  make
  405  ./push-swap
  406  make
  407  ./push-swap
  408  make
  409  ./push-swap
  410  make
  411  ./push-swap
  412  make
  413  ./push-swap
  414  make
  415  ./push-swap
  416  make
  417  ./push-swap
  418  make
  419  ./push-swap
  420  make
  421  ./push-swap
  422  make
  423  ./push-swap
  424  make
  425  ./push-swap
  426  make
  427  ./push-swap
  428  ls
  429  touch ft_isspace.c
  430  make fclean
  431  make re
  432  make fclean
  433  make re
  434  ./push-swap
  435  make re
  436  ./push-swap
  437  make
  438  make re
  439  ./push-swap
  440  make
  441  ./push-swap
  442  make
  443  ./push-swap
  444  make
  445  ./push-swap
  446  make
  447  ./push-swap
  448  make
  449  ./push-swap
  450  make
  451  ./push-swap
  452  make
  453  ./push-swap
  454  make
  455  ./push-swap
  456  make
  457  ./push-swap
  458  make
  459  ./push-swap
  460  make
  461  ./push-swap
  462  make
  463  ./push-swap
  464  make
  465  ./push-swap
  466  make
  467  ./push-swap
  468  make
  469  ./push-swap
  470  make
  471  ./push-swap
  472  make
  473  ./push-swap
  474  make
  475  ./push-swap
  476  make
  477  ./push-swap
  478  touch ft_atol.c
  479  make fclean
  480  make re
  481  ./push-swap
  482  make
  483  ./push-swap
  484  make
  485  ./push-swap
  486  make
  487  ./push-swap
  488  make
  489  ./push-swap
  490  make
  491  ./push-swap
  492  make
  493  ./push-swap
  494  make
  495  ./push-swap
  496  make
  497  ./push-swap
  498  make
  499  ./push-swap
  500  make
  501  ./push-swap
  502  make
  503  ./push-swap
  504  make
  505  ./push-swap
  506  make
  507  ./push-swap
  508  make
  509  ./push-swap
  510  make
  511  ./push-swap
  512  make
  513  ./push-swap
  514  cc doublelst2.c
  515  ./a.out
  516  touch testtemp.c
  517  make
  518  ./push-swap
  519  make
  520  ./push-swap
  521  make
  522  ./push-swap
  523  make
  524  ./push-swap
  525  make
  526  ./push-swap
  527  make
  528  ./push-swap "234 68 254      253 -8646 90 -21474836 80 "
  529  ./push-swap 234 68 254      253 -8646 90 -21474836 80
  530  "234 68 254      253 -8646 90 -21474836 80 " "235 65 255      259 -8644 91 -21494836 70 "
  531  "235 65 255      259 -8644 91 -21494836 70 "
  532  69 350 540 205 2045
  533  ./push-swap "234 68 254      253 -8646 90 -21474836 80 ""235 65 255      259 -8644 91 -21494836 70 " 
  534  ./push-swap "234 68 254      253 -8646 90 -21474836 80 ""235 65 255      259 -8644 91 -21494836 70 " 7957 2972 36753 2635
  535  ./push-swap "234 68 254      253 -8646 90 -21474836 80 ""235 65 255      259 -8644 91 -21494836 70 " 7957 2972 36753 2635 2635
  536  ./push-swap "234 68 254      253 -8646 90 -21474836 80 ""235 65 255    o  259 -8644 91 -21494836 70 " 7957 2972 36753 2635
  537  ./push-swap 67
  538  ./push-swap 
  539  make
  540  ./push-swap 
  541  make
  542  ./push-swap 89 74 -8
  543  make
  544  ./push-swap 89 74 -8
  545  make
  546  ./push-swap 89 74 -8 78 9
  547  ./push-swap 89  -8 78 9
  548  make
  549  ./push-swap 89  -8 78 9
  550  make
  551  ./push-swap 89  -8 78 9
  552  touch rotate.c
  553  make
  554  ./push-swap 89  -8 78 9
  555  ./push-swap 89  -8 78 9 75 354 83 0 35
  556  touch reverse_rotate.c
  557  make
  558  ./push-swap 89  -8 78 9
  559  make
  560  ./push-swap 89  -8 78 9
  561  touch push.c
  562  make
  563  ./push-swap 89 8 78 9 10 34
  564  make
  565  ./push-swap 89 8 78 9 10 34
  566  make
  567  ./push-swap 89 8 78 9 10 34
  568  make
  569  ./push-swap 89 8 78 9 10 34
  570  make
  571  ./push-swap 89 8 78 9 10 34
  572  make
  573  ./push-swap 89 8 78 9 10 34
  574  make
  575  ./push-swap 89 8 78 9 10 34
  576  make
  577  ./push-swap 89 8 78 9 10 34
  578  make
  579  ./push-swap 89 8 78 9 10 34
  580  make
  581  ./push-swap 89 8 78 9 10 34
  582  make
  583  ./push-swap 89 8 78 9 10 34
  584  make
  585  ./push-swap 89 8 78 9 10 34
  586  make
  587  ./push-swap 89 8 78 9 10 34
  588  make
  589  ./push-swap 89 8 78 9 10 34
  590  make
  591  ./push-swap 89 8 78 9 10 34
  592  make
  593  ./push-swap 89 8 78 9 10 34
  594  make
  595  ./push-swap 89 8 78 9 10 34
  596  make
  597  ./push-swap 89 8 78 9 10 34
  598  make
  599  ./push-swap 89 8 78 9 10 34
  600  make
  601  ./push-swap 89 8 78 9 10 34
  602  make
  603  ./push-swap 89 8 78 9 10 34
  604  make
  605  ./push-swap 89 8 78 9 10 34
  606  make
  607  ./push-swap 89 8 78 9 10 34
  608  make
  609  ./push-swap 89 8 78 9 10 34
  610  make
  611  ./push-swap 89 8 78 9 10 34
  612  make
  613  ./push-swap 89 8 78 9 10 34
  614  make
  615  ./push-swap 89 8 78 9 10 34
  616  make
  617  ./push-swap 89 8 78 9 10 34
  618  make
  619  ./push-swap 89 8 78 9 10 34
  620  make
  621  ./push-swap 89 8 78 9 10 34
  622  ./push-swap 89 8 78 9 10 34 789
  623  make
  624  ./push-swap 89 8 78 9 10 34 789
  625  clear
  626  touch sort_stack.c
  627  touch stack_utils.c
  628  make
  629  ./push-swap 89 8 78 9 10 34 789
  630  clear
  631  touch setup_a_to_b.c
  632  touch mytry.c
  633  touch setup_b_to_a.c
  634  touch sort_three.c
  635  touch push_swap.c
  636  make
  637  ./push-swap 89 8 78 9 10 34 789
  638  make
  639  ./push-swap 89 8 78 9 10 34 789
  640  make
  641  ./push-swap 89 8 78 9 10 34 789
  642  ./push-swap 89 8 78 9 
  643  ./push-swap 89 8 78
  644  ./push-swap 89 8 78 100 3
  645  ./push-swap 600 8 78 100 3 48
  646  ./push-swap 60 70 90 50 10 20
  647  make
  648  ./push-swap 60 70 90 50 10 20
  649  make
  650  ./push-swap 60 70 90 50 10 20
  651  make
  652  ./push-swap 60 70 90 50 10 20
  653  make
  654  ./push-swap 60 70 90 50 10 20
  655  make
  656  ./push-swap 60 70 90 50 10 20
  657  make
  658  ./push-swap 60 70 90 50 10 20
  659  make
  660  ./push-swap 60 70 90 50 10 20
  661  make
  662  ./push-swap 60 70 90 50 10 20
  663  yes
  664  ls
  665  clear
  666  fclean
  667  make fclean
  668  make
  669  ./push-swap 60 70 90 50 10 20
  670  make
  671  ./push-swap 60 70 90 50 10 20
  672  make
  673  ./push-swap 60 70 90 50 10 20
  674  make
  675  ./push-swap 60 70 90 50 10 20
  676  make
  677  ./push-swap 60 70 90 50 10 20
  678  make
  679  ./push-swap 60 70 90 50 10 20
  680  make
  681  ./push-swap 60 70 90 50 10 20
  682  make
  683  ./push-swap 60 70 90 50 10 20
  684  make
  685  ./push-swap 60 70 90 50 10 20
  686  make fclean
  687  make re
  688  ./push-swap 60 70 90 50 10 20
  689  make re
  690  ./push-swap 60 70 90 50 10 20
  691  make re
  692  ./push-swap 60 70 90 50 10 20
  693  make re
  694  ./push-swap 60 70 90 50 10 20
  695  ./push-swap 60 70 
  696  ./push-swap 60 70 80 
  697  ./push-swap  70 60 80 
  698  ./push-swap  70  80 60 
  699  ./push-swap  80  70 60 
  700  ./push-swap  80  70 60  50
  701  ./push-swap  80  70 60  50 40
  702  ./push-swap  80  70 60  50
  703  ./push-swap  80  70 60 
  704  ./push-swap  80  70 60 90 33 66 654 356
  705  make re
  706  ./push-swap  80  70 60 90 33 66 654 356
  707  ./push-swap  80  70 60  50
  708  ./push-swap  80  70 60 90 33 66 654 356
  709  make re
  710  ./push-swap  80  70 60 90 33 66 654 356
  711  make re
  712  ./push-swap  80  70 60 90 33 66 654 356
  713  make re
  714  ./push-swap  80  70 60 90 33 66 654 356
  715  make re
  716  ./push-swap  80  70 60 90 33 66 654 356
  717  make re
  718  ./push-swap  80  70 60 90 33 66 654 356
  719  make re
  720  ./push-swap  80  70 60 90 33 66 654 356
  721  make re
  722  ./push-swap  80  70 60 90 33 66 654 356
  723  make re
  724  ./push-swap  80  70 60 90 33 66 654 356
  725  make re
  726  ./push-swap  80  70 60 90 33 66 654 356
  727  make re
  728  ./push-swap  80  70 60 90 33 66 654 356
  729  make re
  730  ./push-swap  80  70 60 90 33 66 654 356
  731  make re
  732  ./push-swap  80  70 60 90 33 66 654 356
  733  make re
  734  ./push-swap  80  70 60 90 33 66 654 356
  735  ./push-swap  80  70 60 90 33 66 654 356 94 295 375 2965 86 7 72 34
  736  make re
  737  ./push-swap  80  70 60 90 33 66 654 356 94 295 375 2965 86 7 72 34
  738  ./push-swap  80  70 60 90 33 66 654 356 94 295 375 2965 86 7 72 34 34
  739  ./push-swap  80  70 60 90 33 66 654 356 94 295 375 2965 86 7 72 34 o
  740  ./push-swap  80  70 60 90 33 66 654 356 94 295 375 2965 86 7 72 34 0
  741  pwd
  742  ls
  743  make re
  744  valgrid ./push_swap  80  70 60 90 33 66 654 356 94 295 375 2965 86 7 72 34 0
  745  ./push_swap  80  70 60 90 33 66 654 356 94 295 375 2965 86 7 72 34 0
  746  valgrind ./push_swap  80  70 60 90 33 66 654 356 94 295 375 2965 86 7 72 34 0
  747  valgrind ./push_swap  80
  748  valgrind ./push_swap
  749  valgrind ./push_swap rtdjhasdqwdghf qjdfdjweug
  750  ./push_swap  80  70 60 90 33 66 654 356 94 295 375 2965 86 7 72 34 0
  751  make re
  752  ./push_swap  80  70 60 90 33 66 654 356 94 295 375 2965 86 7 72 34 0
  753  make re
  754  ./push_swap  80  70 60 90 33 66 654 356 94 295 375 2965 86 7 72 34 0
  755  make re
  756  ./push_swap  80  70 60 90 33 66 654 356 94 295 375 2965 86 7 72 34 0
  757  make re
  758  ./push_swap  80  70 60 90 33 66 654 356 94 295 375 2965 86 7 72 34 0
  759  make re
  760  ./push_swap  80  70 60 90 33 66 654 356 94 295 375 2965 86 7 72 34 0
  761  make re
  762  ./push_swap  80  70 60 90 33 66 654 356 94 295 375 2965 86 7 72 34 0
  763  ./push_swap  4323197\t-299099\t383707\t6318404\t1057401\n5497997\t5021181\t5515551\t5980892\t2256555\n4642903\t6008415\t6733770\t3868479\t210418\n2816318\t1314332\t122058\t1117034\t1020012\n5029563\t2023261\t5293254\t5409359\t1701778\n5108009\t3606209\t833941\t1566262\t4307952\n3648519\t419903\t3881106\t365419\t1786599\n3392865\t1274763\t462268\t4287608\t1136578\n2322664\t2428098\t-276407\t3731018\t4485938\n4193407\t4155587\t5279302\t6930720\t3636437\n396490\t963690\t5743439\t472544\t4775034\n1919556\t353606\t3929955\t3562977\t1243752\n3048021\t-407055\t5790584\t2854971\t3650201\n5494336\t917399\t6263032\t4236429\t4834976\n2291154\t2122010\t1018620\t861253\t2860956\n6413646\t186474\t199902\t5085074\t298389\n2052880\t4524571\t5491905\t4528711\t-408146\n3955381\t2366711\t6645228\t4469558\t6598449\n4642905\t2101256\t4948944\t1675056\t3690692\n5618429\t886243\t1313241\t1793044\t4786090
  764  ./push_swap  4323197\t-299099\t383707\t6318404\t1057401\n5497997\t5021181\t5515551\t5980892\t2256555\n4642903\t6008415\t6733770\t3868479\t210418\n2816318\t1314332\t122058\t1117034\t1020012\n5029563\t2023261\t5293254\t5409359\t1701778\n5108009\t3606209\t833941\t1566262\t4307952\n3648519\t419903\t3881106\t365419\t1786599\n3392865\t1274763\t462268\t4287608\t1136578\n2322664\t2428098\t-276407\t3731018\t4485938\n4193407\t4155587\t5279302\t6930720\t3636437\n396490\t963690\t5743439\t472544\t4775034\n1919556\t353606\t3929955\t3562977\t1243752\n3048021\t-407055\t5790584\t2854971\t3650201\n5494336\t917399\t6263032\t4236429\t4834976\n2291154\t2122010\t1018620\t861253\t2860956\n6413646\t186474\t199902\t5085074\t298389\n2052880\t4524571\t5491905\t4528711\t-408146\n3955381\t2366711\t6645228\t4469558\t6598449\n4642905\t2101256\t4948944\t1675056\t3690692\n5618429\t886243\t1313241\t1793044\t47860904323197\t-299099\t383707\t6318404\t1057401\n5497997\t5021181\t5515551\t5980892\t2256555\n4642903\t6008415\t6733770\t3868479\t210418\n2816318\t1314332\t122058\t1117034\t1020012\n5029563\t2023261\t5293254\t5409359\t1701778\n5108009\t3606209\t833941\t1566262\t4307952\n3648519\t419903\t3881106\t365419\t1786599\n3392865\t1274763\t462268\t4287608\t8\t4469558\t6598449\t2101256\t4948944\t1675056\t3690692\t886243\t1313241\t1793044\t4786090
  765  ./push_swap 277936\n290241\n394345\n4787267\n2779297\n2868096\n5655931\n70478\n3157464\n2502128\n3984050\n5072588\n5154222\n2579704\n2136450\n1552430\n1710437\n5666004\n4788293\n1346206\n-216523\n6441743\n3077504\n-68181\n1078397\n4901772\n3134766\n6967544\n5963087\n2770700\n5315488\n3939197\n3602340\n3461419\n-373290\n6784164\n229147\n779259\n1948296\n4086601\n4341742\n3682891\n599817\n4464203\n-287820\n5064605\n434542\n106765\n2181569\n3986673\n4354277\n1818430\n1800286\n2435527\n2407462\n6878358\n3038943\n3638492\n6358665\n6012646\n5002278\n988019\n6908784\n4235142\n3841029\n5569851\n-37535\n2215968\n4618427\n5723931\n668790\n6837\n799522\n3657018\n39
  766  clear
  767  ./push_swap 47621 418451 296352 589654 373461 461465 679424 61015 642467 574640 93482 629951 447473 683010 589303 221335 496838 -39566 539245 89166 653727 596827 -24629 598000 265632 677476 549455 393238 -52123 184878 218993 233018 517956 -20139 262634 398368 116050 365150 498111 523735 -42338 353434 91010 -55964 364109 363986 553602 411796 587320 698174 44909 475740 196469 228936 477488 625676 357969 92661 697012 480449 387916 691189 163614 357570 574577 587662 443554 449208 -14406 343806 641209 14819 224962 570244 150036 427694 362251 574637 613080 -29393 36301 16084 291518 214030 147507 -49577 62076 288435 -55560 145590 126382 303059 26578 680385 156346 93416 147684 482266 65651 -38917277936\n290241\n394345\n4787267\n2779297\n2868096\n5655931\n70478\n3157464\n2502128\n3984050\n5072588\n5154222\n2579704\n2136450\n1552430\n1710437\n5666004\n4788293\n1346206\n-216523\n6441743\n3077504\n-68181\n1078397\n4901772\n3134766\n6967544\n5963087\n2770700\n5315488\n3939197\n3602340\n3461419\n-373290\n6784164\n229147\n779259\n1948296\n4086601\n4341742\n3682891\n599817\n4464203\n-287820\n5064605\n434542\n106765\n2181569\n3986673\n4354277\n1818430\n1800286\n2435527\n2407462\n6878358\n3038943\n3638492\n6358665\n6012646\n5002278\n988019\n6908784\n4235142\n3841029\n5569851\n-37535\n2215968\n4618427\n5723931\n668790\n6837\n799522\n3657018\n3
  768  ./push_swap 47621 418451 296352 589654 373461 461465 679424 61015 642467 574640 93482 629951 447473 683010 589303 221335 496838 -39566 539245 89166 653727 596827 -24629 598000 265632 677476 549455 393238 -52123 184878 218993 233018 517956 -20139 262634 398368 116050 365150 498111 523735 -42338 353434 91010 -55964 364109 363986 553602 411796 587320 698174 44909 475740 196469 228936 477488 625676 357969 92661 697012 480449 387916 691189 163614 357570 574577 587662 443554 449208 -14406 343806 641209 14819 224962 570244 150036 427694 362251 574637 613080 -29393 36301 16084 291518 214030 147507 -49577 62076 288435 -55560 145590 126382 303059 26578 680385 156346 93416 147684 482266 65651 -389172779\n290241\n394345\n4787267\n2779297\n2868096\n5655931\n70478\n3157464\n2502128\n3984050\n5072588\n5154222\n2579704\n2136450\n1552430\n1710437\n5666004\n4788293\n1346206\n-216523\n6441743\n3077504\n-68181\n1078397\n4901772\n3134766\n6967544\n5963087\n2770700\n5315488\n3939197\n3602340\n3461419\n-373290\n6784164\n229147\n779259\n1948296\n4086601\n4341742\n3682891\n599817\n4464203\n-287820\n5064605\n434542\n106765\n2181569\n3986673\n4354277\n1818430\n1800286\n2435527\n2407462\n6878358\n3038943\n3638492\n6358665\n6012646\n5002278\n988019\n6908784\n4235142\n3841029\n5569851\n-37535\n2215968\n4618427\n5723931\n668790\n6837\n799522\n3657018\n3
  769  ./push_swap 47621 418451 296352 589654 373461 461465 679424 61015 642467 574640 93482 629951 447473 683010 589303 221335 496838 -39566 539245 89166 653727 596827 -24629 598000 265632 677476 549455 393238 -52123 184878 218993 233018 517956 -20139 262634 398368 116050 365150 498111 523735 -42338 353434 91010 -55964 364109 363986 553602 411796 587320 698174 44909 475740 196469 228936 477488 625676 357969 92661 697012 480449 387916 691189 163614 357570 574577 587662 443554 449208 -14406 343806 641209 14819 224962 570244 150036 427694 362251 574637 613080 -29393 36301 16084 291518 214030 147507 -49577 62076 288435 -55560 145590 126382 303059 26578 680385 156346 93416 147684 482266 65651 -38917
  770  make re
  771  ./push_swap 47621 418451 296352 589654 373461 461465 679424 61015 642467 574640 93482 629951 447473 683010 589303 221335 496838 -39566 539245 89166 653727 596827 -24629 598000 265632 677476 549455 393238 -52123 184878 218993 233018 517956 -20139 262634 398368 116050 365150 498111 523735 -42338 353434 91010 -55964 364109 363986 553602 411796 587320 698174 44909 475740 196469 228936 477488 625676 357969 92661 697012 480449 387916 691189 163614 357570 574577 587662 443554 449208 -14406 343806 641209 14819 224962 570244 150036 427694 362251 574637 613080 -29393 36301 16084 291518 214030 147507 -49577 62076 288435 -55560 145590 126382 303059 26578 680385 156346 93416 147684 482266 65651 -38917
  772  ls wc -l
  773  ls -l
  774  ls -wc 
  775  wc -l
  776  ./push_swap 47621 418451 296352 589654 373461 461465 679424 61015 642467 574640 93482 629951 447473 683010 589303 221335 496838 -39566 539245 89166 653727 596827 -24629 598000 265632 677476 549455 393238 -52123 184878 218993 233018 517956 -20139 262634 398368 116050 365150 498111 523735 -42338 353434 91010 -55964 364109 363986 553602 411796 587320 698174 44909 475740 196469 228936 477488 625676 357969 92661 697012 480449 387916 691189 163614 357570 574577 587662 443554 449208 -14406 343806 641209 14819 224962 570244 150036 427694 362251 574637 613080 -29393 36301 16084 291518 214030 147507 -49577 62076 288435 -55560 145590 126382 303059 26578 680385 156346 93416 147684 482266 65651 -38917 | wc -l
  777  ./push_swap 47621 418451 296352 589654 373461 461465 679424 61015 642467 574640 93482 629951 447473 683010 589303 221335 496838 -39566 539245 89166 653727 596827 -24629 598000 265632 677476 549455 393238 -52123 184878 218993 233018 517956 -20139 262634 398368 116050 365150 498111 523735 -42338 353434 91010 -55964 364109 363986 553602 411796 587320 698174 44909 475740 196469 228936 477488 625676 357969 92661 697012 480449 387916 691189 163614 357570 574577 587662 443554 449208 -14406 343806 641209 14819 224962 570244 150036 427694 362251 574637 613080 -29393 36301 16084 291518 214030 147507 -49577 62076 288435 -55560 145590 126382 303059 26578 680385 156346 93416 147684 482266 65651 -38917
  778  wc -l
  779  wc
  780  ./push_swap 47621 418451 296352 589654 373461 461465 679424 61015 642467 574640 93482 629951 447473 683010 589303 221335 496838 -39566 539245 89166 653727 596827 -24629 598000 265632 677476 549455 393238 -52123 184878 218993 233018 517956 -20139 262634 398368 116050 365150 498111 523735 -42338 353434 91010 -55964 364109 363986 553602 411796 587320 698174 44909 475740 196469 228936 477488 625676 357969 92661 697012 480449 387916 691189 163614 357570 574577 587662 443554 449208 -14406 343806 641209 14819 224962 570244 150036 427694 362251 574637 613080 -29393 36301 16084 291518 214030 147507 -49577 62076 288435 -55560 145590 126382 303059 26578 680385 156346 93416 147684 482266 65651 -38917 p
  781  git clone https://github.com/gemartin99/Push-Swap-Tester.git tester
  782  git clone https://github.com/Niimphu/push_swap_visualiser.git visualizer
  783  ls
  784  chmod 777 checker_linux
  785  bash push_swap_test_linux.sh
  786  make
  787  make re
  788  bash push_swap_test_linux.sh
  789  cd visualizer
  790  ls
  791  tar -xzvf psv_linux.tar.gz
  792  ls
  793  make
  794  bash push_swap_test_linux.sh
  795  make
  796  bash push_swap_test_linux.sh
  797  ./push_swap 111111111111111111111111111
  798  make
  799  ./push_swap 111111111111111111111111111
  800  bash push_swap_test_linux.sh
  801  cd ..
  802  ./push_swap ""
  803  ./push_swap 111-1 2 -3
  804  ./push_swap 111+1
  805  ./push_swap ""
  806  ./push_swap
  807  make re
  808  ./push_swap 111+1
  809  ./push_swap ""
  810  ./push_swap 47621 418451 296352 589654 373461 461465 679424 61015 642467 574640 93482 629951 447473 683010 589303 221335 496838 -39566 539245 89166 653727 596827 -24629 598000 265632 677476 549455 393238 -52123 184878 218993 233018 517956 -20139 262634 398368 116050 365150 498111 523735 -42338 353434 91010 -55964 364109 363986 553602 411796 587320 698174 44909 475740 196469 228936 477488 625676 357969 92661 697012 480449 387916 691189 163614 357570 574577 587662 443554 449208 -14406 343806 641209 14819 224962 570244 150036 427694 362251 574637 613080 -29393 36301 16084 291518 214030 147507 -49577 62076 288435 -55560 145590 126382 303059 26578 680385 156346 93416 147684 482266 65651 -38917 
  811  bash push_swap_test_linux.sh
  812  make re
  813  ./push_swap ""
  814  bash push_swap_test_linux.sh
  815  ./push_swap "" 077
  816  ./push_swap "" 8
  817  ./push_swap "" 8 97 67
  818  ./push_swap "" 97 8  67
  819  make re
  820  ./push_swap "" 97 8  67
  821  bash push_swap_test_linux.sh
  822  make re
  823  ./push_swap "" 97 8  67
  824  ./push_swap "" 97 8  67 754 36 25 326 25 547
  825  ./push_swap "" 97 8  67
  826  make re
  827  bash push_swap_test_linux.sh
  828  ./push_swap "" 97 8  67
  829  ./push_swap "" 97 8  67 754 36 25 326 25 547
  830  ./push_swap  97 8  67 754 36 25 326 25 547
  831  ./push_swap "" 97 8  67 754 36 25 326  547
  832  ./push_swap ""
  833  make re
  834  ./push_swap "" 97 8  67 754 36 25 326  547
  835  bash push_swap_test_linux.sh
  836  touch true_cost.c
  837  bash push_swap_test_linux.sh
  838  ./push_swap
  839  ./push_swap ""
  840  ./push_swap "" 797
  841  ./push_swap "" 797 78
  842  ./push_swap "" 797 78 "65" 5
  843  ARG="35855 80849 19612 20671 -1599 12772 47332 6594 38777 1891 50510 36629 39503 56902 61958 99704 37657 21763 6213 94234 7443 32266 44414 16408 48361 7211 83147 5565 67749 16586 29916 81643 48070 94527 48911 -3551 84683 37462 88037 64040 83017 81597 62836 75346 32684 49951 91341 54008 90006 36781 91056 94907 85858 4071 -1685 11007 13319 8601 82294 29509 -1053 53292 78997 -3330 42318 23398 30030 31059 -3499 20688 7345 -486 59367 44255 11877 30597 17503 63034 7025 77815 37761 64338 20785 75455 -874 31950 65034 -144 94419 77874 85606 18288 74262 56226 63534 76116 14983 29530 3731 55185 47224 -9828 11229 40833 5827 93897 84286 81620 27549 69425 64984 19131 74542 76536 43522 77984 84704 33333 82311 2142 69367 3457 30851 24238 63538 6302 59660 71177 15090 84452 90176 4663 9203 89657 83086 95307 82745 33584 25605 70909 72386 52872 12907 71973 20340 5592 34077 99572 21454 77011 3339 83829 34903 10651 97808 -3827 99682 66162 49596 56632 25900 80595 44515 7804 5247 28368 47458 50921 90037 29080 84532 51449 76703 84282 97976 41550 76160 37973 -9231 90685 62446 59417 63461 89161 58063 57602 36068 -6283 62816 39792 38516 76238 37943 21786 19973 68787 88964 37763 -3239 11323 86635 64242 67951 48049 -4019 79253 52515 -9073 89527 81031 44855 77022 85215 62438 95043 85795 82733 82696 64513 15318 96491 -9093 44784 48818 75446 33456 10998 99118 5522 31512 35732 84396 55935 74002 31800 3162 -4614 32815 40828 87240 14997 23044 37885 96870 43378 7838 96002 5569 11576 59527 8398 41994 86592 95892 13593 6487 8296 -3679 35419 7968 80398 68809 -219 48033 73988 32895 94289 50775 91139 10205 58406 31948 37149 32939 -6426 37382 12859 3768 42850 84607 72176 85459 2113 76970 87388 91350 -3570 -9976 5354 81981 24297 56841 68854 83949 17505 35874 4197 19517 10163 96349 68026 73846 2702 6803 3878 56815 27704 75363 17826 25950 19962 89818 87041 86675 62355 65784 90777 14442 48918 26599 2680 -149 15524 29672 67027 88795 -4678 66674 28926 86996 30934 27565 13621 80111 11342 -8775 79998 11551 5151 19432 -9256 6313 -7232 85334 10615 33813 24748 65560 17833 47438 31973 86062 59959 14717 63096 -8655 64161 -4800 31177 70682 50268 70446 80669 96881 11 94912 69505 13843 16816 44434 70833 33768 26344 92686 -905 6001 95099 57083 93205 56410 81673 7512 37926 35834 30371 25792 61069 -4860 90317 52370 21096 47621 5665 92701 37189 71338 12745 -7780 21856 79646 62641 84493 46729 84887 89056 -1420 87829 85737 84512 30465 -2476 99694 78070 -9999 83452 88811 33533 74320 79176 55663 71412 54230 17981 32051 37726 70889 43618 47290 83194 99388 21179 -2268 5428 37358 48991 19794 54724 46453 62671 53928 -2034 -2842 89051 68002 33215 44055 72856 25178 58131 81573 45528 39691 262 39628 25818 6134 46009 7747 89211 66749 41432 93702 51325 33073 52777 74375 54323 31854 49041 24618 12147 -6075 14137 24846 51208 37511 97884 17284 7858 45310 92441 55028 -1296 89031 71816 71486 27879 51693 44209 58022 23979 9804 5933 69164 61925 27087 28982 53604 76967 59336"; ./push_swap $ARG | ./checker_linux $ARG 
  844  ARG="35855 80849 19612 20671 -1599 12772 47332 6594 38777 1891 50510 36629 39503 56902 61958 99704 37657 21763 6213 94234 7443 32266 44414 16408 48361 7211 83147 5565 67749 16586 29916 81643 48070 94527 48911 -3551 84683 37462 88037 64040 83017 81597 62836 75346 32684 49951 91341 54008 90006 36781 91056 94907 85858 4071 -1685 11007 13319 8601 82294 29509 -1053 53292 78997 -3330 42318 23398 30030 31059 -3499 20688 7345 -486 59367 44255 11877 30597 17503 63034 7025 77815 37761 64338 20785 75455 -874 31950 65034 -144 94419 77874 85606 18288 74262 56226 63534 76116 14983 29530 3731 55185 47224 -9828 11229 40833 5827 93897 84286 81620 27549 69425 64984 19131 74542 76536 43522 77984 84704 33333 82311 2142 69367 3457 30851 24238 63538 6302 59660 71177 15090 84452 90176 4663 9203 89657 83086 95307 82745 33584 25605 70909 72386 52872 12907 71973 20340 5592 34077 99572 21454 77011 3339 83829 34903 10651 97808 -3827 99682 66162 49596 56632 25900 80595 44515 7804 5247 28368 47458 50921 90037 29080 84532 51449 76703 84282 97976 41550 76160 37973 -9231 90685 62446 59417 63461 89161 58063 57602 36068 -6283 62816 39792 38516 76238 37943 21786 19973 68787 88964 37763 -3239 11323 86635 64242 67951 48049 -4019 79253 52515 -9073 89527 81031 44855 77022 85215 62438 95043 85795 82733 82696 64513 15318 96491 -9093 44784 48818 75446 33456 10998 99118 5522 31512 35732 84396 55935 74002 31800 3162 -4614 32815 40828 87240 14997 23044 37885 96870 43378 7838 96002 5569 11576 59527 8398 41994 86592 95892 13593 6487 8296 -3679 35419 7968 80398 68809 -219 48033 73988 32895 94289 50775 91139 10205 58406 31948 37149 32939 -6426 37382 12859 3768 42850 84607 72176 85459 2113 76970 87388 91350 -3570 -9976 5354 81981 24297 56841 68854 83949 17505 35874 4197 19517 10163 96349 68026 73846 2702 6803 3878 56815 27704 75363 17826 25950 19962 89818 87041 86675 62355 65784 90777 14442 48918 26599 2680 -149 15524 29672 67027 88795 -4678 66674 28926 86996 30934 27565 13621 80111 11342 -8775 79998 11551 5151 19432 -9256 6313 -7232 85334 10615 33813 24748 65560 17833 47438 31973 86062 59959 14717 63096 -8655 64161 -4800 31177 70682 50268 70446 80669 96881 11 94912 69505 13843 16816 44434 70833 33768 26344 92686 -905 6001 95099 57083 93205 56410 81673 7512 37926 35834 30371 25792 61069 -4860 90317 52370 21096 47621 5665 92701 37189 71338 12745 -7780 21856 79646 62641 84493 46729 84887 89056 -1420 87829 85737 84512 30465 -2476 99694 78070 -9999 83452 88811 33533 74320 79176 55663 71412 54230 17981 32051 37726 70889 43618 47290 83194 99388 21179 -2268 5428 37358 48991 19794 54724 46453 62671 53928 -2034 -2842 89051 68002 33215 44055 72856 25178 58131 81573 45528 39691 262 39628 25818 6134 46009 7747 89211 66749 41432 93702 51325 33073 52777 74375 54323 31854 49041 24618 12147 -6075 14137 24846 51208 37511 97884 17284 7858 45310 92441 55028 -1296 89031 71816 71486 27879 51693 44209 58022 23979 9804 5933 69164 61925 27087 28982 53604 76967 59336"; ./push_swap $ARG | wc -l
  845  ARG="145380 40969 600546 743381 341878 882171 365443 426330 61236 719164 415959 193804 728622 801642 572353 701471 -2656 734994 353452 152392 746302 382800 478192 633402 44198 73500 190733 445379 764567 380259 391672 215984 717376 -7314 719067 244723 426612 204716 137123 188001 53838 156861 779204 171529 680042 635032 322680 467482 308304 64058 654422 669646 607098 723483 246896 452066 232165 56623 622676 103220 302027 314604 573016 311261 190940 632572 60657 455890 168562 477874 -9803 698086 811159 640196 745361 893351 592214 393253 -2317 832770 829443 71330 90103 211569 202600 840812 827838 135267 142269 678747 125488 878415 820547 365082 308704 309110 312030 17844 399008 397629 207768 478536 830699 500279 884558 316711 357947 839220 544516 211774 71817 138466 109720 159053 46128 855830 789341 206651 875355 678053 424355 131743 760057 603921 237366 182716 470263 43444 211913 419020 720922 316399 255331 263705 183631 203434 893606 16591 664723 546698 97724 62282 825637 203611 213790 699965 46580 49789 706298 866317 432653 102610 83026 862904 268368 208420 826720 834756 205445 640513 401410 521598 817922 110510 784100 315443 642363 284860 549387 201040 208664 26600 87131 577398 631197 299646 461616 359172 634759 828376 796098 768965 309325 459297 140476 500806 97507 424238 290768 273511 627414 861018 869046 808164 333517 54984 880730 4796 190855 570582 587546 23055 797293 113906 208512 476959 838110 25842 110266 553566 15259 863907 100280 596554 26289 375795 281888 477660 163414 488122 100219 586425 539350 766611 213737 366936 51768 475295 405290 506844 122027 649527 729263 520733 78165 5836 24275 790448 607827 462667 821406 57722 515485 777752 456555 287131 10106 476619 25030 377935 36446 877626 262368 664485 776922 541072 813794 539061 564118 512800 841690 591623 583213 85651 104631 35969 762506 133096 790869 859199 435105 158801 459076 756869 494912 82281 876765 631087 896251 453766 784329 712481 637250 92210 624030 654337 96903 571913 278247 348178 48416 446242 371653 661001 357860 861897 274852 744860 461446 665988 293212 22419 858487 652791 133252 378168 96567 123955 167201 751389 472630 218918 832110 867433 55450 647294 567670 491087 532293 169636 897603 602958 228813 319629 61664 894571 106134 634717 822977 67541 815266 274118 651765 856356 313225 673201 364698 681365 264111 359272 782972 357643 172543 339898 814585 320516 896943 885109 525640 315559 440605 499776 771962 552428 726404 753683 188967 532030 372598 838249 530010 629646 590572 206411 400475 354624 846874 420826 761182 676198 67100 842356 275494 84621 775355 813241 12855 305843 99029 823137 767319 454510 303863 239706 848842 122581 810784 871778 583957 701578 388 237246 92820 728625 757061 565252 589211 765923 150873 182170 895290 651215 497741 794501 730594 725966 695139 535276 420328 608892 -6934 780074 3093 708647 447589 872141 815302 16409 895864 189116 582398 831104 228304 436409 37549 190661 93165 582248 236976 260190 513409 431802 16974 567570 99476 781069 473767 204201 169358 44389 739802 756534 361716 102670 383217 78481 712124 77152 87275 480138 100726 106503 716834 207369 221943 260068 560011 475821 140303 177052 872740 749729 514270 121601 228559 827515 587196 526131 213474 357202 222427 726047 352257 -8775 -1087 423974 519730 360758 184681 338134 145628 374729 307832 34384 293213 592426 451337 9246 21611 710111 249831 370618 273084 794515 628699 670862 49913 492865 63922 793924"; ./push_swap $ARG | wc -l
  846  ARG=""; ./push_swap $ARG | ./checker_linux $ARG 
  847  ARG="6"; ./push_swap $ARG | ./checker_linux $ARG 
  848  ARG=" 5  4  d  6"; ./push_swap $ARG | ./checker_linux $ARG 
  849  ARG=""; ./push_swap $ARG | ./checker_linux $ARG 
  850  ARG=" 5  4                                  6"; ./push_swap $ARG | ./checker_linux $ARG 
  851  ./push_swap 0 one 2 3
  852  make re
  853  ./push_swap 0 one 2 3
  854  ARG=" 5  4                                  6"; ./push_swap $ARG | ./checker_linux $ARG 
  855  make re
  856  touch maktxt.txt
  857  make re
  858  make fclean
  859  make re
  860  ls
  861  cd ..
  862  ls
  863  cd libft
  864  ls
  865  make re
  866  ls
  867  cd ..
  868  ls
  869  cd pushswap
  870  ls
  871  cd inc
  872  ls
  873  make re
  874  ls
  875  cd libft
  876  make re
  877  cd ..
  878  make re
  879  ./push_swap 0 one 2 3
  880  ./push_swap 0 2 3 67 46 356 266 24667 25347
  881  make re
  882  ./push_swap 0 2 3 67 46 356 266 24667 25347
  883  ARG=" 5  4                                  6"; ./push_swap $ARG | ./checker_linux $ARG 
  884  ARG=" 5  4                   97 65 46               6"; ./push_swap $ARG | ./checker_linux $ARG 
  885  ARG=" 5  4         p          97 65 46               6"; ./push_swap $ARG | ./checker_linux $ARG 
  886  ARG=" 5  4                  97 65 46               6"; ./push_swap $ARG | ./checker_linux $ARG 
  887  ARG=" 5  4                  97 65 46         6      6"; ./push_swap $ARG | ./checker_linux $ARG 
  888  ARG=" 5  4                  97 65 46         -6      6"; ./push_swap $ARG | ./checker_linux $ARG 
  889  ARG=" 5  4                  97 65 46-9         -6      6"; ./push_swap $ARG | ./checker_linux $ARG 
  890  ARG=" 5  4                  97 65 46 -9         -6      6"; ./push_swap $ARG | ./checker_linux $ARG 
  891  make
  892  ./push_swap "415 346 157 420 461 178 158 154 302 160 74 166 345 46 119 303 310 242 452 21 369 20 229 213 2 61 96 9 467 64 171 78 270 396 304 204 409 494 215 479 114 449 87 385 297 22 454 14 498 49 128 194 347 323 236 384 130 75 54 311 51 12 381 499 176 59 218 444 113 179 286 305 88 263 408 67 300 37 117 13 314 359 98 354 269 214 402 473 438 155 344 253 443 432 19 391 366 349 95 162 77 370 123 108 118 133 435 220 430 57 225 388 412 34 363 497 390 476 164 460 337 211 121 279 110 351 152 301 0 405 437 379 264 35 188 357 428 139 329 445 440 393 181 143 111 127 206 358 406 23 367 330 86 115 58 459 277 448 56 109 138 271 322 184 274 407 246 289 278 170 153 261 316 221 151 280 383 313 40 16 63 120 332 32 441 73 92 453 7 201 291 53 360 475 180 429 85 205 191 8 328 312 106 317 198 306 470 378 327 262 342 489 427 243 450 296 394 500 287 285 410 463 4 368 325 223 483 374 197 418 140 72 89 401 210 318 212 320 365 338 94 326 66 62 267 156 81 231 29 83 484 471 353 416 258 387 469 433 273 472 307 102 395 446 195 15 414 411 200 93 90 91 331 447 466 477 259 266 208 474 45 324 141 362 112 488 341 340 292 33 190 172 254 350 132 101 43 434 361 491 230 288 55 403 226 464 495 371 356 284 375 404 69 487 481 107 165 192 382 217 27 308 339 398 41 355 26 423 17 255 42 290 240 202 169 60 239 386 372 122 175 265 177 159 282 147 257 334 247 442 426 260 38 146 268 299 48 294 28 373 70 183 492 71 76 417 237 30 222 52 65 103 421 275 478 97 135 335 232 439 295 256 252 309 455 400 490 281 24 272 227 451 100 124 343 216 6 104 79 380 209 364 80 293 168 298 250 241 25 36 174 44 392 425 185 126 422 233 224 18 424 319 238 161 163 321 413 144 397 276 456 376 462 352 68 389 186 465 193 149 129 336 145 348 47 436 399 189 196 31 468 99 219 457 84 333 482 82 105 10 150 136 419 496 148 3 493 251 431 5 480 248 486 125 228 134 249 377 315 131 485 187 173 234 50 182 235 116 244 458 245 137 203 167 1 207 142 11 199 283"
  893  ./push_swapoutput.txt
  894  git clone --recursive https://github.com/Vikingu-del/Push_swap.git erik_pushswap
  895  git clone --recursive gh repo clone Vikingu-del/Push_swap erik
  896  gh repo clone Vikingu-del/Push_swap
  897  git --recursive Vikingu-del/Push_swap 
  898  ./push_swap "-304068 654595 210859 56889 -171116 217127 394083 202849 376381 382730 731066 625139 -747978 11010 -327559 -310574 -281385 -591879 99510 -485884 703474 -335097 570871 -562540 137267 -149594 -114178 14646 -604067 82525 655495 -595305 -715700 -3900 -81655 212152 -456635 -420584 184525 633578 -554304 -220645 -690357 -391017 632346 344626 155688 8084 -720820 -330517 74369 162564 37949 -238481 252261 622316 661912 -30543 373237 267811 -284283 488345 89545 691889 -168449 -339882 53207 -231716 715059 712137 -684921 -724965 -588010 -433020 772274 -234532 239093 764958 503146 662691 396322 316103 -24918 622436 580354 323583 142756 -24805 172496 102239 601020 -428356 567196 -602987 -27352 -100739 -380808 -684901 362192 -680358 333559 585770 648533 -79768 -656982 270494 692681 139149 -358643 -243749 82516 493754 -556431 225907 -613389 4815 -592224 373701 -177488 -86240 683065 675769 97950 200786 265164 285135 681313 -221211 237891 682827 374113 568288 -590639 447592 -607211 12934 503130 618159 -548165 718592 554423 579278 -133748 649136 -552200 245036 -455125 -586704 -582968 -648519 538129 -227032 660056 200585 -570957 184552 573501 752759 377106 327507 433239 95165 527676 200522 142457 134542 559367 -591666 -33757 80114 515650 648275 80913 398150 514253 203513 99377 66563 254789 -473591 152488 -461499 141860 -326741 -630533 -191806 -707348 261645 -333371 -51832 -103616 641371 387375 558630 -653855 530643 -63303 560411 -397264 766823 -135332 456736 327644 -600290 332545 720467 775613 667500 372338 -600580 642592 -660224 -479567 -234520 -533847 120162 -135589 -453824 502469 641979 178354 316412 -519048 517883 91181 76321 770532 328528 114616 687811 -87746 432449 -709286 699788 529361 59047 764354 28967 -122821 -677777 251289 -325537 389081 269571 625070 -335078 151939 -725645 -195539 -560502 -422235 56103 470123 72898 559705 441636 -37071 585053 -88334 -558768 130532 195271 405829 -206120 -554981 341009 704075 -493634 -599121 -585680 -595420 698901 130875 498708 -646414 -682883 -46463 -134800 420186 -36720 -697345 514656 -601396 -90024 -619833 56960 336697 -542113 353794 -238193 -385608 317872 -552767 -624231 208819 -326133 -631854 480529 346425 673626 -310340 -645469 -713773 111506 492037 370016 659096 566042 396084 299360 -605834 5862 -69674 -714998 557501 -78319 -607287 156713 -521774 683902 589871 -449389 169740 -21511 -369384 -367401 617705 -189609 100290 -644631 201351 366951 -274323 571569 -456011 661771 426575 92877 490295 134888 471243 585543 20109 185185 -313137 -471153 433848 188213 -39383 16723 60995 -162655 664816 -337766 -586498 -418565 -205760 613794 -253647 -602563 624795 442155 -635287 -352538 551615 413500 763027 -393655 169230 8770 -543038 -734488 -616021 -739499 345011 449527 406971 -305330 336008 -121980 -96991 -183024 645567 779759 -102398 717445 84277 381103 32352 -176931 -560009 -557370 -678972 -558401 118831 -324589 196106 -164107 -309158 139163 117514 -700443 660475 -472462 610453 403737 24675 -595704 297137 -201202 760153 33102 -4658 59798 -381750 106909 -126793 -108494 -595181 599381 -740535 -41302 146027 -96882 -123379 -550604 -353613 398118 109170 626639 280583 651215 528784 490658 340134 -258377 -265593 625050 108958 483381 68763 -429913 -358239 -413850 -243929 277699 -1969 613355 -649815 638744 374878 -155251 -411115 -650574 -528181 -518072 672321 723542 162516 -256572 -150016 781884 -149728 721499 755796 209592 779588 296790 -134451 -445574 715497 -38972 429375 -374417 41467 303393 -497443 363186 -167078 -574019 219602 -423415 -744344 -606747 657683 384039 319966 603690 155149 -736422 616506 -686163 -699706 344046 -418832 -601740 548893 -564788 380252 -567663 " | > output.txt
  899  clear
  900  ARG="-304068 654595 210859 56889 -171116 217127 394083 202849 376381 382730 731066 625139 -747978 11010 -327559 -310574 -281385 -591879 99510 -485884 703474 -335097 570871 -562540 137267 -149594 -114178 14646 -604067 82525 655495 -595305 -715700 -3900 -81655 212152 -456635 -420584 184525 633578 -554304 -220645 -690357 -391017 632346 344626 155688 8084 -720820 -330517 74369 162564 37949 -238481 252261 622316 661912 -30543 373237 267811 -284283 488345 89545 691889 -168449 -339882 53207 -231716 715059 712137 -684921 -724965 -588010 -433020 772274 -234532 239093 764958 503146 662691 396322 316103 -24918 622436 580354 323583 142756 -24805 172496 102239 601020 -428356 567196 -602987 -27352 -100739 -380808 -684901 362192 -680358 333559 585770 648533 -79768 -656982 270494 692681 139149 -358643 -243749 82516 493754 -556431 225907 -613389 4815 -592224 373701 -177488 -86240 683065 675769 97950 200786 265164 285135 681313 -221211 237891 682827 374113 568288 -590639 447592 -607211 12934 503130 618159 -548165 718592 554423 579278 -133748 649136 -552200 245036 -455125 -586704 -582968 -648519 538129 -227032 660056 200585 -570957 184552 573501 752759 377106 327507 433239 95165 527676 200522 142457 134542 559367 -591666 -33757 80114 515650 648275 80913 398150 514253 203513 99377 66563 254789 -473591 152488 -461499 141860 -326741 -630533 -191806 -707348 261645 -333371 -51832 -103616 641371 387375 558630 -653855 530643 -63303 560411 -397264 766823 -135332 456736 327644 -600290 332545 720467 775613 667500 372338 -600580 642592 -660224 -479567 -234520 -533847 120162 -135589 -453824 502469 641979 178354 316412 -519048 517883 91181 76321 770532 328528 114616 687811 -87746 432449 -709286 699788 529361 59047 764354 28967 -122821 -677777 251289 -325537 389081 269571 625070 -335078 151939 -725645 -195539 -560502 -422235 56103 470123 72898 559705 441636 -37071 585053 -88334 -558768 130532 195271 405829 -206120 -554981 341009 704075 -493634 -599121 -585680 -595420 698901 130875 498708 -646414 -682883 -46463 -134800 420186 -36720 -697345 514656 -601396 -90024 -619833 56960 336697 -542113 353794 -238193 -385608 317872 -552767 -624231 208819 -326133 -631854 480529 346425 673626 -310340 -645469 -713773 111506 492037 370016 659096 566042 396084 299360 -605834 5862 -69674 -714998 557501 -78319 -607287 156713 -521774 683902 589871 -449389 169740 -21511 -369384 -367401 617705 -189609 100290 -644631 201351 366951 -274323 571569 -456011 661771 426575 92877 490295 134888 471243 585543 20109 185185 -313137 -471153 433848 188213 -39383 16723 60995 -162655 664816 -337766 -586498 -418565 -205760 613794 -253647 -602563 624795 442155 -635287 -352538 551615 413500 763027 -393655 169230 8770 -543038 -734488 -616021 -739499 345011 449527 406971 -305330 336008 -121980 -96991 -183024 645567 779759 -102398 717445 84277 381103 32352 -176931 -560009 -557370 -678972 -558401 118831 -324589 196106 -164107 -309158 139163 117514 -700443 660475 -472462 610453 403737 24675 -595704 297137 -201202 760153 33102 -4658 59798 -381750 106909 -126793 -108494 -595181 599381 -740535 -41302 146027 -96882 -123379 -550604 -353613 398118 109170 626639 280583 651215 528784 490658 340134 -258377 -265593 625050 108958 483381 68763 -429913 -358239 -413850 -243929 277699 -1969 613355 -649815 638744 374878 -155251 -411115 -650574 -528181 -518072 672321 723542 162516 -256572 -150016 781884 -149728 721499 755796 209592 779588 296790 -134451 -445574 715497 -38972 429375 -374417 41467 303393 -497443 363186 -167078 -574019 219602 -423415 -744344 -606747 657683 384039 319966 603690 155149 -736422 616506 -686163 -699706 344046 -418832 -601740 548893 -564788 380252 -567663"; ./push_swap $ARG | wc -l
  901  ./push_swap "-304068 654595 210859 56889 -171116 217127 394083 202849 376381 382730 731066 625139 -747978 11010 -327559 -310574 -281385 -591879 99510 -485884 703474 -335097 570871 -562540 137267 -149594 -114178 14646 -604067 82525 655495 -595305 -715700 -3900 -81655 212152 -456635 -420584 184525 633578 -554304 -220645 -690357 -391017 632346 344626 155688 8084 -720820 -330517 74369 162564 37949 -238481 252261 622316 661912 -30543 373237 267811 -284283 488345 89545 691889 -168449 -339882 53207 -231716 715059 712137 -684921 -724965 -588010 -433020 772274 -234532 239093 764958 503146 662691 396322 316103 -24918 622436 580354 323583 142756 -24805 172496 102239 601020 -428356 567196 -602987 -27352 -100739 -380808 -684901 362192 -680358 333559 585770 648533 -79768 -656982 270494 692681 139149 -358643 -243749 82516 493754 -556431 225907 -613389 4815 -592224 373701 -177488 -86240 683065 675769 97950 200786 265164 285135 681313 -221211 237891 682827 374113 568288 -590639 447592 -607211 12934 503130 618159 -548165 718592 554423 579278 -133748 649136 -552200 245036 -455125 -586704 -582968 -648519 538129 -227032 660056 200585 -570957 184552 573501 752759 377106 327507 433239 95165 527676 200522 142457 134542 559367 -591666 -33757 80114 515650 648275 80913 398150 514253 203513 99377 66563 254789 -473591 152488 -461499 141860 -326741 -630533 -191806 -707348 261645 -333371 -51832 -103616 641371 387375 558630 -653855 530643 -63303 560411 -397264 766823 -135332 456736 327644 -600290 332545 720467 775613 667500 372338 -600580 642592 -660224 -479567 -234520 -533847 120162 -135589 -453824 502469 641979 178354 316412 -519048 517883 91181 76321 770532 328528 114616 687811 -87746 432449 -709286 699788 529361 59047 764354 28967 -122821 -677777 251289 -325537 389081 269571 625070 -335078 151939 -725645 -195539 -560502 -422235 56103 470123 72898 559705 441636 -37071 585053 -88334 -558768 130532 195271 405829 -206120 -554981 341009 704075 -493634 -599121 -585680 -595420 698901 130875 498708 -646414 -682883 -46463 -134800 420186 -36720 -697345 514656 -601396 -90024 -619833 56960 336697 -542113 353794 -238193 -385608 317872 -552767 -624231 208819 -326133 -631854 480529 346425 673626 -310340 -645469 -713773 111506 492037 370016 659096 566042 396084 299360 -605834 5862 -69674 -714998 557501 -78319 -607287 156713 -521774 683902 589871 -449389 169740 -21511 -369384 -367401 617705 -189609 100290 -644631 201351 366951 -274323 571569 -456011 661771 426575 92877 490295 134888 471243 585543 20109 185185 -313137 -471153 433848 188213 -39383 16723 60995 -162655 664816 -337766 -586498 -418565 -205760 613794 -253647 -602563 624795 442155 -635287 -352538 551615 413500 763027 -393655 169230 8770 -543038 -734488 -616021 -739499 345011 449527 406971 -305330 336008 -121980 -96991 -183024 645567 779759 -102398 717445 84277 381103 32352 -176931 -560009 -557370 -678972 -558401 118831 -324589 196106 -164107 -309158 139163 117514 -700443 660475 -472462 610453 403737 24675 -595704 297137 -201202 760153 33102 -4658 59798 -381750 106909 -126793 -108494 -595181 599381 -740535 -41302 146027 -96882 -123379 -550604 -353613 398118 109170 626639 280583 651215 528784 490658 340134 -258377 -265593 625050 108958 483381 68763 -429913 -358239 -413850 -243929 277699 -1969 613355 -649815 638744 374878 -155251 -411115 -650574 -528181 -518072 672321 723542 162516 -256572 -150016 781884 -149728 721499 755796 209592 779588 296790 -134451 -445574 715497 -38972 429375 -374417 41467 303393 -497443 363186 -167078 -574019 219602 -423415 -744344 -606747 657683 384039 319966 603690 155149 -736422 616506 -686163 -699706 344046 -418832 -601740 548893 -564788 380252 -567663 " | > output.txt
  902  cleart
  903  clear
  904  ARG="101 88 93 150 94 248 468 141 485 207 250 82 340 123 127 40 251 10 206 73 316 89 56 295 117 37 193 313 25 330 131 302 349 175 215 74 111 317 338 398 22 419 354 18 136 234 154 270 152 139 293 415 470 297 322 321 158 198 151 319 498 12 370 140 499 262 50 39 444 402 422 247 21 26 371 217 466 335 417 128 396 201 214 274 240 72 41 8 38 115 202 292 315 189 383 166 133 465 228 337 456 0 20 291 64 153 259 341 194 34 92 431 84 364 382 231 102 252 346 174 397 433 49 99 408 238 28 355 19 43 473 385 413 445 384 320 260 7 36 493 95 195 87 294 495 454 3 135 160 258 32 461 334 331 118 129 57 230 97 149 488 244 58 169 168 146 483 183 188 363 333 271 458 80 357 143 11 177 55 490 344 393 116 289 241 449 328 67 308 373 266 162 342 75 288 325 76 65 256 79 255 399 233 305 172 280 236 71 404 185 70 42 345 452 148 220 480 63 453 77 170 107 184 210 387 463 138 113 386 51 245 359 306 30 269 421 109 446 439 277 403 451 358 69 336 4 179 467 91 66 145 434 254 457 176 486 171 242 122 394 284 414 192 497 6 368 304 199 68 120 279 390 395 326 106 263 287 239 226 282 378 85 351 491 155 211 312 440 275 44 59 191 110 61 329 286 108 227 464 441 132 15 352 78 423 430 476 438 481 114 27 23 142 124 389 460 500 208 105 164 409 203 353 324 46 103 224 459 303 187 469 374 350 119 167 272 53 447 427 442 112 379 237 180 17 267 253 48 218 273 98 86 212 130 477 196 311 356 366 435 24 381 200 90 33 156 182 134 443 482 376 347 307 489 369 478 83 213 261 471 432 246 5 424 232 219 268 474 278 428 45 54 221 365 314 300 47 401 327 405 159 225 375 205 223 391 281 62 2 222 283 1 380 100 209 487 121 367 9 126 420 412 425 392 309 161 144 348 125 437 407 496 197 178 276 418 264 416 472 372 190 343 494 492 16 157 204 360 301 60 299 339 243 296 479 323 257 81 448 173 310 406 31 436 361 52 388 14 165 410 455 265 400 104 426 318 235 13 35 285 462 163 229 249 450 137 147 332 181 186 411 377 298 29 290 216 96 475 429 484"; ./push_swap $ARG | wc -l
  905  -v
  906  -vname
  907  ls
  908  -uname
  909  bash push_swap_test_linux.sh
  910  clear
  911  valgrind ./push_swap "-549 -20860 46051 28146 59922 50542 -9968 -11911 -476 -30466 -15651 17414 71059 -5206 60647 -44326 34409 18208 15583 -36988 -26119 51299 47612 10894 52371 -39035 26220 46364 9329 -18626 -43185 33711 9086 25066 41176 -8676 -11771 16238 -32264 68314 21886 42352 17603 -87 54401 34320 1387 19290 67635 62972 9110 9421 32863 -10344 -8150 -9731 29571 -11910 4204 41773 -42602 17253 17718 -38934 2523 48555 -7785 14077 -21870 -1014 53973 -38875 -45354 48335 32126 17260 2438 -35882 -17163 -22214 59731 -40435 -6808 -34573 54424 22968 6456 -37096 -10047 -8820 28407 17967 8940 17358 -21935 -41293 16594 55641 -41799 -27580 25086 -5049 2678 -14865 -17332 3506 9890 -6654 36305 3991 -9214 41299 38856 -22973 6165 -39607 -11709 -2152 24572 67447 -25096 38378 34827 49308 -34569 45263 25956 11670 57135 -4497 11569 6857 43711 5799 36023 48178 38486 41467 -34914 67972 50993 -17121 64694 -30734 5391 56428 -38797 -40182 42005 61004 36375 21700 -25806 -1195 45946 52314 2909 -14472 -23892 -13575 -23562 61241 4369 5523 -41880 58564 -26448 61250 67100 -724 19795 45879 -43205 57355 -11770 26707 15329 49197 -26668 -36920 62979 53711 -25156 13515 -32437 60561 54143 -4389 17756 -931 64829 -23234 -20409 21107 30491 -10556 -44486 -7152 7850 44235 -38209 66503 -18481 37425 65486 -18591 -29427 16123 46613 -2936 7059 28723 -5903 -15608 18294 23710 -41260 -12052 -8376 63293 18319 8838 12747 15463 -45279 56716 3485 -1043 4968 47165 54313 41333 29353 14605 -40532 -28116 16826 -20040 34771 65616 30876 25731 -39619 26384 -9708 39340 7634 27454 54206 21480 3072 10402 39876 54757 14700 48449 -19515 37669 33300 7824 31232 21513 345 5048 51956 64495 -34057 3650 -730 66386 51964 -25513 61231 -13427 -37721 11359 7220 -11077 72353 62695 -21886 -11939 55728 63532 52224 51633 -19397 15538 61771 27088 20164 -28972 59137 57783 13779 -19510 24917 58431 62511 3622 64798 -25854 -18447 -2369 -28924 1433 -27353 -6657 -43949 64838 -39660 38784 -9488 -13331 -16915 43008 71497 -21147 66768 -43739 -20570 51806 -29395 -27207 43572 66153 55988 34338 -26336 34918 -39005 -35488 59806 46249 -27411 55139 -6194 -5205 26621 -7435 40918 47993 -4017 -41155 55830 48753 23643 -34812 18277 40203 -17773 -12411 -22291 -16056 -3283 13749 6647 10628 2236 -32687 52042 65739 -3831 7784 60928 27576 36061 9434 -19635 8775 24475 5292 -16454 48035 10182 -42408 -22405 -27154 16205 68474 7076 14951 -8586 -19739 -37591 -13959 37757 12074 18501 -45224 -13832 -44403 56210 42133 -7049 10124 -5790 -14699 -2367 71998 19932 -44049 8590 14372 64083 58488 19477 21406 -32027 30635 16372 -37184 -7983 25462 53463 60168 57758 19295 4069 -7708 6254 -39361 55612 32896 -18799 12562 6304 2313 35158 9129 59836 14707 27312 70139 11916 -32826 -35265 23085 -19984 57060 1559 12192 -34031 56293 67040 -44752 -7340 -1268 -3693 -1682 6070 -39609 28649 17025 9237 -4194 67586 11216 49467 69184 44675 69124 27092 -43789 44486 45265 45269 -17476 -3288 14450 55691 -13661 17533 56904 43383 58841 -32540 50787 40981 -4641 2553 32283 -30715 -17087 63827 9833 58703 16601 14469 25903 65796 18426 -42987 23467 69759 -33 13974 31025 36026 -31136"
  912  make fclean
  913  make re
  914  valgrind ./push_swap "-549 -20860 46051 28146 59922 50542 -9968 -11911 -476 -30466 -15651 17414 71059 -5206 60647 -44326 34409 18208 15583 -36988 -26119 51299 47612 10894 52371 -39035 26220 46364 9329 -18626 -43185 33711 9086 25066 41176 -8676 -11771 16238 -32264 68314 21886 42352 17603 -87 54401 34320 1387 19290 67635 62972 9110 9421 32863 -10344 -8150 -9731 29571 -11910 4204 41773 -42602 17253 17718 -38934 2523 48555 -7785 14077 -21870 -1014 53973 -38875 -45354 48335 32126 17260 2438 -35882 -17163 -22214 59731 -40435 -6808 -34573 54424 22968 6456 -37096 -10047 -8820 28407 17967 8940 17358 -21935 -41293 16594 55641 -41799 -27580 25086 -5049 2678 -14865 -17332 3506 9890 -6654 36305 3991 -9214 41299 38856 -22973 6165 -39607 -11709 -2152 24572 67447 -25096 38378 34827 49308 -34569 45263 25956 11670 57135 -4497 11569 6857 43711 5799 36023 48178 38486 41467 -34914 67972 50993 -17121 64694 -30734 5391 56428 -38797 -40182 42005 61004 36375 21700 -25806 -1195 45946 52314 2909 -14472 -23892 -13575 -23562 61241 4369 5523 -41880 58564 -26448 61250 67100 -724 19795 45879 -43205 57355 -11770 26707 15329 49197 -26668 -36920 62979 53711 -25156 13515 -32437 60561 54143 -4389 17756 -931 64829 -23234 -20409 21107 30491 -10556 -44486 -7152 7850 44235 -38209 66503 -18481 37425 65486 -18591 -29427 16123 46613 -2936 7059 28723 -5903 -15608 18294 23710 -41260 -12052 -8376 63293 18319 8838 12747 15463 -45279 56716 3485 -1043 4968 47165 54313 41333 29353 14605 -40532 -28116 16826 -20040 34771 65616 30876 25731 -39619 26384 -9708 39340 7634 27454 54206 21480 3072 10402 39876 54757 14700 48449 -19515 37669 33300 7824 31232 21513 345 5048 51956 64495 -34057 3650 -730 66386 51964 -25513 61231 -13427 -37721 11359 7220 -11077 72353 62695 -21886 -11939 55728 63532 52224 51633 -19397 15538 61771 27088 20164 -28972 59137 57783 13779 -19510 24917 58431 62511 3622 64798 -25854 -18447 -2369 -28924 1433 -27353 -6657 -43949 64838 -39660 38784 -9488 -13331 -16915 43008 71497 -21147 66768 -43739 -20570 51806 -29395 -27207 43572 66153 55988 34338 -26336 34918 -39005 -35488 59806 46249 -27411 55139 -6194 -5205 26621 -7435 40918 47993 -4017 -41155 55830 48753 23643 -34812 18277 40203 -17773 -12411 -22291 -16056 -3283 13749 6647 10628 2236 -32687 52042 65739 -3831 7784 60928 27576 36061 9434 -19635 8775 24475 5292 -16454 48035 10182 -42408 -22405 -27154 16205 68474 7076 14951 -8586 -19739 -37591 -13959 37757 12074 18501 -45224 -13832 -44403 56210 42133 -7049 10124 -5790 -14699 -2367 71998 19932 -44049 8590 14372 64083 58488 19477 21406 -32027 30635 16372 -37184 -7983 25462 53463 60168 57758 19295 4069 -7708 6254 -39361 55612 32896 -18799 12562 6304 2313 35158 9129 59836 14707 27312 70139 11916 -32826 -35265 23085 -19984 57060 1559 12192 -34031 56293 67040 -44752 -7340 -1268 -3693 -1682 6070 -39609 28649 17025 9237 -4194 67586 11216 49467 69184 44675 69124 27092 -43789 44486 45265 45269 -17476 -3288 14450 55691 -13661 17533 56904 43383 58841 -32540 50787 40981 -4641 2553 32283 -30715 -17087 63827 9833 58703 16601 14469 25903 65796 18426 -42987 23467 69759 -33 13974 31025 36026 -31136"
  915  norminette
  916  valgrind ./push_swap "-549 -20860 46051 28146 59922 50542 -9968 -11911 -476 -30466 -15651 17414 71059 -5206 60647 -44326 34409 18208 15583 -36988 -26119 51299 47612 10894 52371 -39035 26220 46364 9329 -18626 -43185 33711 9086 25066 41176 -8676 -11771 16238 -32264 68314 21886 42352 17603 -87 54401 34320 1387 19290 67635 62972 9110 9421 32863 -10344 -8150 -9731 29571 -11910 4204 41773 -42602 17253 17718 -38934 2523 48555 -7785 14077 -21870 -1014 53973 -38875 -45354 48335 32126 17260 2438 -35882 -17163 -22214 59731 -40435 -6808 -34573 54424 22968 6456 -37096 -10047 -8820 28407 17967 8940 17358 -21935 -41293 16594 55641 -41799 -27580 25086 -5049 2678 -14865 -17332 3506 9890 -6654 36305 3991 -9214 41299 38856 -22973 6165 -39607 -11709 -2152 24572 67447 -25096 38378 34827 49308 -34569 45263 25956 11670 57135 -4497 11569 6857 43711 5799 36023 48178 38486 41467 -34914 67972 50993 -17121 64694 -30734 5391 56428 -38797 -40182 42005 61004 36375 21700 -25806 -1195 45946 52314 2909 -14472 -23892 -13575 -23562 61241 4369 5523 -41880 58564 -26448 61250 67100 -724 19795 45879 -43205 57355 -11770 26707 15329 49197 -26668 -36920 62979 53711 -25156 13515 -32437 60561 54143 -4389 17756 -931 64829 -23234 -20409 21107 30491 -10556 -44486 -7152 7850 44235 -38209 66503 -18481 37425 65486 -18591 -29427 16123 46613 -2936 7059 28723 -5903 -15608 18294 23710 -41260 -12052 -8376 63293 18319 8838 12747 15463 -45279 56716 3485 -1043 4968 47165 54313 41333 29353 14605 -40532 -28116 16826 -20040 34771 65616 30876 25731 -39619 26384 -9708 39340 7634 27454 54206 21480 3072 10402 39876 54757 14700 48449 -19515 37669 33300 7824 31232 21513 345 5048 51956 64495 -34057 3650 -730 66386 51964 -25513 61231 -13427 -37721 11359 7220 -11077 72353 62695 -21886 -11939 55728 63532 52224 51633 -19397 15538 61771 27088 20164 -28972 59137 57783 13779 -19510 24917 58431 62511 3622 64798 -25854 -18447 -2369 -28924 1433 -27353 -6657 -43949 64838 -39660 38784 -9488 -13331 -16915 43008 71497 -21147 66768 -43739 -20570 51806 -29395 -27207 43572 66153 55988 34338 -26336 34918 -39005 -35488 59806 46249 -27411 55139 -6194 -5205 26621 -7435 40918 47993 -4017 -41155 55830 48753 23643 -34812 18277 40203 -17773 -12411 -22291 -16056 -3283 13749 6647 10628 2236 -32687 52042 65739 -3831 7784 60928 27576 36061 9434 -19635 8775 24475 5292 -16454 48035 10182 -42408 -22405 -27154 16205 68474 7076 14951 -8586 -19739 -37591 -13959 37757 12074 18501 -45224 -13832 -44403 56210 42133 -7049 10124 -5790 -14699 -2367 71998 19932 -44049 8590 14372 64083 58488 19477 21406 -32027 30635 16372 -37184 -7983 25462 53463 60168 57758 19295 4069 -7708 6254 -39361 55612 32896 -18799 12562 6304 2313 35158 9129 59836 14707 27312 70139 11916 -32826 -35265 23085 -19984 57060 1559 12192 -34031 56293 67040 -44752 -7340 -1268 -3693 -1682 6070 -39609 28649 17025 9237 -4194 67586 11216 49467 69184 44675 69124 27092 -43789 44486 45265 45269 -17476 -3288 14450 55691 -13661 17533 56904 43383 58841 -32540 50787 40981 -4641 2553 32283 -30715 -17087 63827 9833 58703 16601 14469 25903 65796 18426 -42987 23467 69759 -33 13974 31025 36026 -31136" | > output.txt
  917  make re
  918  valgrind ./push_swap "-549 -20860 46051 28146 59922 50542 -9968 -11911 -476 -30466 -15651 17414 71059 -5206 60647 -44326 34409 18208 15583 -36988 -26119 51299 47612 10894 52371 -39035 26220 46364 9329 -18626 -43185 33711 9086 25066 41176 -8676 -11771 16238 -32264 68314 21886 42352 17603 -87 54401 34320 1387 19290 67635 62972 9110 9421 32863 -10344 -8150 -9731 29571 -11910 4204 41773 -42602 17253 17718 -38934 2523 48555 -7785 14077 -21870 -1014 53973 -38875 -45354 48335 32126 17260 2438 -35882 -17163 -22214 59731 -40435 -6808 -34573 54424 22968 6456 -37096 -10047 -8820 28407 17967 8940 17358 -21935 -41293 16594 55641 -41799 -27580 25086 -5049 2678 -14865 -17332 3506 9890 -6654 36305 3991 -9214 41299 38856 -22973 6165 -39607 -11709 -2152 24572 67447 -25096 38378 34827 49308 -34569 45263 25956 11670 57135 -4497 11569 6857 43711 5799 36023 48178 38486 41467 -34914 67972 50993 -17121 64694 -30734 5391 56428 -38797 -40182 42005 61004 36375 21700 -25806 -1195 45946 52314 2909 -14472 -23892 -13575 -23562 61241 4369 5523 -41880 58564 -26448 61250 67100 -724 19795 45879 -43205 57355 -11770 26707 15329 49197 -26668 -36920 62979 53711 -25156 13515 -32437 60561 54143 -4389 17756 -931 64829 -23234 -20409 21107 30491 -10556 -44486 -7152 7850 44235 -38209 66503 -18481 37425 65486 -18591 -29427 16123 46613 -2936 7059 28723 -5903 -15608 18294 23710 -41260 -12052 -8376 63293 18319 8838 12747 15463 -45279 56716 3485 -1043 4968 47165 54313 41333 29353 14605 -40532 -28116 16826 -20040 34771 65616 30876 25731 -39619 26384 -9708 39340 7634 27454 54206 21480 3072 10402 39876 54757 14700 48449 -19515 37669 33300 7824 31232 21513 345 5048 51956 64495 -34057 3650 -730 66386 51964 -25513 61231 -13427 -37721 11359 7220 -11077 72353 62695 -21886 -11939 55728 63532 52224 51633 -19397 15538 61771 27088 20164 -28972 59137 57783 13779 -19510 24917 58431 62511 3622 64798 -25854 -18447 -2369 -28924 1433 -27353 -6657 -43949 64838 -39660 38784 -9488 -13331 -16915 43008 71497 -21147 66768 -43739 -20570 51806 -29395 -27207 43572 66153 55988 34338 -26336 34918 -39005 -35488 59806 46249 -27411 55139 -6194 -5205 26621 -7435 40918 47993 -4017 -41155 55830 48753 23643 -34812 18277 40203 -17773 -12411 -22291 -16056 -3283 13749 6647 10628 2236 -32687 52042 65739 -3831 7784 60928 27576 36061 9434 -19635 8775 24475 5292 -16454 48035 10182 -42408 -22405 -27154 16205 68474 7076 14951 -8586 -19739 -37591 -13959 37757 12074 18501 -45224 -13832 -44403 56210 42133 -7049 10124 -5790 -14699 -2367 71998 19932 -44049 8590 14372 64083 58488 19477 21406 -32027 30635 16372 -37184 -7983 25462 53463 60168 57758 19295 4069 -7708 6254 -39361 55612 32896 -18799 12562 6304 2313 35158 9129 59836 14707 27312 70139 11916 -32826 -35265 23085 -19984 57060 1559 12192 -34031 56293 67040 -44752 -7340 -1268 -3693 -1682 6070 -39609 28649 17025 9237 -4194 67586 11216 49467 69184 44675 69124 27092 -43789 44486 45265 45269 -17476 -3288 14450 55691 -13661 17533 56904 43383 58841 -32540 50787 40981 -4641 2553 32283 -30715 -17087 63827 9833 58703 16601 14469 2590"
  919  valgrind ./push_swap "-549 -20860 46051 28146 59922 50542 -9968 -11911 -476 -30466 -15651 17414 71059 -5206 60647 -44326 34409 18208 15583 -36988 -26119 51299 47612 10894 52371 -39035 26220 46364 9329 -18626 -43185 33711 9086 25066 41176 -8676 -11771 16238 -32264 68314 21886 42352 17603 -87 54401 34320 1387 19290 67635 62972 9110 9421 32863 -10344 -8150 -9731 29571 -11910 4204 41773 -42602 17253 17718 -38934 2523 48555 -7785 14077 -21870 -1014 53973 -38875 -45354 48335 32126 17260 2438 -35882 -17163 -22214 59731 -40435 -6808 -34573 54424 22968 6456 -37096 -10047 -8820 28407 17967 8940 17358 -21935 -41293 16594 55641 -41799 -27580 25086 -5049 2678 -14865 -17332 3506 9890 -6654 36305 3991 -9214 41299 38856 -22973 6165 -39607 -11709 -2152 24572 67447 -25096 38378 34827 49308 -34569 45263 25956 11670 57135 -4497 11569 6857 43711 5799 36023 48178 38486 41467 -34914 67972 50993 -17121 64694 -30734 5391 56428 -38797 -40182 42005 61004 36375 21700 -25806 -1195 45946 52314 2909 -14472 -23892 -13575 -23562 61241 4369 5523 -41880 58564 -26448 61250 67100 -724 19795 45879 -43205 57355 -11770 26707 15329 49197 -26668 -36920 62979 53711 -25156 13515 -32437 60561 54143 -4389 17756 -931 64829 -23234 -20409 21107 30491 -10556 -44486 -7152 7850 44235 -38209 66503 -18481 37425 65486 -18591 -29427 16123 46613 -2936 7059 28723 -5903 -15608 18294 23710 -41260 -12052 -8376 63293 18319 8838 12747 15463 -45279 56716 3485 -1043 4968 47165 54313 41333 29353 14605 -40532 -28116 16826 -20040 34771 65616 30876 25731 -39619 26384 -9708 39340 7634 27454 54206 21480 3072 10402 39876 54757 14700 48449 -19515 37669 33300 7824 31232 21513 345 5048 51956 64495 -34057 3650 -730 66386 51964 -25513 61231 -13427 -37721 11359 7220 -11077 72353 62695 -21886 -11939 55728 63532 52224 51633 -19397 15538 61771 27088 20164 -28972 59137 57783 13779 -19510 24917 58431 62511 3622 64798 -25854 -18447 -2369 -28924 1433 -27353 -6657 -43949 64838 -39660 38784 -9488 -13331 -16915 43008 71497 -21147 66768 -43739 -20570 51806 -29395 -27207 43572 66153 55988 34338 -26336 34918 -39005 -35488 59806 46249 -27411 55139 -6194 -5205 26621 -7435 40918 47993 -4017 -41155 55830 48753 23643 -34812 18277 40203 -17773 -12411 -22291 -16056 -3283 13749 6647 10628 2236 -32687 52042 65739 -3831 7784 60928 27576 36061 9434 -19635 8775 24475 5292 -16454 48035 10182 -42408 -22405 -27154 16205 68474 7076 14951 -8586 -19739 -37591 -13959 37757 12074 18501 -45224 -13832 -44403 56210 42133 -7049 10124 -5790 -14699 -2367 71998 19932 -44049 8590 14372 64083 58488 19477 21406 -32027 30635 16372 -37184 -7983 25462 53463 60168 57758 19295 4069 -7708 6254 -39361 55612 32896 -18799 12562 6304 2313 35158 9129 59836 14707 27312 70139 11916 -32826 -35265 23085 -19984 57060 1559 12192 -34031 56293 67040 -44752 -7340 -1268 -3693 -1682 6070 -39609 28649 17025 9237 -4194 67586 11216 49467 69184 44675 69124 27092 -43789 44486 45265 45269 -17476 -3288 14450 55691 -13661 17533 56904 43383 58841 -32540 50787 40981 -4641 2553 32283 -30715 -17087 63827 9833 58703 16601 14469 2590"| > output.txt
  920  bash push_swap_test_linux.sh
  921  norminette
  922  make re
  923  norminette
  924  bash push_swap_test_linux.sh
  925  valgrind ./push_swap "-549 -20860 46051 28146 59922 50542 -9968 -11911 -476 -30466 -15651 17414 71059 -5206 60647 -44326 34409 18208 15583 -36988 -26119 51299 47612 10894 52371 -39035 26220 46364 9329 -18626 -43185 33711 9086 25066 41176 -8676 -11771 16238 -32264 68314 21886 42352 17603 -87 54401 34320 1387 19290 67635 62972 9110 9421 32863 -10344 -8150 -9731 29571 -11910 4204 41773 -42602 17253 17718 -38934 2523 48555 -7785 14077 -21870 -1014 53973 -38875 -45354 48335 32126 17260 2438 -35882 -17163 -22214 59731 -40435 -6808 -34573 54424 22968 6456 -37096 -10047 -8820 28407 17967 8940 17358 -21935 -41293 16594 55641 -41799 -27580 25086 -5049 2678 -14865 -17332 3506 9890 -6654 36305 3991 -9214 41299 38856 -22973 6165 -39607 -11709 -2152 24572 67447 -25096 38378 34827 49308 -34569 45263 25956 11670 57135 -4497 11569 6857 43711 5799 36023 48178 38486 41467 -34914 67972 50993 -17121 64694 -30734 5391 56428 -38797 -40182 42005 61004 36375 21700 -25806 -1195 45946 52314 2909 -14472 -23892 -13575 -23562 61241 4369 5523 -41880 58564 -26448 61250 67100 -724 19795 45879 -43205 57355 -11770 26707 15329 49197 -26668 -36920 62979 53711 -25156 13515 -32437 60561 54143 -4389 17756 -931 64829 -23234 -20409 21107 30491 -10556 -44486 -7152 7850 44235 -38209 66503 -18481 37425 65486 -18591 -29427 16123 46613 -2936 7059 28723 -5903 -15608 18294 23710 -41260 -12052 -8376 63293 18319 8838 12747 15463 -45279 56716 3485 -1043 4968 47165 54313 41333 29353 14605 -40532 -28116 16826 -20040 34771 65616 30876 25731 -39619 26384 -9708 39340 7634 27454 54206 21480 3072 10402 39876 54757 14700 48449 -19515 37669 33300 7824 31232 21513 345 5048 51956 64495 -34057 3650 -730 66386 51964 -25513 61231 -13427 -37721 11359 7220 -11077 72353 62695 -21886 -11939 55728 63532 52224 51633 -19397 15538 61771 27088 20164 -28972 59137 57783 13779 -19510 24917 58431 62511 3622 64798 -25854 -18447 -2369 -28924 1433 -27353 -6657 -43949 64838 -39660 38784 -9488 -13331 -16915 43008 71497 -21147 66768 -43739 -20570 51806 -29395 -27207 43572 66153 55988 34338 -26336 34918 -39005 -35488 59806 46249 -27411 55139 -6194 -5205 26621 -7435 40918 47993 -4017 -41155 55830 48753 23643 -34812 18277 40203 -17773 -12411 -22291 -16056 -3283 13749 6647 10628 2236 -32687 52042 65739 -3831 7784 60928 27576 36061 9434 -19635 8775 24475 5292 -16454 48035 10182 -42408 -22405 -27154 16205 68474 7076 14951 -8586 -19739 -37591 -13959 37757 12074 18501 -45224 -13832 -44403 56210 42133 -7049 10124 -5790 -14699 -2367 71998 19932 -44049 8590 14372 64083 58488 19477 21406 -32027 30635 16372 -37184 -7983 25462 53463 60168 57758 19295 4069 -7708 6254 -39361 55612 32896 -18799 12562 6304 2313 35158 9129 59836 14707 27312 70139 11916 -32826 -35265 23085 -19984 57060 1559 12192 -34031 56293 67040 -44752 -7340 -1268 -3693 -1682 6070 -39609 28649 17025 9237 -4194 67586 11216 49467 69184 44675 69124 27092 -43789 44486 45265 45269 -17476 -3288 14450 55691 -13661 17533 56904 43383 58841 -32540 50787 40981 -4641 2553 32283 -30715 -17087 63827 9833 58703 16601 14469 2590"| > output.txt
  926  git clone git@vogsphere.42wolfsburg.de:vogsphere/intra-uuid-285a4ce4-e097-4aae-bde1-b5922bbc399c-5682692-ojacobs
  927  make fclean
  928  make
  929  ls
  930  make
  931  clear
  932  make
  933  bash push_swap_test_linux.sh
  934  valgrind ./push_swap "-549 -20860 46051 28146 59922 50542 -9968 -11911 -476 -30466 -15651 17414 71059 -5206 60647 -44326 34409 18208 15583 -36988 -26119 51299 47612 10894 52371 -39035 26220 46364 9329 -18626 -43185 33711 9086 25066 41176 -8676 -11771 16238 -32264 68314 21886 42352 17603 -87 54401 34320 1387 19290 67635 62972 9110 9421 32863 -10344 -8150 -9731 29571 -11910 4204 41773 -42602 17253 17718 -38934 2523 48555 -7785 14077 -21870 -1014 53973 -38875 -45354 48335 32126 17260 2438 -35882 -17163 -22214 59731 -40435 -6808 -34573 54424 22968 6456 -37096 -10047 -8820 28407 17967 8940 17358 -21935 -41293 16594 55641 -41799 -27580 25086 -5049 2678 -14865 -17332 3506 9890 -6654 36305 3991 -9214 41299 38856 -22973 6165 -39607 -11709 -2152 24572 67447 -25096 38378 34827 49308 -34569 45263 25956 11670 57135 -4497 11569 6857 43711 5799 36023 48178 38486 41467 -34914 67972 50993 -17121 64694 -30734 5391 56428 -38797 -40182 42005 61004 36375 21700 -25806 -1195 45946 52314 2909 -14472 -23892 -13575 -23562 61241 4369 5523 -41880 58564 -26448 61250 67100 -724 19795 45879 -43205 57355 -11770 26707 15329 49197 -26668 -36920 62979 53711 -25156 13515 -32437 60561 54143 -4389 17756 -931 64829 -23234 -20409 21107 30491 -10556 -44486 -7152 7850 44235 -38209 66503 -18481 37425 65486 -18591 -29427 16123 46613 -2936 7059 28723 -5903 -15608 18294 23710 -41260 -12052 -8376 63293 18319 8838 12747 15463 -45279 56716 3485 -1043 4968 47165 54313 41333 29353 14605 -40532 -28116 16826 -20040 34771 65616 30876 25731 -39619 26384 -9708 39340 7634 27454 54206 21480 3072 10402 39876 54757 14700 48449 -19515 37669 33300 7824 31232 21513 345 5048 51956 64495 -34057 3650 -730 66386 51964 -25513 61231 -13427 -37721 11359 7220 -11077 72353 62695 -21886 -11939 55728 63532 52224 51633 -19397 15538 61771 27088 20164 -28972 59137 57783 13779 -19510 24917 58431 62511 3622 64798 -25854 -18447 -2369 -28924 1433 -27353 -6657 -43949 64838 -39660 38784 -9488 -13331 -16915 43008 71497 -21147 66768 -43739 -20570 51806 -29395 -27207 43572 66153 55988 34338 -26336 34918 -39005 -35488 59806 46249 -27411 55139 -6194 -5205 26621 -7435 40918 47993 -4017 -41155 55830 48753 23643 -34812 18277 40203 -17773 -12411 -22291 -16056 -3283 13749 6647 10628 2236 -32687 52042 65739 -3831 7784 60928 27576 36061 9434 -19635 8775 24475 5292 -16454 48035 10182 -42408 -22405 -27154 16205 68474 7076 14951 -8586 -19739 -37591 -13959 37757 12074 18501 -45224 -13832 -44403 56210 42133 -7049 10124 -5790 -14699 -2367 71998 19932 -44049 8590 14372 64083 58488 19477 21406 -32027 30635 16372 -37184 -7983 25462 53463 60168 57758 19295 4069 -7708 6254 -39361 55612 32896 -18799 12562 6304 2313 35158 9129 59836 14707 27312 70139 11916 -32826 -35265 23085 -19984 57060 1559 12192 -34031 56293 67040 -44752 -7340 -1268 -3693 -1682 6070 -39609 28649 17025 9237 -4194 67586 11216 49467 69184 44675 69124 27092 -43789 44486 45265 45269 -17476 -3288 14450 55691 -13661 17533 56904 43383 58841 -32540 50787 40981 -4641 2553 32283 -30715 -17087 63827 9833 58703 16601 14469 2590"| > output.txt
  935  make re
  936  make fclean
  937  bash push_swap_test_linux.sh
  938  make
  939  bash push_swap_test_linux.sh
  940  clear
  941  bash push_swap_test_linux.sh
  942  clear
  943  ARG="101 88 93 150 94 248 468 141 485 207 250 82 340 123 127 40 251 10 206 73 316 89 56 295 117 37 193 313 25 330 131 302 349 175 215 74 111 317 338 398 22 419 354 18 136 234 154 270 152 139 293 415 470 297 322 321 158 198 151 319 498 12 370 140 499 262 50 39 444 402 422 247 21 26 371 217 466 335 417 128 396 201 214 274 240 72 41 8 38 115 202 292 315 189 383 166 133 465 228 337 456 0 20 291 64 153 259 341 194 34 92 431 84 364 382 231 102 252 346 174 397 433 49 99 408 238 28 355 19 43 473 385 413 445 384 320 260 7 36 493 95 195 87 294 495 454 3 135 160 258 32 461 334 331 118 129 57 230 97 149 488 244 58 169 168 146 483 183 188 363 333 271 458 80 357 143 11 177 55 490 344 393 116 289 241 449 328 67 308 373 266 162 342 75 288 325 76 65 256 79 255 399 233 305 172 280 236 71 404 185 70 42 345 452 148 220 480 63 453 77 170 107 184 210 387 463 138 113 386 51 245 359 306 30 269 421 109 446 439 277 403 451 358 69 336 4 179 467 91 66 145 434 254 457 176 486 171 242 122 394 284 414 192 497 6 368 304 199 68 120 279 390 395 326 106 263 287 239 226 282 378 85 351 491 155 211 312 440 275 44 59 191 110 61 329 286 108 227 464 441 132 15 352 78 423 430 476 438 481 114 27 23 142 124 389 460 500 208 105 164 409 203 353 324 46 103 224 459 303 187 469 374 350 119 167 272 53 447 427 442 112 379 237 180 17 267 253 48 218 273 98 86 212 130 477 196 311 356 366 435 24 381 200 90 33 156 182 134 443 482 376 347 307 489 369 478 83 213 261 471 432 246 5 424 232 219 268 474 278 428 45 54 221 365 314 300 47 401 327 405 159 225 375 205 223 391 281 62 2 222 283 1 380 100 209 487 121 367 9 126 420 412 425 392 309 161 144 348 125 437 407 496 197 178 276 418 264 416 472 372 190 343 494 492 16 157 204 360 301 60 299 339 243 296 479 323 257 81 448 173 310 406 31 436 361 52 388 14 165 410 455 265 400 104 426 318 235 13 35 285 462 163 229 249 450 137 147 332 181 186 411 377 298 29 290 216 96 475 429 484"; ./push_swap $ARG | wc -l
  944  ARG="101 88 93 150 94 248 468 141 485 207 250 82 340 123 127 40 251 10 206 73 316 89 56 295 117 37 193 313 25 330 131 302 349 175 215 74 111 317 338 398 22 419 354 18 136 234 154 270 152 139 293 415 470 297 322 321 158 198 151 319 498 12 370 140 499 262 50 39 444 402 422 247 21 26 371 217 466 335 417 128 396 201 214 274 240 72 41 8 38 115 202 292 315 189 383 166 133 465 228 337 456 0 20 291 64 153 259 341 194 34 92 431 84 364 382 231 102 252 346 174 397 433 49 99 408 238 28 355 19 43 473 385 413 445 384 320 260 7 36 493 95 195 87 294 495 454 3 135 160 258 32 461 334 331 118 129 57 230 97 149 488 244 58 169 168 146 483 183 188 363 333 271 458 80 357 143 11 177 55 490 344 393 116 289 241 449 328 67 308 373 266 162 342 75 288 325 76 65 256 79 255 399 233 305 172 280 236 71 404 185 70 42 345 452 148 220 480 63 453 77 170 107 184 210 387 463 138 113 386 51 245 359 306 30 269 421 109 446 439 277 403 451 358 69 336 4 179 467 91 66 145 434 254 457 176 486 171 242 122 394 284 414 192 497 6 368 304 199 68 120 279 390 395 326 106 263 287 239 226 282 378 85 351 491 155 211 312 440 275 44 59 191 110 61 329 286 108 227 464 441 132 15 352 78 423 430 476 438 481 114 27 23 142 124 389 460 500 208 105 164 409 203 353 324 46 103 224 459 303 187 469 374 350 119 167 272 53 447 427 442 112 379 237 180 17 267 253 48 218 273 98 86 212 130 477 196 311 356 366 435 24 381 200 90 33 156 182 134 443 482 376 347 307 489 369 478 83 213 261 471 432 246 5 424 232 219 268 474 278 428 45 54 221 365 314 300 47 401 327 405 159 225 375 205 223 391 281 62 2 222 283 1 380 100 209 487 121 367 9 126 420 412 425 392 309 161 144 348 125 437 407 496 197 178 276 418 264 416 472 372 190 343 494 492 16 157 204 360 301 60 299 339 243 296 479 323 257 81 448 173 310 406 31 436 361 52 388 14 165 410 455 265 400 104 426 318 235 13 35 285 462 163 229 249 450 137 147 332 181 186 411 377 298 29888 4445  77777 290 216 96 475 429 484"; ./push_swap $ARG | ./checker_linux $ARG
  945  clear
  946  bash push_swap_test_linux.sh
  947  make re
  948  make fclean
  949  make re
  950  make fclean
  951  make re
  952  make fclean
  953  pwd
  954  ls
  955  ssh -key gen
  956  ssh_key gen
  957  ssh key gen
  958  ssh -key gen
  959  ssh - keygen
  960  ssh - key gen
  961  clear
  962  ssh -keygen
  963  ssh -key gen
  964  ssh _key gen
  965  ssh --key gen
  966  ssh -key -gen
  967  ssh -key gen
  968  ssh -keygen rsa -b 4096 -C
  969  ssh -keygen rsa -b 4096
  970  ssh -keygen
  971  ssh -keygen rsa -b 4096
  972  ssh -key gen rsa -b 4096
  973  cd ..
  974  ls
  975  ssh -key gen rsa -b 4096
  976  ls
  977  ssh -keygen rsa -b 4096
  978  ssh-keygen -t rsa -b 4096 -C
  979  ls
  980  ssh-keygen -t rsa -b 4096 -C
  981  ssh-keygen -t rsa -b 4096
  982  ls
  983  pwd
  984  ls
  985  .ssh
  986  ls
  987  cat id_rsa.pub
  988  ls
  989  make
  990  make fclean
  991  git status
  992  git add .
  993  git commit -m "olu de jacobs"
  994  git statat
  995  git push
  996  git status
  997  clear
  998  git status
  999  git add .
 1000  git status
 1001  git push
 1002  make fclean
 1003  git add .
 1004  git status
 1005  make fclean
 1006  cd inc / libft
 1007  cd inc/libft
 1008  git add .
 1009  git status
 1010  git add ft_printf getnextline
 1011  git status
 1012  git commit -m "printf nd gnl update"
 1013  ls
 1014  cd ft_printf
 1015  git add .
 1016  git commit -m "printf"
 1017  cd ..
 1018  cd getnextline
 1019  git add .
 1020  git commit -m "gnl"
 1021  cd ..
 1022  git add .
 1023  git commit -m "prntf nd gnl 2"
 1024  cd ..
 1025  git add .
 1026  git commit -m "hopefully final"
 1027  git push
 1028  make
 1029  make fclean
 1030  clear
 1031  ls
 1032  cd inc / libft
 1033  ls
 1034  cd inc/libft
 1035  ls
 1036  git add ft_printf getnextline
 1037  git status
 1038  cd ft_printf
 1039  git add .
 1040  git add ft_print_char.c
 1041  ls
 1042  cd ..
 1043  git status
 1044  git push
 1045  git status
 1046  make re
 1047  make fclean
 1048  make re
 1049  make fclean
 1050  make re
 1051  ARG="101 88 93 150 94 248 468 141 485 207 250 82 340 123 127 40 251 10 206 73 316 89 56 295 117 37 193 313 25 330 131 302 349 175 215 74 111 317 338 398 22 419 354 18 136 234 154 270 152 139 293 415 470 297 322 321 158 198 151 319 498 12 370 140 499 262 50 39 444 402 422 247 21 26 371 217 466 335 417 128 396 201 214 274 240 72 41 8 38 115 202 292 315 189 383 166 133 465 228 337 456 0 20 291 64 153 259 341 194 34 92 431 84 364 382 231 102 252 346 174 397 433 49 99 408 238 28 355 19 43 473 385 413 445 384 320 260 7 36 493 95 195 87 294 495 454 3 135 160 258 32 461 334 331 118 129 57 230 97 149 488 244 58 169 168 146 483 183 188 363 333 271 458 80 357 143 11 177 55 490 344 393 116 289 241 449 328 67 308 373 266 162 342 75 288 325 76 65 256 79 255 399 233 305 172 280 236 71 404 185 70 42 345 452 148 220 480 63 453 77 170 107 184 210 387 463 138 113 386 51 245 359 306 30 269 421 109 446 439 277 403 451 358 69 336 4 179 467 91 66 145 434 254 457 176 486 171 242 122 394 284 414 192 497 6 368 304 199 68 120 279 390 395 326 106 263 287 239 226 282 378 85 351 491 155 211 312 440 275 44 59 191 110 61 329 286 108 227 464 441 132 15 352 78 423 430 476 438 481 114 27 23 142 124 389 460 500 208 105 164 409 203 353 324 46 103 224 459 303 187 469 374 350 119 167 272 53 447 427 442 112 379 237 180 17 267 253 48 218 273 98 86 212 130 477 196 311 356 366 435 24 381 200 90 33 156 182 134 443 482 376 347 307 489 369 478 83 213 261 471 432 246 5 424 232 219 268 474 278 428 45 54 221 365 314 300 47 401 327 405 159 225 375 205 223 391 281 62 2 222 283 1 380 100 209 487 121 367 9 126 420 412 425 392 309 161 144 348 125 437 407 496 197 178 276 418 264 416 472 372 190 343 494 492 16 157 204 360 301 60 299 339 243 296 479 323 257 81 448 173 310 406 31 436 361 52 388 14 165 410 455 265 400 104 426 318 235 13 35 285 462 163 229 249 450 137 147 332 181 186 411 377 298 29888 4445  77777 290 216 96 475 429 484"; ./push_swap $ARG | wc -l
 1052  make clean
 1053  make fclean
 1054  make re
 1055  ARG="101 88 93 150 94 248 468 141 485 207 250 82 340 123 127 40 251 10 206 73 316 89 56 295 117 37 193 313 25 330 131 302 349 175 215 74 111 317 338 398 22 419 354 18 136 234 154 270 152 139 293 415 470 297 322 321 158 198 151 319 498 12 370 140 499 262 50 39 444 402 422 247 21 26 371 217 466 335 417 128 396 201 214 274 240 72 41 8 38 115 202 292 315 189 383 166 133 465 228 337 456 0 20 291 64 153 259 341 194 34 92 431 84 364 382 231 102 252 346 174 397 433 49 99 408 238 28 355 19 43 473 385 413 445 384 320 260 7 36 493 95 195 87 294 495 454 3 135 160 258 32 461 334 331 118 129 57 230 97 149 488 244 58 169 168 146 483 183 188 363 333 271 458 80 357 143 11 177 55 490 344 393 116 289 241 449 328 67 308 373 266 162 342 75 288 325 76 65 256 79 255 399 233 305 172 280 236 71 404 185 70 42 345 452 148 220 480 63 453 77 170 107 184 210 387 463 138 113 386 51 245 359 306 30 269 421 109 446 439 277 403 451 358 69 336 4 179 467 91 66 145 434 254 457 176 486 171 242 122 394 284 414 192 497 6 368 304 199 68 120 279 390 395 326 106 263 287 239 226 282 378 85 351 491 155 211 312 440 275 44 59 191 110 61 329 286 108 227 464 441 132 15 352 78 423 430 476 438 481 114 27 23 142 124 389 460 500 208 105 164 409 203 353 324 46 103 224 459 303 187 469 374 350 119 167 272 53 447 427 442 112 379 237 180 17 267 253 48 218 273 98 86 212 130 477 196 311 356 366 435 24 381 200 90 33 156 182 134 443 482 376 347 307 489 369 478 83 213 261 471 432 246 5 424 232 219 268 474 278 428 45 54 221 365 314 300 47 401 327 405 159 225 375 205 223 391 281 62 2 222 283 1 380 100 209 487 121 367 9 126 420 412 425 392 309 161 144 348 125 437 407 496 197 178 276 418 264 416 472 372 190 343 494 492 16 157 204 360 301 60 299 339 243 296 479 323 257 81 448 173 310 406 31 436 361 52 388 14 165 410 455 265 400 104 426 318 235 13 35 285 462 163 229 249 450 137 147 332 181 186 411 377 298 29888 4445  77777 290 216 96 475 429 484"; ./push_swap $ARG | wc -l
 1056  make fclean
 1057  clear
 1058  git add .
 1059  git status
 1060  cd inc/libft
 1061  git add .
 1062  git commit -m "printf again"
 1063  cd ..
 1064  git add .
 1065  git commit -m "we go again"
 1066  git status 
 1067  git status
 1068  ls -la
 1069  rm -rf .git
 1070  clear
 1071  pwd
 1072  git add .
 1073  git commit -m "add printf"
 1074  git push
 1075  ls
 1076  git clone git@vogsphere.42wolfsburg.de:vogsphere/intra-uuid-285a4ce4-e097-4aae-bde1-b5922bbc399c-5682692-ojacobs test
 1077  cd test
 1078  ls
 1079  cd inc/libft/ft_printf
 1080  ls
 1081  ls -la
 1082  rm -rf .git
 1083  clear
 1084  ls
 1085  git add .
 1086  git commit -m "test"
 1087  clear
 1088  cd ..
 1089  ls
 1090  mkdir test
 1091  ls
 1092  git add .
 1093  git commit -m "test added"
 1094  git push
 1095  clear
 1096  cd ..
 1097  ls
 1098  cd ..
 1099  ls
 1100  cd ..
 1101  ls
 1102  rm -rf test
 1103  clear
 1104  git clone git@vogsphere.42wolfsburg.de:vogsphere/intra-uuid-285a4ce4-e097-4aae-bde1-b5922bbc399c-5682692-ojacobs test
 1105  cd test/inc/libft/ft_printf
 1106  ls
 1107  cd ..
 1108  cd test
 1109  ls
 1110  make re
 1111  ARG="101 88 93 150 94 248 468 141 485 207 250 82 340 123 127 40 251 10 206 73 316 89 56 295 117 37 193 313 25 330 131 302 349 175 215 74 111 317 338 398 22 419 354 18 136 234 154 270 152 139 293 415 470 297 322 321 158 198 151 319 498 12 370 140 499 262 50 39 444 402 422 247 21 26 371 217 466 335 417 128 396 201 214 274 240 72 41 8 38 115 202 292 315 189 383 166 133 465 228 337 456 0 20 291 64 153 259 341 194 34 92 431 84 364 382 231 102 252 346 174 397 433 49 99 408 238 28 355 19 43 473 385 413 445 384 320 260 7 36 493 95 195 87 294 495 454 3 135 160 258 32 461 334 331 118 129 57 230 97 149 488 244 58 169 168 146 483 183 188 363 333 271 458 80 357 143 11 177 55 490 344 393 116 289 241 449 328 67 308 373 266 162 342 75 288 325 76 65 256 79 255 399 233 305 172 280 236 71 404 185 70 42 345 452 148 220 480 63 453 77 170 107 184 210 387 463 138 113 386 51 245 359 306 30 269 421 109 446 439 277 403 451 358 69 336 4 179 467 91 66 145 434 254 457 176 486 171 242 122 394 284 414 192 497 6 368 304 199 68 120 279 390 395 326 106 263 287 239 226 282 378 85 351 491 155 211 312 440 275 44 59 191 110 61 329 286 108 227 464 441 132 15 352 78 423 430 476 438 481 114 27 23 142 124 389 460 500 208 105 164 409 203 353 324 46 103 224 459 303 187 469 374 350 119 167 272 53 447 427 442 112 379 237 180 17 267 253 48 218 273 98 86 212 130 477 196 311 356 366 435 24 381 200 90 33 156 182 134 443 482 376 347 307 489 369 478 83 213 261 471 432 246 5 424 232 219 268 474 278 428 45 54 221 365 314 300 47 401 327 405 159 225 375 205 223 391 281 62 2 222 283 1 380 100 209 487 121 367 9 126 420 412 425 392 309 161 144 348 125 437 407 496 197 178 276 418 264 416 472 372 190 343 494 492 16 157 204 360 301 60 299 339 243 296 479 323 257 81 448 173 310 406 31 436 361 52 388 14 165 410 455 265 400 104 426 318 235 13 35 285 462 163 229 249 450 137 147 332 181 186 411 377 298 29888 4445  77777 290 216 96 475 429 484"; ./push_swap $ARG | wc -l
 1112  make fclean
 1113  git add .
 1114  git commit -m "printf added"
 1115  git push
 1116  git clone git@vogsphere.42wolfsburg.de:vogsphere/intra-uuid-285a4ce4-e097-4aae-bde1-b5922bbc399c-5682692-ojacobs finalh
 1117  ls
 1118  cd finalh
 1119  ls
 1120  cd inc/libft/printf
 1121  ls
 1122  make
 1123  ./push_swap 56 35 25 25
 1124  ./push_swap 56 35 25 29
 1125  ARG="101 88 93 150 94 248 468 141 485 207 250 82 340 123 127 40 251 10 206 73 316 89 56 295 117 37 193 313 25 330 131 302 349 175 215 74 111 317 338 398 22 419 354 18 136 234 154 270 152 139 293 415 470 297 322 321 158 198 151 319 498 12 370 140 499 262 50 39 444 402 422 247 21 26 371 217 466 335 417 128 396 201 214 274 240 72 41 8 38 115 202 292 315 189 383 166 133 465 228 337 456 0 20 291 64 153 259 341 194 34 92 431 84 364 382 231 102 252 346 174 397 433 49 99 408 238 28 355 19 43 473 385 413 445 384 320 260 7 36 493 95 195 87 294 495 454 3 135 160 258 32 461 334 331 118 129 57 230 97 149 488 244 58 169 168 146 483 183 188 363 333 271 458 80 357 143 11 177 55 490 344 393 116 289 241 449 328 67 308 373 266 162 342 75 288 325 76 65 256 79 255 399 233 305 172 280 236 71 404 185 70 42 345 452 148 220 480 63 453 77 170 107 184 210 387 463 138 113 386 51 245 359 306 30 269 421 109 446 439 277 403 451 358 69 336 4 179 467 91 66 145 434 254 457 176 486 171 242 122 394 284 414 192 497 6 368 304 199 68 120 279 390 395 326 106 263 287 239 226 282 378 85 351 491 155 211 312 440 275 44 59 191 110 61 329 286 108 227 464 441 132 15 352 78 423 430 476 438 481 114 27 23 142 124 389 460 500 208 105 164 409 203 353 324 46 103 224 459 303 187 469 374 350 119 167 272 53 447 427 442 112 379 237 180 17 267 253 48 218 273 98 86 212 130 477 196 311 356 366 435 24 381 200 90 33 156 182 134 443 482 376 347 307 489 369 478 83 213 261 471 432 246 5 424 232 219 268 474 278 428 45 54 221 365 314 300 47 401 327 405 159 225 375 205 223 391 281 62 2 222 283 1 380 100 209 487 121 367 9 126 420 412 425 392 309 161 144 348 125 437 407 496 197 178 276 418 264 416 472 372 190 343 494 492 16 157 204 360 301 60 299 339 243 296 479 323 257 81 448 173 310 406 31 436 361 52 388 14 165 410 455 265 400 104 426 318 235 13 35 285 462 163 229 249 450 137 147 332 181 186 411 377 298 29888 4445  77777 290 216 96 475 429 484"; ./push_swap $ARG | ./checker_linux $ARG
 1126  make fclean
 1127  clear
 1128  make
 1129  ./push_swap 1 2 3
 1130  ./push_swap 1 
 1131  ./push_swap 1 4 2
 1132  ./push_swap 
 1133  bash push_swap_test_linux.sh
 1134  valgrind ./push_swap "-549 -20860 46051 28146 59922 50542 -9968 -11911 -476 -30466 -15651 17414 71059 -5206 60647 -44326 34409 18208 15583 -36988 -26119 51299 47612 10894 52371 -39035 26220 46364 9329 -18626 -43185 33711 9086 25066 41176 -8676 -11771 16238 -32264 68314 21886 42352 17603 -87 54401 34320 1387 19290 67635 62972 9110 9421 32863 -10344 -8150 -9731 29571 -11910 4204 41773 -42602 17253 17718 -38934 2523 48555 -7785 14077 -21870 -1014 53973 -38875 -45354 48335 32126 17260 2438 -35882 -17163 -22214 59731 -40435 -6808 -34573 54424 22968 6456 -37096 -10047 -8820 28407 17967 8940 17358 -21935 -41293 16594 55641 -41799 -27580 25086 -5049 2678 -14865 -17332 3506 9890 -6654 36305 3991 -9214 41299 38856 -22973 6165 -39607 -11709 -2152 24572 67447 -25096 38378 34827 49308 -34569 45263 25956 11670 57135 -4497 11569 6857 43711 5799 36023 48178 38486 41467 -34914 67972 50993 -17121 64694 -30734 5391 56428 -38797 -40182 42005 61004 36375 21700 -25806 -1195 45946 52314 2909 -14472 -23892 -13575 -23562 61241 4369 5523 -41880 58564 -26448 61250 67100 -724 19795 45879 -43205 57355 -11770 26707 15329 49197 -26668 -36920 62979 53711 -25156 13515 -32437 60561 54143 -4389 17756 -931 64829 -23234 -20409 21107 30491 -10556 -44486 -7152 7850 44235 -38209 66503 -18481 37425 65486 -18591 -29427 16123 46613 -2936 7059 28723 -5903 -15608 18294 23710 -41260 -12052 -8376 63293 18319 8838 12747 15463 -45279 56716 3485 -1043 4968 47165 54313 41333 29353 14605 -40532 -28116 16826 -20040 34771 65616 30876 25731 -39619 26384 -9708 39340 7634 27454 54206 21480 3072 10402 39876 54757 14700 48449 -19515 37669 33300 7824 31232 21513 345 5048 51956 64495 -34057 3650 -730 66386 51964 -25513 61231 -13427 -37721 11359 7220 -11077 72353 62695 -21886 -11939 55728 63532 52224 51633 -19397 15538 61771 27088 20164 -28972 59137 57783 13779 -19510 24917 58431 62511 3622 64798 -25854 -18447 -2369 -28924 1433 -27353 -6657 -43949 64838 -39660 38784 -9488 -13331 -16915 43008 71497 -21147 66768 -43739 -20570 51806 -29395 -27207 43572 66153 55988 34338 -26336 34918 -39005 -35488 59806 46249 -27411 55139 -6194 -5205 26621 -7435 40918 47993 -4017 -41155 55830 48753 23643 -34812 18277 40203 -17773 -12411 -22291 -16056 -3283 13749 6647 10628 2236 -32687 52042 65739 -3831 7784 60928 27576 36061 9434 -19635 8775 24475 5292 -16454 48035 10182 -42408 -22405 -27154 16205 68474 7076 14951 -8586 -19739 -37591 -13959 37757 12074 18501 -45224 -13832 -44403 56210 42133 -7049 10124 -5790 -14699 -2367 71998 19932 -44049 8590 14372 64083 58488 19477 21406 -32027 30635 16372 -37184 -7983 25462 53463 60168 57758 19295 4069 -7708 6254 -39361 55612 32896 -18799 12562 6304 2313 35158 9129 59836 14707 27312 70139 11916 -32826 -35265 23085 -19984 57060 1559 12192 -34031 56293 67040 -44752 -7340 -1268 -3693 -1682 6070 -39609 28649 17025 9237 -4194 67586 11216 49467 69184 44675 69124 27092 -43789 44486 45265 45269 -17476 -3288 14450 55691 -13661 17533 56904 43383 58841 -32540 50787 40981 -4641 2553 32283 -30715 -17087 63827 9833 58703 16601 14469 2590"| > output.txt
 1135  ls
 1136  git clone git@vogsphere.42wolfsburg.de:vogsphere/intra-uuid-285a4ce4-e097-4aae-bde1-b5922bbc399c-5682692-ojacobs max
 1137  cd max
 1138  ls
 1139  make
 1140  ./push_swap f
 1141  ./push_swap 3 2 1 5
 1142  ./push_swap 3 2 1 5 1
 1143  ./push_swap 3 2 1 5 1 7987465463546546546
 1144  ./push_swap
 1145  valgrind --leaks-check=full ./push_swap 3 2 1 5
 1146  valgrind --help
 1147  valgrind --leak-check=full ./push_swap 3 2 1 5
 1148  ./push_swap 42
 1149  ./push_swap 2 3
 1150  ./push_swap 0 1 2 3
 1151  ./push_swap 0 1 2 3 4 5 6 7 8
 1152  ./push_swap 0 1 2 3 9 5 6 7 8
 1153  ARG="2 1 0"; ./push_swap $ARG | ./checker_linux $ARG"
 1154  ARG="2 1 0"; ./push_swap $ARG | ./checker_linux $ARG"\ndf
 1155  ARG="2 1 0"
 1156  ./push_swap &ARG
 1157  ./push_swap $ARG
 1158  ./push_swap $ARG | ./checker_linux $ARG
 1159  chmod 777 checker_linux
 1160  ./push_swap $ARG | ./checker_linux $ARG
 1161  ARG="1 5 2 4 3"; ./push_swap $ARG | ./checker_OS $ARG
 1162  ARG="1 5 2 4 3"; ./push_swap $ARG | ./checker_linux $ARG
 1163  ARG="95\t31\t35\t71\t44\n49\t36\t74\t26\t80\n41\t13\t78\t77\t96\n86\t7\t75\t64\t69\n2\t99\t73\t98\t13\n95\t50\t72\t94\t57\n7\t62\t54\t13\t86\n69\t58\t94\t49\t46\n51\t92\t89\t20\t10\n34\t53\t13\t50\t51\n32\t67\t92\t40\t84\n2\t89\t35\t86\t61\n79\t99\t39\t82\t98\n37\t10\t21\t16\t59\n85\t31\t51\t70\t91\n12\t89\t72\t80\t58\n21\t82\t88\t98\t14\n84\t84\t61\t16\t93\n6\t94\t26\t88\t35\n43\t78\t60\t3\t60"; ./push_swap $ARG | ./checker_linux $ARG
 1164  ARG="280 287 53 395 201 122 42 47 152 498 79 461 392 473 397 491 433 442 310 140 345 358 250 321 251 37 404 428 5 440 64 231 306 481 431 323 59 210 235 219 168 475 362 40 338 18 138 295 471 167 245 342 366 317 396 406 119 344 246 35 408 178 211 326 97 379 123 106 262 427 2 301 336 413 470 347 13 161 95 141 52 289 70 302 60 131 143 499 1 305 155 455 139 432 34 129 318 202 303 159"; ./push_swap $ARG | ./checker_linux $ARG
 1165  ARG="280 287 53 395 201 122 42 47 152 498 79 461 392 473 397 491 433 442 310 140 345 358 250 321 251 37 404 428 5 440 64 231 306 481 431 323 59 210 235 219 168 475 362 40 338 18 138 295 471 167 245 342 366 317 396 406 119 344 246 35 408 178 211 326 97 379 123 106 262 427 2 301 336 413 470 347 13 161 95 141 52 289 70 302 60 131 143 499 1 305 155 455 139 432 34 129 318 202 303 159"; ./push_swap $ARG | wc -l
 1166  ARG="222 123 162 333 266 86 316 498 420 491 313 221 411 16 157 278 332 456 413 175 354 459 139 396 484 191 395 262 38 327 267 209 259 416 299 224 27 183 101 220 355 490 100 272 103 7 479 118 81 25 340 0 1 317 217 366 120 189 336 328 248 371 4 142 130 362 95 136 493 234 84 290 353 311 405 166 343 391 495 364 423 167 350 457 392 112 41 431 268 117 29 106 245 239 291 28 448 436 147 48 205 131 474 363 141 223 228 235 426 150 107 283 499 97 352 32 288 477 35 298 341 337 334 156 241 331 383 207 180 168 87 182 171 174 478 434 386 440 415 116 389 403 345 23 326 190 325 40 8 427 176 329 374 146 399 385 480 201 370 211 442 62 324 121 309 458 119 82 154 104 419 483 20 421 432 330 114 67 476 407 199 286 203 465 26 487 376 13 254 187 177 2 372 249 231 122 494 229 379 300 384 296 227 212 406 214 66 323 305 188 445 318 306 49 276 206 373 55 475 451 164 417 31 160 410 255 169 452 57 285 88 135 488 260 247 428 281 198 94 15 56 292 486 348 125 155 314 63 433 414 51 357 360 271 196 184 388 216 159 61 45 3 96 485 70 219 58 497 238 242 377 387 78 73 108 47 344 275 409 250 240 210 435 401 77 158 9 270 37 461 390 53 5 335 65 165 349 46 264 473 307 277 144 233 10 134 322 320 482 438 453 450 76 294 179 304 467 60 74 463 124 17 462 422 319 342 346 496 378 470 439 489 398 444 102 208 21 425 338 140 481 351 90 195 381 295 230 79 236 339 369 232 138 185 429 30 261 181 468 193 312 18 153 455 302 256 441 492 72 397 33 394 98 412 54 75 149 303 284 253 263 36 12 243 359 430 368 127 85 213 460 310 178 258 93 500 215 69 44 408 315 137 50 52 192 197 133 226 471 244 143 43 110 469 301 145 91 194 449 204 447 293 361 59 115 24 39 83 68 289 375 367 173 202 161 356 109 172 464 246 218 454 265 279 132 297 402 42 11 393 252 186 466 251 71 89 113 237 99 418 424 282 280 200 446 163 34 64 365 151 274 321 14 404 80 148 129 22 126 105 19 400 287 225 308 380 273 152 92 6 269 170 347 437 111 358 128 382 472 443"; ./push_swap $ARG | wc -l
 1167  make re
 1168  ./push_swap
 1169  ./push_swap 2
 1170  ./push_swap 2 8
 1171  ./push_swap 8 2 
 1172  ./push_swap 8 2 1
 1173  ./push_swap 8 2 1 6
 1174  ./push_swap 8 2 1 6 7 9
 1175  norminette
 1176  norminett
 1177  norminette
 1178  clear
 1179  make start
 1180  make
 1181  make fclean
 1182  clear
 1183  make
 1184  ./push_swap
 1185  ./push_swap 6575 57875 5875547854 54785464565478 545469i5479857 54754765498654
 1186  valgrind ./push_swap 6575 57875 5874 547858 5479857 547547
 1187  clear
 1188  ./push_swap "745 -1323 -5983 -5955 -4778 -1137 -1460 -3968 -606 418 -2138 -3873 -2478 668 -182 -828 -3661 -6153 -9992 662 -3561 -8778 -8120 339 -3431 -7402 -9429 -9658 702 -5313 33 680 -9349 -6134 405 -9444 -2390 511 -2608 -8935 -4456 -2986 -22 -6971 560 944 -1454 744 -6886 -3643 -8830 -3864 -9088 -6098 -6654 -2584 -4030 -9288 -4269 -1576 -9095 -3718 -8783 -5188 -4575 -199 -2899 -358 -3729 -1534 -4631 -562 913 -934 -5845 -9099 -8696 -6590 -1129 -7731 -6924 -166 -5618 -5809 -8621 -1683 -3346 -835 194 -1203 -2196 -7746 -9056 -3954 -4768 949 -8335 -9193 -2792 -7066"
 1189  valgrind ./push_swap 6575 57875 5874 547858 5479857 745 -1323 -5983 -5955 -4778 -1137 -1460 -3968 -606 418 -2138 -3873 -2478 668 -182 -828 -3661 -6153 -9992 662 -3561 -8778 -8120 339 -3431 -7402 -9429 -9658 702 -5313 33 680 -9349 -6134 405 -9444 -2390 511 -2608 -8935 -4456 -2986 -22 -6971 560 944 -1454 744 -6886 -3643 -8830 -3864 -9088 -6098 -6654 -2584 -4030 -9288 -4269 -1576 -9095 -3718 -8783 -5188 -4575 -199 -2899 -358 -3729 -1534 -4631 -562 913 -934 -5845 -9099 -8696 -6590 -1129 -7731 -6924 -166 -5618 -5809 -8621 -1683 -3346 -835 194 -1203 -2196 -7746 -9056 -3954 -4768 949 -8335 -9193 -2792 -7066
 1190  valgrind ./push_swap
 1191  valgrind ./push_swap "5" 655 555 "78"
 1192  clear
 1193  valgrind ./push_swap degtgtgsfrgsert  vzdesrtbv sbsrgtbg srgb
 1194  ./push_swap tfrfcjh - = . 
 1195  valgrind ./push_swap tfrfcjh - = . 
 1196  valgrind ./push_swap
 1197  valgrind ./push_swap gjdfgdfdf rjhvfrfjh 
 1198  valgrind --leak-check=ful ./push_swap 
 1199  valgrind --leak-check=full ./push_swap 
 1200  valgrind --leak-check=full ./push_swap hhg uu
 1201  valgrind --leak-check=full ./push_swap 76 87878 76 89
 1202  make re
 1203  valgrind --leak-check=full ./push_swap hhg uu
 1204  make re
 1205  valgrind --leak-check=full ./push_swap hhg uu
 1206  make re
 1207  valgrind --leak-check=full ./push_swap hhg uu
 1208  make re
 1209  valgrind --leak-check=full ./push_swap hhg uu
 1210  valgrind --leak-check=full ./push_swap 76 87878 76 89
 1211  man integer
 1212  man int
 1213  clear
 1214  valgrind --leak-check=full ./push_swap 214748364876 87878 76 89 7575 555 
 1215  ./push_swap 42
 1216  ./push_swap 2 3
 1217  ./push_swap 0 1 2 3
 1218  ./push_swap 0 1 2 3 4 5 6 7 8
 1219  ./push_swap 0 1 2 3 4 5 6 7 8 9
 1220  ./push_swap  1 2 4 5  7 8 
 1221  ./push_swap  2 4  7 8 
 1222  clear
 1223  ARG="2 1 0"; ./push_swap $ARG | ./checker_linux $ARG"
 1224  valgrind --leak-check=full ./push_swap hhg uu
 1225  valgrind --leak-check=full ./push_swap 214748364876 87878 76 89 7575 555 
 1226  valgrind --leak-check=full ./push_swap hhg uu
 1227  valgrind --leak-check=full --show-leak-kinds=all ./push_swap hhg uu
 1228  valgrind --leak-check=full ./push_swap hhg uu
 1229  clear
 1230  $>ARG="2 1 0"; ./push_swap $ARG | ./checker_linux $ARG
 1231  \>ARG="2 1 0"; ./push_swap $ARG | ./checker_linux $ARG
 1232  ARG="2 1 0"; ./push_swap $ARG | ./checker_linux $ARG
 1233  ./push_swap 2 1 0
 1234  ./push_swap 0 3 2
 1235  ARG="2 1 3"; ./push_swap $ARG | ./checker_linux $ARG
 1236  ARG="1 5 2 4 3"; ./push_swap $ARG | ./checker_linux $ARG
 1237  ./push_swap 1 5 2 4 3
 1238  valgrind --leak-check=full --show-leak-kinds=all ./push_swap hhg uu
 1239  make re
 1240  valgrind --leak-check=full --show-leak-kinds=all ./push_swap hhg uu
 1241  make re
 1242  valgrind --leak-check=full --show-leak-kinds=all ./push_swap hhg uu
 1243  make re
 1244  valgrind --leak-check=full --show-leak-kinds=all ./push_swap hhg uu
 1245  make re
 1246  valgrind --leak-check=full --show-leak-kinds=all ./push_swap hhg uu
 1247  make re
 1248  valgrind --leak-check=full --show-leak-kinds=all ./push_swap hhg uu
 1249  make re
 1250  valgrind --leak-check=full --show-leak-kinds=all ./push_swap hhg uu
 1251  valgrind --leak-check=full --show-leak-kinds=all ./push_swap 656 67 56
 1252  valgrind --leak-check=full --show-leak-kinds=all ./push_swap 656 67 56 56
 1253  valgrind --leak-check=full --show-leak-kinds=all ./push_swap 67 76 hjl
 1254  valgrind --leak-check=full --show-leak-kinds=all ./push_swap 656 67 56ygwifhu fwrygwrfurgfryu eryigfrgf
 1255  valgrind --leak-check=full --show-leak-kinds=all ./push_swap jkgjukf erjhfiu, rfuierfkeruf erferyufu
 1256  ARG="6 8 9 5 4343434"; ./push_swap $ARG | ./checker_linux $ARG
 1257  ./push_swap 67676 6686776 676768 67676
 1258  ./push_swap 6766 66776 676768 67676
 1259  ARG="407 -408 -731 -141 -325 -103 -2026 -1964 -5076 -3803 -3065 -5229 -3748 -1488 -2886 -1850 -3615 -3168 404 -2814 -3807 -2783 -1796 -5566 -782 -8 -972 -1751 -2032 -2239 -2750 -5212 -1530 -2811 34 -769 -5123 -4278 -1462 772 -468 -1863 -435 -2146 -4622 105 -1698 -5616 -3232 -753 -428 -5516 -1779 755 698 480 -632 278 -699 -410 495 -1124 418 82 -3815 -4192 -2072 -1082 -3574 -613 553 -2181 -4466 -2903 -564 -4345 -3396 796 220 -5628 -3089 -4611 -3253 -3132 814 610 -4888 -3214 -3953 -4980 -154 -368 116 -273 -2290 -1104 -1978 -5545 -2076 -3152"; ./push_swap $ARG | ./checker_linux $ARG
 1260  ARG="407 -408 -731 -141 -325 -103 -2026 -1964 -5076 -3803 -3065 -5229 -3748 -1488 -2886 -1850 -3615 -3168 404 -2814 -3807 -2783 -1796 -5566 -782 -8 -972 -1751 -2032 -2239 -2750 -5212 -1530 -2811 34 -769 -5123 -4278 -1462 772 -468 -1863 -435 -2146 -4622 105 -1698 -5616 -3232 -753 -428 -5516 -1779 755 698 480 -632 278 -699 -410 495 -1124 418 82 -3815 -4192 -2072 -1082 -3574 -613 553 -2181 -4466 -2903 -564 -4345 -3396 796 220 -5628 -3089 -4611 -3253 -3132 814 610 -4888 -3214 -3953 -4980 -154 -368 116 -273 -2290 -1104 -1978 -5545 -2076 -3152"; ./push_swap $ARG | wc -l
 1261  ARG="737981 402041 735953 78012 188087 746382 529931 142509 501301 775224 438272 -56175 665958 768576 47955 100558 527637 82997 244707 152154 651443 662789 202057 696612 334205 77915 333521 218325 86782 405392 505646 454376 217313 606003 226949 313760 585116 -11961 371865 332390 662745 417038 612656 618478 328108 733320 113089 351050 161061 545726 161106 259607 487526 545239 79457 288969 83108 -11660 67078 541254 142703 126054 459282 -35883 246644 517840 337076 -8788 405025 23441 627793 248408 327485 125984 247495 235345 -36941 607497 650416 385206 168296 -5393 612746 443825 386587 441498 283551 407564 198711 179131 -23445 680934 363381 108820 144255 384779 279630 707525 734677 660804 422132 529515 -51736 57346 379766 55365 764671 533980 112955 613828 248397 375381 346012 605402 723945 524010 475512 195933 102136 134080 576660 111129 157314 259368 404400 645725 777041 458110 666069 668539 554367 690173 387267 22393 -51487 462989 558825 40732 430301 486312 21281 -43204 441517 -52159 752042 148282 540270 776568 768880 -31292 559623 25687 403665 549758 -54373 19283 450239 489100 70923 404371 593188 460386 332861 405778 215356 232591 343255 104876 477565 420704 500562 211555 582473 641182 98846 632365 603569 483935 73383 495829 19215 692420 177582 776315 768971 487021 442876 523827 745763 4409 451757 365261 259089 661272 47430 248218 634570 282596 474677 588758 -31505 68506 268177 -13928 389 463643 710571 665742 470801 708919 265911 547347 190755 611352 467543 778426 392685 44656 506921 112998 563024 572148 597503 625136 671719 -18430 156385 612031 430947 268473 604152 269726 229873 99277 397123 113469 217008 536641 370807 350010 701151 195007 356499 95600 37243 81045 33812 -30838 634651 181536 705919 319905 327150 505252 -24339 -23072 438105 196613 391286 706396 381223 261163 415817 51001 41450 718478 242363 -27469 90244 704401 187666 650252 27951 -55257 8842 772522 527375 709472 564297 124625 124614 213174 59746 82209 664977 611430 374891 724822 456995 594836 425339 500731 569134 -7778 -12777 3959 26229 227199 -53011 458023 172834 527445 -41275 628973 773092 130210 36522 179155 325129 182323 -19905 79494 204614 779874 157026 403043 616282 464386 234758 437086 158934 169857 725413 648690 547180 578509 75405 318243 -54005 664437 54094 37657 446084 219150 501906 679572 707345 185768 274920 434628 705756 59597 746999 169960 -3091 765181 457474 636868 576235 301889 318261 183129 551494 528589 97304 356819 339510 704491 381192 508175 369313 336744 558235 562946 307646 412344 136264 297159 480550 768621 553936 338722 177623 765186 247808 202359 293348 433379 411122 422074 711621 290279 585691 179416 695906 228658 182217 746533 147290 55735 15221 -26012 466383 -14591 160781 253657 94055 617564 668686 636614 421770 105379 670287 224775 117672 183591 145308 20842 421212 767353 285932 503396 233477 567900 647262 -39656 478471 99089 -10155 105866 627221 92022 448981 -24429 195440 285817 73623 777744 329298 42007 541931 631374 717105 191886 656147 53913 601059 162632 458887 722996 15952 78930 348512 32833 204870 731348 145787 643608 295816 339370 507058 744991 438668 109873 599457 261538 567973 73851 736843 718687 375884 482632 107819 36893 162905 549523 467940 324973 652356 703971 623372 644904 625559 496759 778769 493114 535849 612330 662217 442694 55320 664656 672367 455023 642010 192853 573512 66433 134970 587838 92372 282347 -27101 261282 554452 701863 666736 769973 -10230 45727\n"; ./push_swap $ARG | wc -l
 1262  ARG="737981 402041 735953 78012 188087 746382 529931 142509 501301 775224 438272 -56175 665958 768576 47955 100558 527637 82997 244707 152154 651443 662789 202057 696612 334205 77915 333521 218325 86782 405392 505646 454376 217313 606003 226949 313760 585116 -11961 371865 332390 662745 417038 612656 618478 328108 733320 113089 351050 161061 545726 161106 259607 487526 545239 79457 288969 83108 -11660 67078 541254 142703 126054 459282 -35883 246644 517840 337076 -8788 405025 23441 627793 248408 327485 125984 247495 235345 -36941 607497 650416 385206 168296 -5393 612746 443825 386587 441498 283551 407564 198711 179131 -23445 680934 363381 108820 144255 384779 279630 707525 734677 660804 422132 529515 -51736 57346 379766 55365 764671 533980 112955 613828 248397 375381 346012 605402 723945 524010 475512 195933 102136 134080 576660 111129 157314 259368 404400 645725 777041 458110 666069 668539 554367 690173 387267 22393 -51487 462989 558825 40732 430301 486312 21281 -43204 441517 -52159 752042 148282 540270 776568 768880 -31292 559623 25687 403665 549758 -54373 19283 450239 489100 70923 404371 593188 460386 332861 405778 215356 232591 343255 104876 477565 420704 500562 211555 582473 641182 98846 632365 603569 483935 73383 495829 19215 692420 177582 776315 768971 487021 442876 523827 745763 4409 451757 365261 259089 661272 47430 248218 634570 282596 474677 588758 -31505 68506 268177 -13928 389 463643 710571 665742 470801 708919 265911 547347 190755 611352 467543 778426 392685 44656 506921 112998 563024 572148 597503 625136 671719 -18430 156385 612031 430947 268473 604152 269726 229873 99277 397123 113469 217008 536641 370807 350010 701151 195007 356499 95600 37243 81045 33812 -30838 634651 181536 705919 319905 327150 505252 -24339 -23072 438105 196613 391286 706396 381223 261163 415817 51001 41450 718478 242363 -27469 90244 704401 187666 650252 27951 -55257 8842 772522 527375 709472 564297 124625 124614 213174 59746 82209 664977 611430 374891 724822 456995 594836 425339 500731 569134 -7778 -12777 3959 26229 227199 -53011 458023 172834 527445 -41275 628973 773092 130210 36522 179155 325129 182323 -19905 79494 204614 779874 157026 403043 616282 464386 234758 437086 158934 169857 725413 648690 547180 578509 75405 318243 -54005 664437 54094 37657 446084 219150 501906 679572 707345 185768 274920 434628 705756 59597 746999 169960 -3091 765181 457474 636868 576235 301889 318261 183129 551494 528589 97304 356819 339510 704491 381192 508175 369313 336744 558235 562946 307646 412344 136264 297159 480550 768621 553936 338722 177623 765186 247808 202359 293348 433379 411122 422074 711621 290279 585691 179416 695906 228658 182217 746533 147290 55735 15221 -26012 466383 -14591 160781 253657 94055 617564 668686 636614 421770 105379 670287 224775 117672 183591 145308 20842 421212 767353 285932 503396 233477 567900 647262 -39656 478471 99089 -10155 105866 627221 92022 448981 -24429 195440 285817 73623 777744 329298 42007 541931 631374 717105 191886 656147 53913 601059 162632 458887 722996 15952 78930 348512 32833 204870 731348 145787 643608 295816 339370 507058 744991 438668 109873 599457 261538 567973 73851 736843 718687 375884 482632 107819 36893 162905 549523 467940 324973 652356 703971 623372 644904 625559 496759 778769 493114 535849 612330 662217 442694 55320 664656 672367 455023 642010 192853 573512 66433 134970 587838 92372 282347 -27101 261282 554452 701863 666736 769973 -10230 45727\n"; ./push_swap $ARG | ./checker_linux $ARG
 1263  ARG="6 8 9 5 4343434"; ./push_swap $ARG | ./checker_linux $ARG
 1264  ARG="737981 402041 735953 78012 188087 746382 529931 142509 501301 775224 438272 -56175 665958 768576 47955 100558 527637 82997 244707 152154 651443 662789 202057 696612 334205 77915 333521 218325 86782 405392 505646 454376 217313 606003 226949 313760 585116 -11961 371865 332390 662745 417038 612656 618478 328108 733320 113089 351050 161061 545726 161106 259607 487526 545239 79457 288969 83108 -11660 67078 541254 142703 126054 459282 -35883 246644 517840 337076 -8788 405025 23441 627793 248408 327485 125984 247495 235345 -36941 607497 650416 385206 168296 -5393 612746 443825 386587 441498 283551 407564 198711 179131 -23445 680934 363381 108820 144255 384779 279630 707525 734677 660804 422132 529515 -51736 57346 379766 55365 764671 533980 112955 613828 248397 375381 346012 605402 723945 524010 475512 195933 102136 134080 576660 111129 157314 259368 404400 645725 777041 458110 666069 668539 554367 690173 387267 22393 -51487 462989 558825 40732 430301 486312 21281 -43204 441517 -52159 752042 148282 540270 776568 768880 -31292 559623 25687 403665 549758 -54373 19283 450239 489100 70923 404371 593188 460386 332861 405778 215356 232591 343255 104876 477565 420704 500562 211555 582473 641182 98846 632365 603569 483935 73383 495829 19215 692420 177582 776315 768971 487021 442876 523827 745763 4409 451757 365261 259089 661272 47430 248218 634570 282596 474677 588758 -31505 68506 268177 -13928 389 463643 710571 665742 470801 708919 265911 547347 190755 611352 467543 778426 392685 44656 506921 112998 563024 572148 597503 625136 671719 -18430 156385 612031 430947 268473 604152 269726 229873 99277 397123 113469 217008 536641 370807 350010 701151 195007 356499 95600 37243 81045 33812 -30838 634651 181536 705919 319905 327150 505252 -24339 -23072 438105 196613 391286 706396 381223 261163 415817 51001 41450 718478 242363 -27469 90244 704401 187666 650252 27951 -55257 8842 772522 527375 709472 564297 124625 124614 213174 59746 82209 664977 611430 374891 724822 456995 594836 425339 500731 569134 -7778 -12777 3959 26229 227199 -53011 458023 172834 527445 -41275 628973 773092 130210 36522 179155 325129 182323 -19905 79494 204614 779874 157026 403043 616282 464386 234758 437086 158934 169857 725413 648690 547180 578509 75405 318243 -54005 664437 54094 37657 446084 219150 501906 679572 707345 185768 274920 434628 705756 59597 746999 169960 -3091 765181 457474 636868 576235 301889 318261 183129 551494 528589 97304 356819 339510 704491 381192 508175 369313 336744 558235 562946 307646 412344 136264 297159 480550 768621 553936 338722 177623 765186 247808 202359 293348 433379 411122 422074 711621 290279 585691 179416 695906 228658 182217 746533 147290 55735 15221 -26012 466383 -14591 160781 253657 94055 617564 668686 636614 421770 105379 670287 224775 117672 183591 145308 20842 421212 767353 285932 503396 233477 567900 647262 -39656 478471 99089 -10155 105866 627221 92022 448981 -24429 195440 285817 73623 777744 329298 42007 541931 631374 717105 191886 656147 53913 601059 162632 458887 722996 15952 78930 348512 32833 204870 731348 145787 643608 295816 339370 507058 744991 438668 109873 599457 261538 567973 73851 736843 718687 375884 482632 107819 36893 162905 549523 467940 324973 652356 703971 623372 644904 625559 496759 778769 493114 535849 612330 662217 442694 55320 664656 672367 455023 642010 192853 573512 66433 134970 587838 92372 282347 -27101 261282 554452 701863 666736 769973 -10230 45727clear\n"; ./push_swap $ARG | wc -l
 1265  clear
 1266  ARG="6 8 9 5 4343434"; ./push_swap $ARG | ./checker_linux $ARG
 1267  ARG="737981 402041 735953 78012 188087 746382 529931 142509 501301 775224 438272 -56175 665958 768576 47955 100558 527637 82997 244707 152154 651443 662789 202057 696612 334205 77915 333521 218325 86782 405392 505646 454376 217313 606003 226949 313760 585116 -11961 371865 332390 662745 417038 612656 618478 328108 733320 113089 351050 161061 545726 161106 259607 487526 545239 79457 288969 83108 -11660 67078 541254 142703 126054 459282 -35883 246644 517840 337076 -8788 405025 23441 627793 248408 327485 125984 247495 235345 -36941 607497 650416 385206 168296 -5393 612746 443825 386587 441498 283551 407564 198711 179131 -23445 680934 363381 108820 144255 384779 279630 707525 734677 660804 422132 529515 -51736 57346 379766 55365 764671 533980 112955 613828 248397 375381 346012 605402 723945 524010 475512 195933 102136 134080 576660 111129 157314 259368 404400 645725 777041 458110 666069 668539 554367 690173 387267 22393 -51487 462989 558825 40732 430301 486312 21281 -43204 441517 -52159 752042 148282 540270 776568 768880 -31292 559623 25687 403665 549758 -54373 19283 450239 489100 70923 404371 593188 460386 332861 405778 215356 232591 343255 104876 477565 420704 500562 211555 582473 641182 98846 632365 603569 483935 73383 495829 19215 692420 177582 776315 768971 487021 442876 523827 745763 4409 451757 365261 259089 661272 47430 248218 634570 282596 474677 588758 -31505 68506 268177 -13928 389 463643 710571 665742 470801 708919 265911 547347 190755 611352 467543 778426 392685 44656 506921 112998 563024 572148 597503 625136 671719 -18430 156385 612031 430947 268473 604152 269726 229873 99277 397123 113469 217008 536641 370807 350010 701151 195007 356499 95600 37243 81045 33812 -30838 634651 181536 705919 319905 327150 505252 -24339 -23072 438105 196613 391286 706396 381223 261163 415817 51001 41450 718478 242363 -27469 90244 704401 187666 650252 27951 -55257 8842 772522 527375 709472 564297 124625 124614 213174 59746 82209 664977 611430 374891 724822 456995 594836 425339 500731 569134 -7778 -12777 3959 26229 227199 -53011 458023 172834 527445 -41275 628973 773092 130210 36522 179155 325129 182323 -19905 79494 204614 779874 157026 403043 616282 464386 234758 437086 158934 169857 725413 648690 547180 578509 75405 318243 -54005 664437 54094 37657 446084 219150 501906 679572 707345 185768 274920 434628 705756 59597 746999 169960 -3091 765181 457474 636868 576235 301889 318261 183129 551494 528589 97304 356819 339510 704491 381192 508175 369313 336744 558235 562946 307646 412344 136264 297159 480550 768621 553936 338722 177623 765186 247808 202359 293348 433379 411122 422074 711621 290279 585691 179416 695906 228658 182217 746533 147290 55735 15221 -26012 466383 -14591 160781 253657 94055 617564 668686 636614 421770 105379 670287 224775 117672 183591 145308 20842 421212 767353 285932 503396 233477 567900 647262 -39656 478471 99089 -10155 105866 627221 92022 448981 -24429 195440 285817 73623 777744 329298 42007 541931 631374 717105 191886 656147 53913 601059 162632 458887 722996 15952 78930 348512 32833 204870 731348 145787 643608 295816 339370 507058 744991 438668 109873 599457 261538 567973 73851 736843 718687 375884 482632 107819 36893 162905 549523 467940 324973 652356 703971 623372 644904 625559 496759 778769 493114 535849 612330 662217 442694 55320 664656 672367 455023 642010 192853 573512 66433 134970 587838 92372 282347 -27101 261282 554452 701863 666736 769973 -10230 45727\n"; ./push_swap $ARG | ./checker_linux $ARG
 1268  ARG="737981 402041 735953 78012 188087 746382 529931 142509 501301 775224 438272 -56175 665958 768576 47955 100558 527637 82997 244707 152154 651443 662789 202057 696612 334205 77915 333521 218325 86782 405392 505646 454376 217313 606003 226949 313760 585116 -11961 371865 332390 662745 417038 612656 618478 328108 733320 113089 351050 161061 545726 161106 259607 487526 545239 79457 288969 83108 -11660 67078 541254 142703 126054 459282 -35883 246644 517840 337076 -8788 405025 23441 627793 248408 327485 125984 247495 235345 -36941 607497 650416 385206 168296 -5393 612746 443825 386587 441498 283551 407564 198711 179131 -23445 680934 363381 108820 144255 384779 279630 707525 734677 660804 422132 529515 -51736 57346 379766 55365 764671 533980 112955 613828 248397 375381 346012 605402 723945 524010 475512 195933 102136 134080 576660 111129 157314 259368 404400 645725 777041 458110 666069 668539 554367 690173 387267 22393 -51487 462989 558825 40732 430301 486312 21281 -43204 441517 -52159 752042 148282 540270 776568 768880 -31292 559623 25687 403665 549758 -54373 19283 450239 489100 70923 404371 593188 460386 332861 405778 215356 232591 343255 104876 477565 420704 500562 211555 582473 641182 98846 632365 603569 483935 73383 495829 19215 692420 177582 776315 768971 487021 442876 523827 745763 4409 451757 365261 259089 661272 47430 248218 634570 282596 474677 588758 -31505 68506 268177 -13928 389 463643 710571 665742 470801 708919 265911 547347 190755 611352 467543 778426 392685 44656 506921 112998 563024 572148 597503 625136 671719 -18430 156385 612031 430947 268473 604152 269726 229873 99277 397123 113469 217008 536641 370807 350010 701151 195007 356499 95600 37243 81045 33812 -30838 634651 181536 705919 319905 327150 505252 -24339 -23072 438105 196613 391286 706396 381223 261163 415817 51001 41450 718478 242363 -27469 90244 704401 187666 650252 27951 -55257 8842 772522 527375 709472 564297 124625 124614 213174 59746 82209 664977 611430 374891 724822 456995 594836 425339 500731 569134 -7778 -12777 3959 26229 227199 -53011 458023 172834 527445 -41275 628973 773092 130210 36522 179155 325129 182323 -19905 79494 204614 779874 157026 403043 616282 464386 234758 437086 158934 169857 725413 648690 547180 578509 75405 318243 -54005 664437 54094 37657 446084 219150 501906 679572 707345 185768 274920 434628 705756 59597 746999 169960 -3091 765181 457474 636868 576235 301889 318261 183129 551494 528589 97304 356819 339510 704491 381192 508175 369313 336744 558235 562946 307646 412344 136264 297159 480550 768621 553936 338722 177623 765186 247808 202359 293348 433379 411122 422074 711621 290279 585691 179416 695906 228658 182217 746533 147290 55735 15221 -26012 466383 -14591 160781 253657 94055 617564 668686 636614 421770 105379 670287 224775 117672 183591 145308 20842 421212 767353 285932 503396 233477 567900 647262 -39656 478471 99089 -10155 105866 627221 92022 448981 -24429 195440 285817 73623 777744 329298 42007 541931 631374 717105 191886 656147 53913 601059 162632 458887 722996 15952 78930 348512 32833 204870 731348 145787 643608 295816 339370 507058 744991 438668 109873 599457 261538 567973 73851 736843 718687 375884 482632 107819 36893 162905 549523 467940 324973 652356 703971 623372 644904 625559 496759 778769 493114 535849 612330 662217 442694 55320 664656 672367 455023 642010 192853 573512 66433 134970 587838 92372 282347 -27101 261282 554452 701863 666736 769973 -10230 45727clear\n"; ./push_swap $ARG | wc -l
 1269  ARG="737981 402041 735953 78012 188087 746382 529931 142509 501301 775224 438272 -56175 665958 768576 47955 100558 527637 82997 244707 152154 651443 662789 202057 696612 334205 77915 333521 218325 86782 405392 505646 454376 217313 606003 226949 313760 585116 -11961 371865 332390 662745 417038 612656 618478 328108 733320 113089 351050 161061 545726 161106 259607 487526 545239 79457 288969 83108 -11660 67078 541254 142703 126054 459282 -35883 246644 517840 337076 -8788 405025 23441 627793 248408 327485 125984 247495 235345 -36941 607497 650416 385206 168296 -5393 612746 443825 386587 441498 283551 407564 198711 179131 -23445 680934 363381 108820 144255 384779 279630 707525 734677 660804 422132 529515 -51736 57346 379766 55365 764671 533980 112955 613828 248397 375381 346012 605402 723945 524010 475512 195933 102136 134080 576660 111129 157314 259368 404400 645725 777041 458110 666069 668539 554367 690173 387267 22393 -51487 462989 558825 40732 430301 486312 21281 -43204 441517 -52159 752042 148282 540270 776568 768880 -31292 559623 25687 403665 549758 -54373 19283 450239 489100 70923 404371 593188 460386 332861 405778 215356 232591 343255 104876 477565 420704 500562 211555 582473 641182 98846 632365 603569 483935 73383 495829 19215 692420 177582 776315 768971 487021 442876 523827 745763 4409 451757 365261 259089 661272 47430 248218 634570 282596 474677 588758 -31505 68506 268177 -13928 389 463643 710571 665742 470801 708919 265911 547347 190755 611352 467543 778426 392685 44656 506921 112998 563024 572148 597503 625136 671719 -18430 156385 612031 430947 268473 604152 269726 229873 99277 397123 113469 217008 536641 370807 350010 701151 195007 356499 95600 37243 81045 33812 -30838 634651 181536 705919 319905 327150 505252 -24339 -23072 438105 196613 391286 706396 381223 261163 415817 51001 41450 718478 242363 -27469 90244 704401 187666 650252 27951 -55257 8842 772522 527375 709472 564297 124625 124614 213174 59746 82209 664977 611430 374891 724822 456995 594836 425339 500731 569134 -7778 -12777 3959 26229 227199 -53011 458023 172834 527445 -41275 628973 773092 130210 36522 179155 325129 182323 -19905 79494 204614 779874 157026 403043 616282 464386 234758 437086 158934 169857 725413 648690 547180 578509 75405 318243 -54005 664437 54094 37657 446084 219150 501906 679572 707345 185768 274920 434628 705756 59597 746999 169960 -3091 765181 457474 636868 576235 301889 318261 183129 551494 528589 97304 356819 339510 704491 381192 508175 369313 336744 558235 562946 307646 412344 136264 297159 480550 768621 553936 338722 177623 765186 247808 202359 293348 433379 411122 422074 711621 290279 585691 179416 695906 228658 182217 746533 147290 55735 15221 -26012 466383 -14591 160781 253657 94055 617564 668686 636614 421770 105379 670287 224775 117672 183591 145308 20842 421212 767353 285932 503396 233477 567900 647262 -39656 478471 99089 -10155 105866 627221 92022 448981 -24429 195440 285817 73623 777744 329298 42007 541931 631374 717105 191886 656147 53913 601059 162632 458887 722996 15952 78930 348512 32833 204870 731348 145787 643608 295816 339370 507058 744991 438668 109873 599457 261538 567973 73851 736843 718687 375884 482632 107819 36893 162905 549523 467940 324973 652356 703971 623372 644904 625559 496759 778769 493114 535849 612330 662217 442694 55320 664656 672367 455023 642010 192853 573512 66433 134970 587838 92372 282347 -27101 261282 554452 701863 666736 769973 -10230 45727\n"; ./push_swap $ARG | wc -l
 1270  ARG="737981 402041 735953 78012 188087 746382 529931 142509 501301 775224 438272 -56175 665958 768576 47955 100558 527637 82997 244707 152154 651443 662789 202057 696612 334205 77915 333521 218325 86782 405392 505646 454376 217313 606003 226949 313760 585116 -11961 371865 332390 662745 417038 612656 618478 328108 733320 113089 351050 161061 545726 161106 259607 487526 545239 79457 288969 83108 -11660 67078 541254 142703 126054 459282 -35883 246644 517840 337076 -8788 405025 23441 627793 248408 327485 125984 247495 235345 -36941 607497 650416 385206 168296 -5393 612746 443825 386587 441498 283551 407564 198711 179131 -23445 680934 363381 108820 144255 384779 279630 707525 734677 660804 422132 529515 -51736 57346 379766 55365 764671 533980 112955 613828 248397 375381 346012 605402 723945 524010 475512 195933 102136 134080 576660 111129 157314 259368 404400 645725 777041 458110 666069 668539 554367 690173 387267 22393 -51487 462989 558825 40732 430301 486312 21281 -43204 441517 -52159 752042 148282 540270 776568 768880 -31292 559623 25687 403665 549758 -54373 19283 450239 489100 70923 404371 593188 460386 332861 405778 215356 232591 343255 104876 477565 420704 500562 211555 582473 641182 98846 632365 603569 483935 73383 495829 19215 692420 177582 776315 768971 487021 442876 523827 745763 4409 451757 365261 259089 661272 47430 248218 634570 282596 474677 588758 -31505 68506 268177 -13928 389 463643 710571 665742 470801 708919 265911 547347 190755 611352 467543 778426 392685 44656 506921 112998 563024 572148 597503 625136 671719 -18430 156385 612031 430947 268473 604152 269726 229873 99277 397123 113469 217008 536641 370807 350010 701151 195007 356499 95600 37243 81045 33812 -30838 634651 181536 705919 319905 327150 505252 -24339 -23072 438105 196613 391286 706396 381223 261163 415817 51001 41450 718478 242363 -27469 90244 704401 187666 650252 27951 -55257 8842 772522 527375 709472 564297 124625 124614 213174 59746 82209 664977 611430 374891 724822 456995 594836 425339 500731 569134 -7778 -12777 3959 26229 227199 -53011 458023 172834 527445 -41275 628973 773092 130210 36522 179155 325129 182323 -19905 79494 204614 779874 157026 403043 616282 464386 234758 437086 158934 169857 725413 648690 547180 578509 75405 318243 -54005 664437 54094 37657 446084 219150 501906 679572 707345 185768 274920 434628 705756 59597 746999 169960 -3091 765181 457474 636868 576235 301889 318261 183129 551494 528589 97304 356819 339510 704491 381192 508175 369313 336744 558235 562946 307646 412344 136264 297159 480550 768621 553936 338722 177623 765186 247808 202359 293348 433379 411122 422074 711621 290279 585691 179416 695906 228658 182217 746533 147290 55735 15221 -26012 466383 -14591 160781 253657 94055 617564 668686 636614 421770 105379 670287 224775 117672 183591 145308 20842 421212 767353 285932 503396 233477 567900 647262 -39656 478471 99089 -10155 105866 627221 92022 448981 -24429 195440 285817 73623 777744 329298 42007 541931 631374 717105 191886 656147 53913 601059 162632 458887 722996 15952 78930 348512 32833 204870 731348 145787 643608 295816 339370 507058 744991 438668 109873 599457 261538 567973 73851 736843 718687 375884 482632 107819 36893 162905 549523 467940 324973 652356 703971 623372 644904 625559 496759 778769 493114 535849 612330 662217 442694 55320 664656 672367 455023 642010 192853 573512 66433 134970 587838 92372 282347 -27101 261282 554452 701863 666736 769973 -10230 45727\n"; ./push_swap $ARG | ./checker_linux $ARG
 1271  ARG="737981 402041 735953 78012 188087 746382 529931 142509 501301 775224 438272 -56175 665958 768576 47955 100558 527637 82997 244707 152154 651443 662789 202057 696612 334205 77915 333521 218325 86782 405392 505646 454376 217313 606003 226949 313760 585116 -11961 371865 332390 662745 417038 612656 618478 328108 733320 113089 351050 161061 545726 161106 259607 487526 545239 79457 288969 83108 -11660 67078 541254 142703 126054 459282 -35883 246644 517840 337076 -8788 405025 23441 627793 248408 327485 125984 247495 235345 -36941 607497 650416 385206 168296 -5393 612746 443825 386587 441498 283551 407564 198711 179131 -23445 680934 363381 108820 144255 384779 279630 707525 734677 660804 422132 529515 -51736 57346 379766 55365 764671 533980 112955 613828 248397 375381 346012 605402 723945 524010 475512 195933 102136 134080 576660 111129 157314 259368 404400 645725 777041 458110 666069 668539 554367 690173 387267 22393 -51487 462989 558825 40732 430301 486312 21281 -43204 441517 -52159 752042 148282 540270 776568 768880 -31292 559623 25687 403665 549758 -54373 19283 450239 489100 70923 404371 593188 460386 332861 405778 215356 232591 343255 104876 477565 420704 500562 211555 582473 641182 98846 632365 603569 483935 73383 495829 19215 692420 177582 776315 768971 487021 442876 523827 745763 4409 451757 365261 259089 661272 47430 248218 634570 282596 474677 588758 -31505 68506 268177 -13928 389 463643 710571 665742 470801 708919 265911 547347 190755 611352 467543 778426 392685 44656 506921 112998 563024 572148 597503 625136 671719 -18430 156385 612031 430947 268473 604152 269726 229873 99277 397123 113469 217008 536641 370807 350010 701151 195007 356499 95600 37243 81045 33812 -30838 634651 181536 705919 319905 327150 505252 -24339 -23072 438105 196613 391286 706396 381223 261163 415817 51001 41450 718478 242363 -27469 90244 704401 187666 650252 27951 -55257 8842 772522 527375 709472 564297 124625 124614 213174 59746 82209 664977 611430 374891 724822 456995 594836 425339 500731 569134 -7778 -12777 3959 26229 227199 -53011 458023 172834 527445 -41275 628973 773092 130210 36522 179155 325129 182323 -19905 79494 204614 779874 157026 403043 616282 464386 234758 437086 158934 169857 725413 648690 547180 578509 75405 318243 -54005 664437 54094 37657 446084 219150 501906 679572 707345 185768 274920 434628 705756 59597 746999 169960 -3091 765181 457474 636868 576235 301889 318261 183129 551494 528589 97304 356819 339510 704491 381192 508175 369313 336744 558235 562946 307646 412344 136264 297159 480550 768621 553936 338722 177623 765186 247808 202359 293348 433379 411122 422074 711621 290279 585691 179416 695906 228658 182217 746533 147290 55735 15221 -26012 466383 -14591 160781 253657 94055 617564 668686 636614 421770 105379 670287 224775 117672 183591 145308 20842 421212 767353 285932 503396 233477 567900 647262 -39656 478471 99089 -10155 105866 627221 92022 448981 -24429 195440 285817 73623 777744 329298 42007 541931 631374 717105 191886 656147 53913 601059 162632 458887 722996 15952 78930 348512 32833 204870 731348 145787 643608 295816 339370 507058 744991 438668 109873 599457 261538 567973 73851 736843 718687 375884 482632 107819 36893 162905 549523 467940 324973 652356 703971 623372 644904 625559 496759 778769 493114 535849 612330 662217 442694 55320 664656 672367 455023 642010 192853 573512 66433 134970 587838 92372 282347 -27101 261282 554452 701863 666736 769973 -10230 45727\n"; ./push_swap $ARG | wc -l
 1272  ARG="737981 402041 735953 78012 188087 746382 529931 142509 501301 775224 438272 -56175 665958 768576 47955 100558 527637 82997 244707 152154 651443 662789 202057 696612 334205 77915 333521 218325 86782 405392 505646 454376 217313 606003 226949 313760 585116 -11961 371865 332390 662745 417038 612656 618478 328108 733320 113089 351050 161061 545726 161106 259607 487526 545239 79457 288969 83108 -11660 67078 541254 142703 126054 459282 -35883 246644 517840 337076 -8788 405025 23441 627793 248408 327485 125984 247495 235345 -36941 607497 650416 385206 168296 -5393 612746 443825 386587 441498 283551 407564 198711 179131 -23445 680934 363381 108820 144255 384779 279630 707525 734677 660804 422132 529515 -51736 57346 379766 55365 764671 533980 112955 613828 248397 375381 346012 605402 723945 524010 475512 195933 102136 134080 576660 111129 157314 259368 404400 645725 777041 458110 666069 668539 554367 690173 387267 22393 -51487 462989 558825 40732 430301 486312 21281 -43204 441517 -52159 752042 148282 540270 776568 768880 -31292 559623 25687 403665 549758 -54373 19283 450239 489100 70923 404371 593188 460386 332861 405778 215356 232591 343255 104876 477565 420704 500562 211555 582473 641182 98846 632365 603569 483935 73383 495829 19215 692420 177582 776315 768971 487021 442876 523827 745763 4409 451757 365261 259089 661272 47430 248218 634570 282596 474677 588758 -31505 68506 268177 -13928 389 463643 710571 665742 470801 708919 265911 547347 190755 611352 467543 778426 392685 44656 506921 112998 563024 572148 597503 625136 671719 -18430 156385 612031 430947 268473 604152 269726 229873 99277 397123 113469 217008 536641 370807 350010 701151 195007 356499 95600 37243 81045 33812 -30838 634651 181536 705919 319905 327150 505252 -24339 -23072 438105 196613 391286 706396 381223 261163 415817 51001 41450 718478 242363 -27469 90244 704401 187666 650252 27951 -55257 8842 772522 527375 709472 564297 124625 124614 213174 59746 82209 664977 611430 374891 724822 456995 594836 425339 500731 569134 -7778 -12777 3959 26229 227199 -53011 458023 172834 527445 -41275 628973 773092 130210 36522 179155 325129 182323 -19905 79494 204614 779874 157026 403043 616282 464386 234758 437086 158934 169857 725413 648690 547180 578509 75405 318243 -54005 664437 54094 37657 446084 219150 501906 679572 707345 185768 274920 434628 705756 59597 746999 169960 -3091 765181 457474 636868 576235 301889 318261 183129 551494 528589 97304 356819 339510 704491 381192 508175 369313 336744 558235 562946 307646 412344 136264 297159 480550 768621 553936 338722 177623 765186 247808 202359 293348 433379 411122 422074 711621 290279 585691 179416 695906 228658 182217 746533 147290 55735 15221 -26012 466383 -14591 160781 253657 94055 617564 668686 636614 421770 105379 670287 224775 117672 183591 145308 20842 421212 767353 285932 503396 233477 567900 647262 -39656 478471 99089 -10155 105866 627221 92022 448981 -24429 195440 285817 73623 777744 329298 42007 541931 631374 717105 191886 656147 53913 601059 162632 458887 722996 15952 78930 348512 32833 204870 731348 145787 643608 295816 339370 507058 744991 438668 109873 599457 261538 567973 73851 736843 718687 375884 482632 107819 36893 162905 549523 467940 324973 652356 703971 623372 644904 625559 496759 778769 493114 535849 612330 662217 442694 55320 664656 672367 455023 642010 192853 573512 66433 134970 587838 92372 282347 -27101 261282 554452 701863 666736 769973 -10230 45727\n"; ./push_swap $ARG | ./checker_linux $ARG
 1273  valgrind --leak-check=full --show-leak-kinds=all ./push_swap jkgjukf erjhfiu, rfuierfkeruf erferyufuetgetg gf5t
 1274  pwd
 1275  ls
 1276  make
 1277  ARG="737981 402041 735953 78012 188087 746382 529931 142509 501301 775224 438272 -56175 665958 768576 47955 100558 527637 82997 244707 152154 651443 662789 202057 696612 334205 77915 333521 218325 86782 405392 505646 454376 217313 606003 226949 313760 585116 -11961 371865 332390 662745 417038 612656 618478 328108 733320 113089 351050 161061 545726 161106 259607 487526 545239 79457 288969 83108 -11660 67078 541254 142703 126054 459282 -35883 246644 517840 337076 -8788 405025 23441 627793 248408 327485 125984 247495 235345 -36941 607497 650416 385206 168296 -5393 612746 443825 386587 441498 283551 407564 198711 179131 -23445 680934 363381 108820 144255 384779 279630 707525 734677 660804 422132 529515 -51736 57346 379766 55365 764671 533980 112955 613828 248397 375381 346012 605402 723945 524010 475512 195933 102136 134080 576660 111129 157314 259368 404400 645725 777041 458110 666069 668539 554367 690173 387267 22393 -51487 462989 558825 40732 430301 486312 21281 -43204 441517 -52159 752042 148282 540270 776568 768880 -31292 559623 25687 403665 549758 -54373 19283 450239 489100 70923 404371 593188 460386 332861 405778 215356 232591 343255 104876 477565 420704 500562 211555 582473 641182 98846 632365 603569 483935 73383 495829 19215 692420 177582 776315 768971 487021 442876 523827 745763 4409 451757 365261 259089 661272 47430 248218 634570 282596 474677 588758 -31505 68506 268177 -13928 389 463643 710571 665742 470801 708919 265911 547347 190755 611352 467543 778426 392685 44656 506921 112998 563024 572148 597503 625136 671719 -18430 156385 612031 430947 268473 604152 269726 229873 99277 397123 113469 217008 536641 370807 350010 701151 195007 356499 95600 37243 81045 33812 -30838 634651 181536 705919 319905 327150 505252 -24339 -23072 438105 196613 391286 706396 381223 261163 415817 51001 41450 718478 242363 -27469 90244 704401 187666 650252 27951 -55257 8842 772522 527375 709472 564297 124625 124614 213174 59746 82209 664977 611430 374891 724822 456995 594836 425339 500731 569134 -7778 -12777 3959 26229 227199 -53011 458023 172834 527445 -41275 628973 773092 130210 36522 179155 325129 182323 -19905 79494 204614 779874 157026 403043 616282 464386 234758 437086 158934 169857 725413 648690 547180 578509 75405 318243 -54005 664437 54094 37657 446084 219150 501906 679572 707345 185768 274920 434628 705756 59597 746999 169960 -3091 765181 457474 636868 576235 301889 318261 183129 551494 528589 97304 356819 339510 704491 381192 508175 369313 336744 558235 562946 307646 412344 136264 297159 480550 768621 553936 338722 177623 765186 247808 202359 293348 433379 411122 422074 711621 290279 585691 179416 695906 228658 182217 746533 147290 55735 15221 -26012 466383 -14591 160781 253657 94055 617564 668686 636614 421770 105379 670287 224775 117672 183591 145308 20842 421212 767353 285932 503396 233477 567900 647262 -39656 478471 99089 -10155 105866 627221 92022 448981 -24429 195440 285817 73623 777744 329298 42007 541931 631374 717105 191886 656147 53913 601059 162632 458887 722996 15952 78930 348512 32833 204870 731348 145787 643608 295816 339370 507058 744991 438668 109873 599457 261538 567973 73851 736843 718687 375884 482632 107819 36893 162905 549523 467940 324973 652356 703971 623372 644904 625559 496759 778769 493114 535849 612330 662217 442694 55320 664656 672367 455023 642010 192853 573512 66433 134970 587838 92372 282347 -27101 261282 554452 701863 666736 769973 -10230 45727\n"; ./push_swap $ARG | wc -l
 1278  ARG="737981 402041 735953 78012 188087 746382 529931 142509 501301 775224 438272 -56175 665958 768576 47955 100558 527637 82997 244707 152154 651443 662789 202057 696612 334205 77915 333521 218325 86782 405392 505646 454376 217313 606003 226949 313760 585116 -11961 371865 332390 662745 417038 612656 618478 328108 733320 113089 351050 161061 545726 161106 259607 487526 545239 79457 288969 83108 -11660 67078 541254 142703 126054 459282 -35883 246644 517840 337076 -8788 405025 23441 627793 248408 327485 125984 247495 235345 -36941 607497 650416 385206 168296 -5393 612746 443825 386587 441498 283551 407564 198711 179131 -23445 680934 363381 108820 144255 384779 279630 707525 734677 660804 422132 529515 -51736 57346 379766 55365 764671 533980 112955 613828 248397 375381 346012 605402 723945 524010 475512 195933 102136 134080 576660 111129 157314 259368 404400 645725 777041 458110 666069 668539 554367 690173 387267 22393 -51487 462989 558825 40732 430301 486312 21281 -43204 441517 -52159 752042 148282 540270 776568 768880 -31292 559623 25687 403665 549758 -54373 19283 450239 489100 70923 404371 593188 460386 332861 405778 215356 232591 343255 104876 477565 420704 500562 211555 582473 641182 98846 632365 603569 483935 73383 495829 19215 692420 177582 776315 768971 487021 442876 523827 745763 4409 451757 365261 259089 661272 47430 248218 634570 282596 474677 588758 -31505 68506 268177 -13928 389 463643 710571 665742 470801 708919 265911 547347 190755 611352 467543 778426 392685 44656 506921 112998 563024 572148 597503 625136 671719 -18430 156385 612031 430947 268473 604152 269726 229873 99277 397123 113469 217008 536641 370807 350010 701151 195007 356499 95600 37243 81045 33812 -30838 634651 181536 705919 319905 327150 505252 -24339 -23072 438105 196613 391286 706396 381223 261163 415817 51001 41450 718478 242363 -27469 90244 704401 187666 650252 27951 -55257 8842 772522 527375 709472 564297 124625 124614 213174 59746 82209 664977 611430 374891 724822 456995 594836 425339 500731 569134 -7778 -12777 3959 26229 227199 -53011 458023 172834 527445 -41275 628973 773092 130210 36522 179155 325129 182323 -19905 79494 204614 779874 157026 403043 616282 464386 234758 437086 158934 169857 725413 648690 547180 578509 75405 318243 -54005 664437 54094 37657 446084 219150 501906 679572 707345 185768 274920 434628 705756 59597 746999 169960 -3091 765181 457474 636868 576235 301889 318261 183129 551494 528589 97304 356819 339510 704491 381192 508175 369313 336744 558235 562946 307646 412344 136264 297159 480550 768621 553936 338722 177623 765186 247808 202359 293348 433379 411122 422074 711621 290279 585691 179416 695906 228658 182217 746533 147290 55735 15221 -26012 466383 -14591 160781 253657 94055 617564 668686 636614 421770 105379 670287 224775 117672 183591 145308 20842 421212 767353 285932 503396 233477 567900 647262 -39656 478471 99089 -10155 105866 627221 92022 448981 -24429 195440 285817 73623 777744 329298 42007 541931 631374 717105 191886 656147 53913 601059 162632 458887 722996 15952 78930 348512 32833 204870 731348 145787 643608 295816 339370 507058 744991 438668 109873 599457 261538 567973 73851 736843 718687 375884 482632 107819 36893 162905 549523 467940 324973 652356 703971 623372 644904 625559 496759 778769 493114 535849 612330 662217 442694 55320 664656 672367 455023 642010 192853 573512 66433 134970 587838 92372 282347 -27101 261282 554452 701863 666736 769973 -10230 45727\n"; ./push_swap $ARG | ./checker_linux $ARG
 1279  ARG="6 8 9 5 4343434"; ./push_swap $ARG | ./checker_linux $ARG
 1280  ARG="477 484 238 66 415 105 9 69 280 60 212 379 161 348 252 287 467 365 139 5 99 198 42 192 384 101 183 47 4 112 311 211 279 460 189 54 190 232 465 111 375 443 493 196 275 157 128 377 205 39 410 414 116 231 429 327 100 352 153 53 186 208 386 202 237 80 17 456 337 423 431 417 393 97 86 172 176 421 293 70 373 380 177 209 434 345 374 207 383 245 397 264 358 73 22 468 416 75 390 228 483 216 301 90 81 418 10 185 387 181 38 253 349 369 65 288 199 356 273 499 11 488 24 87 233 413 289 360 427 482 470 440 74 367 138 458 143 424 474 436 56 323 84 364 270 146 268 309 441 305 267 278 121 283 442 408 361 140 489 35 471 142 472 432 14 210 59 497 160 481 464 33 170 21 473 394 399 265 19 346 102 213 164 313 76 250 12 291 466 341 256 64 115 117 259 182 295 26 388 314 372 147 151 389 290 57 118 82 224 277 67 242 435 44 62 2 91 347 303 412 77 191 55 404 462 406 163 317 52 444 335 104 98 450 248 324 322 396 180 122 391 88 480 206 120 328 0 78 79 201 437 37 426 401 353 244 23 137 330 400 40 63 455 312 297 368 15 103 229 376 148 225 125 83 34 370 197 123 266 355 449 381 133 188 325 20 498 236 135 58 217 96 454 92 6 48 362 159 490 285 407 107 276 221 218 491 487 326 451 258 340 13 422 476 479 145 271 247 371 354 329 3 50 257 51 32 126 226 203 299 255 72 363 274 150 184 272 1 254 174 261 338 306 108 127 402 428 495 134 302 200 478 385 173 124 18 16 307 165 220 281 156 321 332 119 36 492 357 214 85 448 227 425 136 240 445 68 336 141 234 149 132 500 187 475 292 286 204 409 366 496 344 411 395 382 318 144 93 320 94 263 310 195 296 114 43 316 282 251 129 230 130 269 398 319 219 447 155 304 342 49 46 113 61 178 494 7 41 430 31 131 359 110 154 469 463 168 300 453 333 106 171 27 452 71 95 284 298 249 8 486 260 433 331 194 25 339 457 392 215 378 446 405 30 241 315 485 246 167 175 152 334 351 459 193 403 438 243 89 223 179 109 162 350 169 294 439 343 29 45 235 262 28 308 461 239 158 420 419 166"; ./push_swap $ARG | ./checker_linux $ARG
 1281  ARG="737981 402041 735953 78012 188087 746382 529931 142509 501301 775224 438272 -56175 665958 768576 47955 100558 527637 82997 244707 152154 651443 662789 202057 696612 334205 77915 333521 218325 86782 405392 505646 454376 217313 606003 226949 313760 585116 -11961 371865 332390 662745 417038 612656 618478 328108 733320 113089 351050 161061 545726 161106 259607 487526 545239 79457 288969 83108 -11660 67078 541254 142703 126054 459282 -35883 246644 517840 337076 -8788 405025 23441 627793 248408 327485 125984 247495 235345 -36941 607497 650416 385206 168296 -5393 612746 443825 386587 441498 283551 407564 198711 179131 -23445 680934 363381 108820 144255 384779 279630 707525 734677 660804 422132 529515 -51736 57346 379766 55365 764671 533980 112955 613828 248397 375381 346012 605402 723945 524010 475512 195933 102136 134080 576660 111129 157314 259368 404400 645725 777041 458110 666069 668539 554367 690173 387267 22393 -51487 462989 558825 40732 430301 486312 21281 -43204 441517 -52159 752042 148282 540270 776568 768880 -31292 559623 25687 403665 549758 -54373 19283 450239 489100 70923 404371 593188 460386 332861 405778 215356 232591 343255 104876 477565 420704 500562 211555 582473 641182 98846 632365 603569 483935 73383 495829 19215 692420 177582 776315 768971 487021 442876 523827 745763 4409 451757 365261 259089 661272 47430 248218 634570 282596 474677 588758 -31505 68506 268177 -13928 389 463643 710571 665742 470801 708919 265911 547347 190755 611352 467543 778426 392685 44656 506921 112998 563024 572148 597503 625136 671719 -18430 156385 612031 430947 268473 604152 269726 229873 99277 397123 113469 217008 536641 370807 350010 701151 195007 356499 95600 37243 81045 33812 -30838 634651 181536 705919 319905 327150 505252 -24339 -23072 438105 196613 391286 706396 381223 261163 415817 51001 41450 718478 242363 -27469 90244 704401 187666 650252 27951 -55257 8842 772522 527375 709472 564297 124625 124614 213174 59746 82209 664977 611430 374891 724822 456995 594836 425339 500731 569134 -7778 -12777 3959 26229 227199 -53011 458023 172834 527445 -41275 628973 773092 130210 36522 179155 325129 182323 -19905 79494 204614 779874 157026 403043 616282 464386 234758 437086 158934 169857 725413 648690 547180 578509 75405 318243 -54005 664437 54094 37657 446084 219150 501906 679572 707345 185768 274920 434628 705756 59597 746999 169960 -3091 765181 457474 636868 576235 301889 318261 183129 551494 528589 97304 356819 339510 704491 381192 508175 369313 336744 558235 562946 307646 412344 136264 297159 480550 768621 553936 338722 177623 765186 247808 202359 293348 433379 411122 422074 711621 290279 585691 179416 695906 228658 182217 746533 147290 55735 15221 -26012 466383 -14591 160781 253657 94055 617564 668686 636614 421770 105379 670287 224775 117672 183591 145308 20842 421212 767353 285932 503396 233477 567900 647262 -39656 478471 99089 -10155 105866 627221 92022 448981 -24429 195440 285817 73623 777744 329298 42007 541931 631374 717105 191886 656147 53913 601059 162632 458887 722996 15952 78930 348512 32833 204870 731348 145787 643608 295816 339370 507058 744991 438668 109873 599457 261538 567973 73851 736843 718687 375884 482632 107819 36893 162905 549523 467940 324973 652356 703971 623372 644904 625559 496759 778769 493114 535849 612330 662217 442694 55320 664656 672367 455023 642010 192853 573512 66433 134970 587838 92372 282347 -27101 261282 554452 701863 666736 769973 -10230 45727"; ./push_swap $ARG | ./checker_linux $ARG
 1282  ARG="737981 402041 735953 78012 188087 746382 529931 142509 501301 775224 438272 -56175 665958 768576 47955 100558 527637 82997 244707 152154 651443 662789 202057 696612 334205 77915 333521 218325 86782 405392 505646 454376 217313 606003 226949 313760 585116 -11961 371865 332390 662745 417038 612656 618478 328108 733320 113089 351050 161061 545726 161106 259607 487526 545239 79457 288969 83108 -11660 67078 541254 142703 126054 459282 -35883 246644 517840 337076 -8788 405025 23441 627793 248408 327485 125984 247495 235345 -36941 607497 650416 385206 168296 -5393 612746 443825 386587 441498 283551 407564 198711 179131 -23445 680934 363381 108820 144255 384779 279630 707525 734677 660804 422132 529515 -51736 57346 379766 55365 764671 533980 112955 613828 248397 375381 346012 605402 723945 524010 475512 195933 102136 134080 576660 111129 157314 259368 404400 645725 777041 458110 666069 668539 554367 690173 387267 22393 -51487 462989 558825 40732 430301 486312 21281 -43204 441517 -52159 752042 148282 540270 776568 768880 -31292 559623 25687 403665 549758 -54373 19283 450239 489100 70923 404371 593188 460386 332861 405778 215356 232591 343255 104876 477565 420704 500562 211555 582473 641182 98846 632365 603569 483935 73383 495829 19215 692420 177582 776315 768971 487021 442876 523827 745763 4409 451757 365261 259089 661272 47430 248218 634570 282596 474677 588758 -31505 68506 268177 -13928 389 463643 710571 665742 470801 708919 265911 547347 190755 611352 467543 778426 392685 44656 506921 112998 563024 572148 597503 625136 671719 -18430 156385 612031 430947 268473 604152 269726 229873 99277 397123 113469 217008 536641 370807 350010 701151 195007 356499 95600 37243 81045 33812 -30838 634651 181536 705919 319905 327150 505252 -24339 -23072 438105 196613 391286 706396 381223 261163 415817 51001 41450 718478 242363 -27469 90244 704401 187666 650252 27951 -55257 8842 772522 527375 709472 564297 124625 124614 213174 59746 82209 664977 611430 374891 724822 456995 594836 425339 500731 569134 -7778 -12777 3959 26229 227199 -53011 458023 172834 527445 -41275 628973 773092 130210 36522 179155 325129 182323 -19905 79494 204614 779874 157026 403043 616282 464386 234758 437086 158934 169857 725413 648690 547180 578509 75405 318243 -54005 664437 54094 37657 446084 219150 501906 679572 707345 185768 274920 434628 705756 59597 746999 169960 -3091 765181 457474 636868 576235 301889 318261 183129 551494 528589 97304 356819 339510 704491 381192 508175 369313 336744 558235 562946 307646 412344 136264 297159 480550 768621 553936 338722 177623 765186 247808 202359 293348 433379 411122 422074 711621 290279 585691 179416 695906 228658 182217 746533 147290 55735 15221 -26012 466383 -14591 160781 253657 94055 617564 668686 636614 421770 105379 670287 224775 117672 183591 145308 20842 421212 767353 285932 503396 233477 567900 647262 -39656 478471 99089 -10155 105866 627221 92022 448981 -24429 195440 285817 73623 777744 329298 42007 541931 631374 717105 191886 656147 53913 601059 162632 458887 722996 15952 78930 348512 32833 204870 731348 145787 643608 295816 339370 507058 744991 438668 109873 599457 261538 567973 73851 736843 718687 375884 482632 107819 36893 162905 549523 467940 324973 652356 703971 623372 644904 625559 496759 778769 493114 535849 612330 662217 442694 55320 664656 672367 455023 642010 192853 573512 66433 134970 587838 92372 282347 -27101 261282 554452 701863 666736 769973 -10230 45727\n"; ./push_swap $ARG | ./checker_linux $ARG
 1283  ARG="737981 402041 735953 78012 188087 746382 529931 142509 501301 775224 438272 -56175 665958 768576 47955 100558 527637 82997 244707 152154 651443 662789 202057 696612 334205 77915 333521 218325 86782 405392 505646 454376 217313 606003 226949 313760 585116 -11961 371865 332390 662745 417038 612656 618478 328108 733320 113089 351050 161061 545726 161106 259607 487526 545239 79457 288969 83108 -11660 67078 541254 142703 126054 459282 -35883 246644 517840 337076 -8788 405025 23441 627793 248408 327485 125984 247495 235345 -36941 607497 650416 385206 168296 -5393 612746 443825 386587 441498 283551 407564 198711 179131 -23445 680934 363381 108820 144255 384779 279630 707525 734677 660804 422132 529515 -51736 57346 379766 55365 764671 533980 112955 613828 248397 375381 346012 605402 723945 524010 475512 195933 102136 134080 576660 111129 157314 259368 404400 645725 777041 458110 666069 668539 554367 690173 387267 22393 -51487 462989 558825 40732 430301 486312 21281 -43204 441517 -52159 752042 148282 540270 776568 768880 -31292 559623 25687 403665 549758 -54373 19283 450239 489100 70923 404371 593188 460386 332861 405778 215356 232591 343255 104876 477565 420704 500562 211555 582473 641182 98846 632365 603569 483935 73383 495829 19215 692420 177582 776315 768971 487021 442876 523827 745763 4409 451757 365261 259089 661272 47430 248218 634570 282596 474677 588758 -31505 68506 268177 -13928 389 463643 710571 665742 470801 708919 265911 547347 190755 611352 467543 778426 392685 44656 506921 112998 563024 572148 597503 625136 671719 -18430 156385 612031 430947 268473 604152 269726 229873 99277 397123 113469 217008 536641 370807 350010 701151 195007 356499 95600 37243 81045 33812 -30838 634651 181536 705919 319905 327150 505252 -24339 -23072 438105 196613 391286 706396 381223 261163 415817 51001 41450 718478 242363 -27469 90244 704401 187666 650252 27951 -55257 8842 772522 527375 709472 564297 124625 124614 213174 59746 82209 664977 611430 374891 724822 456995 594836 425339 500731 569134 -7778 -12777 3959 26229 227199 -53011 458023 172834 527445 -41275 628973 773092 130210 36522 179155 325129 182323 -19905 79494 204614 779874 157026 403043 616282 464386 234758 437086 158934 169857 725413 648690 547180 578509 75405 318243 -54005 664437 54094 37657 446084 219150 501906 679572 707345 185768 274920 434628 705756 59597 746999 169960 -3091 765181 457474 636868 576235 301889 318261 183129 551494 528589 97304 356819 339510 704491 381192 508175 369313 336744 558235 562946 307646 412344 136264 297159 480550 768621 553936 338722 177623 765186 247808 202359 293348 433379 411122 422074 711621 290279 585691 179416 695906 228658 182217 746533 147290 55735 15221 -26012 466383 -14591 160781 253657 94055 617564 668686 636614 421770 105379 670287 224775 117672 183591 145308 20842 421212 767353 285932 503396 233477 567900 647262 -39656 478471 99089 -10155 105866 627221 92022 448981 -24429 195440 285817 73623 777744 329298 42007 541931 631374 717105 191886 656147 53913 601059 162632 458887 722996 15952 78930 348512 32833 204870 731348 145787 643608 295816 339370 507058 744991 438668 109873 599457 261538 567973 73851 736843 718687 375884 482632 107819 36893 162905 549523 467940 324973 652356 703971 623372 644904 625559 496759 778769 493114 535849 612330 662217 442694 55320 664656 672367 455023 642010 192853 573512 66433 134970 587838 92372 282347 -27101 261282 554452 701863 666736 769973 -10230 45727"; ./push_swap $ARG | ./checker_linux $ARG
 1284  valgrind --leak-check=full --show-leak-kinds=all ./push_swap jkgjukf erjhfiu, rfuierfkeruf erferyufuetgetg gf5t
 1285  make re
 1286  valgrind --leak-check=full --show-leak-kinds=all ./push_swap jkgjukf erjhfiu, rfuierfkeruf erferyufuetgetg gf5t
 1287  make re
 1288  valgrind --leak-check=full --show-leak-kinds=all ./push_swap jkgjukf erjhfiu, rfuierfkeruf erferyufuetgetg gf5t
 1289  make fclean
 1290  git remote add origin https://github.com/Remi-Jacobs/Push_swap.git
 1291  git remote add github https://github.com/Remi-Jacobs/Push_swap.git
 1292  git branch -M main
 1293  git push -u github main
 1294  git remote add origin https://github.com/Remi-Jacobs/Push_swap.git
 1295  git remote add github https://github.com/Remi-Jacobs/Push_swap.git
 1296  git push -u github main
 1297  clear
 1298  mkdir level 1
 1299  mkdir Level_2
 1300  cd Level_2
 1301  touch print_bits.c
 1302  man ascii
 1303  cc print_bits.c
 1304  ./a.out 2
 1305  cc print_bits.c
 1306  ./a.out 2
 1307  ./a.out 3
 1308  cc print_bits.c
 1309  ./a.out 2
 1310  cc print_bits.c
 1311  ./a.out 2
 1312  ./a.out 
 1313  cc print_bits.c
 1314  man atoi
 1315  cc print_bits.c
 1316  man atoi
 1317  cc print_bits.c
 1318  ./a.out SOH
 1319  ./a.out STX
 1320  ./a.out 2
 1321  ./a.out 4
 1322  ./a.out 255
 1323  cc print_bits.c
 1324  clear
 1325  cc print_bits.c
 1326  ./a.out
 1327  cc print_bits.c
 1328  ./a.out
 1329  cc print_bits.c
 1330  ./a.out
 1331  cc print_bits.c
 1332  ./a.out
 1333  touch swap_bits.c
 1334  touch reverse_bits.c
 1335  cc reverse_bits.c
 1336  ./a.out
 1337  cc print_bits.c
 1338  ./a.out
 1339  cc print_bits.c
 1340  ./a.out
 1341  cc reverse_bits.c
 1342  ./a.out
 1343  cc reverse_bits.c
 1344  ./a.out
 1345  cc reverse_bits.c
 1346  ./a.out
 1347  cc reverse_bits.c
 1348  ./a.out
 1349  cc reverse_bits.c
 1350  ./a.out
 1351  clear
 1352  touch snake_to_camel.c
 1353  man mallloc
 1354  man malloc
 1355  man ascii
 1356  cc snake_to_camel.c
 1357  ./a.out "here_is_a_snake_case_word"
 1358  ./a.out "hello_world" | cat -e
 1359  ./a.out 
 1360  cc snake_to_camel.c
 1361  ./a.out "hello_world" | cat -e
 1362  ./a.out "here_is_a_snake_case_word"
 1363  ./a.out
 1364  cc snake_to_camel.c
 1365  ./a.out "here_is_a_snake_case_word"
 1366  ./a.out
 1367  ./a.out "hia" "bsd"
 1368  touch union.c
 1369  cc union.c
 1370  ./a.out zpadinton "paqefwtdjetyiytjneytjoeyjnejeyj"
 1371  ./a.out ddf6vewg64f gtwthgdwthdwfteewhrtag6h4ffdhsd 
 1372  cc union.c
 1373  ./a.out ddf6vewg64f gtwthgdwthdwfteewhrtag6h4ffdhsd 
 1374  cc union.c
 1375  ./a.out ddf6vewg64f gtwthgdwthdwfteewhrtag6h4ffdhsd 
 1376  cc union.c
 1377  ./a.out ddf6vewg64f gtwthgdwthdwfteewhrtag6h4ffdhsd 
 1378  clear
 1379  cc union.c
 1380  ./a.out ddf6vewg64f gtwthgdwthdwfteewhrtag6h4ffdhsd 
 1381  ./a.out zpadinton "paqefwtdjetyiytjneytjoeyjnejeyj"
 1382  touch wdmatch.c
 1383  touch ft_putnbr.c
 1384  cc ft_putnbr.c
 1385  ./a.out
 1386  touch lcm.c
 1387  touch parasum.c
 1388  cc parasum.c
 1389  ./a.out
 1390  ./a.out 123 3 5
 1391  cc parasum.c
 1392  ./a.out 123 3 5
 1393  ./a.out
 1394  ./a.out 43 56 78 43
 1395  touch pgcd.c
 1396  cc pgcd.c
 1397  ./a.out 48 18
 1398  ./a.out 48 17
 1399  ./a.out 48 16
 1400  cc pgcd.c
 1401  ./a.out 48 18
 1402  touch print_hex.c
 1403  cc print_hex.c
 1404  ./a.out 56
 1405  ./a.out 300
 1406  cc print_hex.c
 1407  ./a.out 300
 1408  ./a.out 56
 1409  cc print_hex.c
 1410  ./a.out 56
 1411  cc pgcd.c
 1412  ./a.out 56
 1413  git clone https://github.com/emreakdik/42ExamPractice
 1414  ls
 1415  cd 42ExamPractice
 1416  bash exampractice.sh
 1417  ls
 1418  cd rendu
 1419  mkdir first_word
 1420  cd first_word
 1421  touch first_word.c
 1422  man ascii
 1423  test
 1424  cd ..
 1425  test
 1426  cd ..
 1427  test
 1428  cd ..
 1429  test
 1430  cd 42ExamPractice
 1431  test
 1432  bash exampractice.sh
 1433  ls
 1434  cd rendu
 1435  ls
 1436  mkdir fizz_buzz
 1437  cd fi
 1438  cd fizz_buzz
 1439  touch fizz_buzz.c
 1440  ls
 1441  cd ..
 1442  ls
 1443  cd fizz_buzz
 1444  ls
 1445  cc fizz_buzz.c
 1446  ./a.out
 1447  cc fizz_buzz.c
 1448  ./a.out
 1449  cc fizz_buzz.c
 1450  ./a.out
 1451  man ascii
 1452  cc fizz_buzz.c
 1453  man ascii
 1454  ./a.out
 1455  bash exampractice.sh
 1456  cd ..
 1457  mkdir put_str
 1458  cd put_str
 1459  touch put_str.c
 1460  cd ..
 1461  ls
 1462  mkdir ft_strcpy
 1463  cd ft_strcpy
 1464  touch ft_strcpy.c
 1465  man strcpy
 1466  cd ..
 1467  mkdir ft_swap
 1468  cd ft_swap
 1469  touch ft_swap.c
 1470  cd ..
 1471  mkdir repeat_alpha
 1472  cd repeat_alpha
 1473  touch repeat_alpha.c
 1474  man ascii
 1475  cc repeat_alpha.c
 1476  ./a.out "abc"
 1477  ./a.out "Alex"
 1478  ./a.out "Aalex"
 1479  cd ..
 1480  mkdir rev_print
 1481  cd rev
 1482  cd rev_print
 1483  touch rev_print.c
 1484  cc rev_print.c
 1485  ./a.out "Aalex"
 1486  cc rev_print.c
 1487  ./a.out "Aalex"
 1488  cd ..
 1489  mkdir rot_13
 1490  cd rot_13
 1491  touch rot_13.c
 1492  cc rot_13.c
 1493  ./a.out "abc"
 1494  cc rot_13.c
 1495  ./a.out "abc"
 1496  ./a.out "My horse is Amazing."
 1497  ls
 1498  cd ..
 1499  ls
 1500  cd rendu
 1501  mkdir print_bits
 1502  cd print_bits
 1503  touch print_bits.c
 1504  touch flood_fill.c
 1505  touch fprime.c
 1506  touch ft_itoa.c
 1507  touch ft_list_foreach.c
 1508  touch ft_remove_listif.c
 1509  touch ft_split.c
 1510  man ascii
 1511  touch rev_wstr.c
 1512  touch rotstring.c
 1513  clear
 1514  cc toyfd.c
 1515  ./a.out
 1516  cc toyfd.c
 1517  ./a.out
 1518  cc toyfd.c
 1519  ./a.out
 1520  cc toyfd.c
 1521  ./a.out
 1522  cc toyfd.c
 1523  ./a.out
 1524  cc toyfd.c
 1525  ./a.out
 1526  cc toyfd.c
 1527  ./a.out
 1528  cc toyfd.c
 1529  ./a.out
 1530  cc toyfd.c
 1531  ./a.out
 1532  cc toyfd.c
 1533  ./a.out
 1534  cc toyfd.c
 1535  ./a.out
 1536  man strchr
 1537  clear
 1538  touch ft_strchr.c
 1539  man strchr
 1540  cc ft_strchr.c
 1541  ./a.out "My horse is Amazing." e
 1542  cc ft_strchr.c
 1543  ./a.out "My horse is Amazing." e
 1544  ./a.out "My horse is Amazing." u
 1545  cc ft_strchr.c
 1546  ./a.out "My horse is Amazing." e
 1547  ./a.out "My horse is Amazing." u
 1548  cc ft_strchr.c
 1549  ./a.out "My horse is Amazing." u
 1550  ./a.out "My horse is Amazing." e
 1551  cc ft_strchr.c
 1552  ./a.out "My horse is Amazing." e
 1553  Y
 1554  clear
 1555  cc forky.c
 1556  ./a.out
 1557  cc forky.c
 1558  ./a.out
 1559  cc forky.c
 1560  ./a.out
 1561  man wait
 1562  cc forky.c
 1563  man wait
 1564  cc forky.c
 1565  ./a.out
 1566  cc forky.c
 1567  ./a.out
 1568  clear
 1569  cc forky.c
 1570  ./a.out
 1571  clear
 1572  cc forky.c
 1573  ./a.out
 1574  cc forky.c
 1575  clear
 1576  cc forky.c
 1577  ./a.out
 1578  clear
 1579  cc forky.c
 1580  ./a.out
 1581  clear
 1582  cc forky.c
 1583  ./a.out
 1584  cc forky.c
 1585  ./a.out
 1586  cc forky.c
 1587  ./a.out
 1588  cc forky.c
 1589  ./a.out
 1590  clear
 1591  cc pid.c
 1592  ./a.out
 1593  cc pid.c
 1594  ./a.out
 1595  cc pid.c
 1596  ./a.out
 1597  cc pid.c
 1598  ./a.out
 1599  cc pid.c
 1600  ./a.out
 1601  clear
 1602  cc pipe.c
 1603  ./a.out
 1604  cc par_child.c
 1605  ./a.out
 1606  cc par_child.c
 1607  ./a.out
 1608  cc par_child.c
 1609  ./a.out
 1610  cc par_child.c
 1611  ./a.out
 1612  cc par_child.c
 1613  ./a.out
 1614  cc par_child.c
 1615  ./a.out
 1616  cc par_child.c
 1617  ./a.out
 1618  cc par_child.c
 1619  ./a.out
 1620  cc par_child.c
 1621  ./a.out
 1622  cc par_child.c
 1623  ./a.out
 1624  cc par_child.c
 1625  ./a.out
 1626  cc par_child.c
 1627  ./a.out
 1628  cc par_child.c
 1629  ./a.out
 1630  cc par_child.c
 1631  ./a.out
 1632  cc par_child.c
 1633  ./a.out
 1634  cc par_child.c
 1635  ./a.out
 1636  cc par_child.c
 1637  ./a.out
 1638  cc par_child.c
 1639  ./a.out
 1640  cc par_child.c
 1641  ./a.out
 1642  cc par_child.c
 1643  ./a.out
 1644  cc par_child.c
 1645  ./a.out
 1646  cc par_child.c
 1647  ./a.out
 1648  cc par_child.c
 1649  ./a.out
 1650  cc par_child.c
 1651  ./a.out
 1652  cc par_child.c
 1653  ./a.out
 1654  cc par_child.c
 1655  ./a.out
 1656  cc par_child.c
 1657  ./a.out
 1658  cc par_child.c
 1659  ./a.out
 1660  cc par_child.c
 1661  ./a.out
 1662  cc par_child.c
 1663  ./a.out
 1664  cc par_child.c
 1665  ./a.out
 1666  cc par_child.c
 1667  ./a.out
 1668  cc par_child.c
 1669  ./a.out
 1670  cc par_child.c
 1671  ./a.out
 1672  cc par_child.c
 1673  ./a.out
 1674  cc par_child.c
 1675  ./a.out
 1676  cc par_child.c
 1677  ./a.out
 1678  cc par_child.c
 1679  ./a.out
 1680  cc par_child.c
 1681  ./a.out
 1682  cc par_child.c
 1683  ./a.out
 1684  cc par_child.c
 1685  ./a.out
 1686  cc par_child.c
 1687  ./a.out
 1688  cc par_child.c
 1689  ./a.out
 1690  cc par_child.c
 1691  ./a.out
 1692  ping google.com
 1693  install ping
 1694  touch exec.c
 1695  cc exec.c
 1696  ./a.out
 1697  cc exec.c
 1698  ./a.out
 1699  cc exec.c
 1700  ./a.out
 1701  cc exec.c
 1702  ./a.out
 1703  cc exec.c
 1704  ./a.out
 1705  cc exec.c
 1706  ./a.out
 1707  cc exec.c
 1708  ./a.out
 1709  cc exec.c
 1710  touch exec2.c
 1711  cc exec.c
 1712  ./a.out
 1713  cc exec.c
 1714  ./a.out
 1715  cc exec.c
 1716  ./a.out
 1717  which ls
 1718  ls
 1719  which wc
 1720  ls -la
 1721  env
 1722  touch main.c
 1723  cc main.c
 1724  ./a.out
 1725  d
 1726  ./a.out
 1727  z
 1728  ./a.out
 1729  z
 1730  clear
 1731  ./a.out
 1732  fg
 1733  cc main.c
 1734  ./a.out
 1735  fg
 1736  man SA_RESTART
 1737  man signal
 1738  touch signal.c
 1739  cc signal.c
 1740  ./a.out
 1741  cc signal.c
 1742  clear
 1743  cc signal.c
 1744  ./a.out
 1745  cc signal.c
 1746  ./a.out
 1747  fg
 1748  cc signal.c
 1749  ./a.out
 1750  cc signal.c
 1751  ./a.out
 1752  fg
 1753  cc signal.c
 1754  ./a.out
 1755  cc signal.c
 1756  ./a.out
 1757  cc signal.c
 1758  ./a.out
 1759  cc signal.c
 1760  ./a.out
 1761  cc signal.c
 1762  ./a.out
 1763  touch arr2pipe.c
 1764  cc arr2pipe.c
 1765  ./a.out
 1766  cc arr2pipe.c
 1767  ./a.out
 1768  cc arr2pipe.c
 1769  ./a.out
 1770  cc arr2pipe.c
 1771  ./a.out
 1772  cc arr2pipe.c
 1773  ./a.out
 1774  cc arr2pipe.c
 1775  ./a.out
 1776  cc arr2pipe.c
 1777  ./a.out
 1778  cc arr2pipe.c
 1779  ./a.out
 1780  cc arr2pipe.c
 1781  ./a.out
 1782  cc arr2pipe.c
 1783  ./a.out
 1784  touch str2pipe.c
 1785  cc str2pipe.c
 1786  ./a.out
 1787  cc str2pipe.c
 1788  ./a.out
 1789  cc str2pipe.c
 1790  ./a.out
 1791  cc strlen
 1792  cc strlenn.c
 1793  clear
 1794  cc strlenn.c
 1795  ./a.out
 1796  ./a.out "My horse is Amazing."
 1797  cc strlenn.c
 1798  ./a.out "My horse is Amazing."
 1799  ./a.out Maze
 1800  touch waitpid.c
 1801  cc waitpid.c
 1802  ./a.out
 1803  cc waitpid.c
 1804  ./a.out
 1805  cc waitpid.c
 1806  ./a.out
 1807  cc waitpid.c
 1808  ./a.out
 1809  cc waitpid.c
 1810  ./a.out
 1811  cc waitpid.c
 1812  ./a.out
 1813  cc waitpid.c
 1814  ./a.out
 1815  cc waitpid.c
 1816  ./a.out
 1817  cc waitpid.c
 1818  ./a.out
 1819  touch multforks.c
 1820  cc waitpid.c
 1821  ./a.out
 1822  cc waitpid.c
 1823  ./a.out
 1824  cc waitpid.c
 1825  ./a.out
 1826  cc waitpid.c
 1827  ./a.out
 1828  cc waitpid.c
 1829  ./a.out
 1830  cc waitpid.c
 1831  ./a.out
 1832  cc multforks.c
 1833  clear
 1834  cc multforks.c
 1835  clear
 1836  cc multforks.c
 1837  ./a.out
 1838  clear
 1839  cc multforks.c
 1840  ./a.out
 1841  PROCESS_NUM 7 ./a.out
 1842  ./a.out PROCESS_NUM 7
 1843  ./a.out PROCESS_NUM = 7
 1844  clear
 1845  cc multforks.c
 1846  ./a.out
 1847  cc multforks.c
 1848  ./a.out
 1849  cc multforks.c
 1850  ./a.out
 1851  cc multforks.c
 1852  ./a.out
 1853  ls
 1854  cc ..
 1855  cd ..
 1856  ls
 1857  touch pipex.h
 1858  clear
 1859  man strerror
 1860  man access
 1861  man dup
 1862  man execve
 1863  man fork
 1864  man pipe
 1865  man unlink
 1866  man perror
 1867  man waitpid
 1868  man free
 1869  clear
 1870  cd ..
 1871  touch pipex.c
 1872  env
 1873  ls -la
 1874  clear
 1875  strace "ls" -la
 1876  which ls
 1877  which ls --color=tty
 1878  which  --color=tty
 1879  which ls--color=tty
 1880  touch Makefile
 1881  PROCESS_NUM=7 ./a.out
 1882  $PROCESS_NUM=7 ./a.out
 1883  BUFFER_SIZE=7 ./a.out
 1884  PROCESS_NUM= 7 ./a.out
 1885  PROCESS_NUM=7 ./a.out
 1886  cc multforks.c
 1887  cc multforks.c PROCESS_NUM=7
 1888  cc multforks.c 
 1889  PROCESS_NUM=7 ./a.out
 1890  PROCESS_NUM=5 ./a.out
 1891  touch envp.c
 1892  cc envp.c
 1893  ./a.out
 1894  env
 1895  touch pipex_innit.c
 1896  env
 1897  man strncmp
 1898  man strnstr
 1899  man strncmp
 1900  env
 1901  touch test_funct
 1902  make
 1903  clear
 1904  make
 1905  ./pipex infile "ls -l" "wc -l" outfile
 1906  < infile ls -l | wc -l > outfile
 1907  touch infile
 1908  ./pipex infile "ls -l" "wc -l" outfile
 1909  < infile ls -l | wc -l > outfile
 1910  < infile grep a1 | wc -w > outfile
 1911  make fclean
 1912  make
 1913  ./pipex infile "ls -l" "wc -l" outfile
 1914  make
 1915  make clean
 1916  make
 1917  ./pipex infile "ls -l" "wc -l" outfile
 1918  make clean
 1919  ./pipex infile "ls -l" "wc -l" outfile
 1920  make clean
 1921  make
 1922  ./pipex infile "ls -l" "wc -l" outfile
 1923  make clean
 1924  make
 1925  ./pipex infile "ls -l" "wc -l" outfile
 1926  make clean
 1927  make
 1928  ./pipex infile "ls -l" "wc -l" outfile
 1929  make clean
 1930  make
 1931  ./pipex infile "ls -l" "wc -l" outfile
 1932  valgrind --leak-check=full --show-leak-kinds=all ./pipex infile "ls -l" "wc -l" outfile
 1933  env
 1934  make clean
 1935  make
 1936  ./pipex infile "ls -l" "wc -l" outfile
 1937  make clean
 1938  make
 1939  ./pipex infile "ls -l" "wc -l" outfile
 1940  touch pipex_utils.c
 1941  make clean
 1942  make
 1943  ./pipex infile "ls -l" "wc -l" outfile
 1944  < infile grep a1 | wc -w > outfile
 1945  ./pipex < infile grep a1 | wc -w > outfile
 1946  ./pipex  infile grep a1 | wc -w  outfile
 1947  ./pipex < infile grep a1 | wc -w > outfile
 1948  < infile grep a1 | wc -w > outfile
 1949  < infile ls -l | wc -l > outfile
 1950  make fclean
 1951  make
 1952  ./pipex < infile grep a1 | wc -w > outfile
 1953  ./pipex infile "ls -l" "wc -l" outfile
 1954  < infile ls -l | wc -l > outfile
 1955  valgrind --leak-check=full --show-leak-kinds=all ./pipex infile "ls -l" "wc -l" outfile
 1956  make re
 1957  valgrind --leak-check=full --show-leak-kinds=all ./pipex infile "ls -l" "wc -l" outfile
 1958  make re
 1959  valgrind --leak-check=full --show-leak-kinds=all ./pipex infile "ls -l" "wc -l" outfile
 1960  make re
 1961  valgrind --leak-check=full --show-leak-kinds=all ./pipex infile "ls -l" "wc -l" outfile
 1962  make re
 1963  valgrind --leak-check=full --show-leak-kinds=all ./pipex infile "ls -l" "wc -l" outfile
 1964  make fclean
 1965  cd ..
 1966  make
 1967  valgrind --leak-check=full --show-leak-kinds=all ./pipex infile "ls -l" "wc -l" outfile
 1968  make re
 1969  valgrind --leak-check=full --show-leak-kinds=all ./pipex infile "ls -l" "wc -l" outfile
 1970  ./pipex infile "ls -l" "wc -l" outfile
 1971  make re
 1972  clear
 1973  make re
 1974  ./pipex infile "ls -l" "wc -l" outfile
 1975  make re
 1976  ./pipex infile "ls -l" "wc -l" outfile
 1977  make re
 1978  ./pipex infile "ls -l" "wc -l" outfile
 1979  make re
 1980  ./pipex infile "ls -l" "wc -l" outfile
 1981  valgrind --leak-check=full --show-leak-kinds=all ./pipex infile "ls -l" "wc -l" outfile
 1982  make re
 1983  valgrind --leak-check=full --show-leak-kinds=all ./pipex infile "ls -l" "wc -l" outfile
 1984  env
 1985  valgrind --leak-check=full --show-leak-kinds=all ./pipex infile "ls -l" "wc -l" outfile
 1986  make re
 1987  valgrind --leak-check=full --show-leak-kinds=all ./pipex infile "ls -l" "wc -l" outfile
 1988  make re
 1989  valgrind --leak-check=full --show-leak-kinds=all ./pipex infile "ls -l" "wc -l" outfile
 1990  valgrind --leak-check=full --show-leak-kinds=all < infile ls -l | wc -l > outfile
 1991  make re
 1992  valgrind --leak-check=full --show-leak-kinds=all ./pipex infile "ls -l" "wc -l" outfile
 1993  make re
 1994  valgrind --leak-check=full --show-leak-kinds=all ./pipex infile "ls -l" "wc -l" outfile
 1995  ./pipex infile  "wc -l" outfile
 1996  make re
 1997  valgrind --leak-check=full --show-leak-kinds=all ./pipex infile "ls -l" "wc -l" outfile
 1998  make re
 1999  valgrind --leak-check=full --show-leak-kinds=all ./pipex infile "ls -l" "wc -l" outfile
 2000  make re
 2001  valgrind --leak-check=full --show-leak-kinds=all ./pipex infile "ls -l" "wc -l" outfile
 2002  make re
 2003  ./pipex infile "ls -l" "wc -l" outfile
 2004  valgrind --leak-check=full --show-leak-kinds=all ./pipex infile "ls -l" "wc -l" outfile
 2005  touch infile
 2006  valgrind --leak-check=full --show-leak-kinds=all ./pipex infile "ls -l" "wc -l" outfile
 2007  make re
 2008  valgrind --leak-check=full --show-leak-kinds=all ./pipex infile  "wc -l" outfile
 2009  valgrind --leak-check=full --show-leak-kinds=all ./pipex infile   outfile
 2010  git innit
 2011  git init
 2012  git commit -m "first commit"
 2013  git branch -M main
 2014  git remote add origin https://github.com/Remi-Jacobs/pipex.git
 2015  git push -u origin main
 2016  git commit -m "second commit"
 2017  git branch -M main
 2018  git remote add origin https://github.com/Remi-Jacobs/pipex.git
 2019  git push -u origin main
 2020  make re
 2021  bash -c "$(curl -fsSL https://raw.github.com/xicodomingues/francinette/master/bin/install.sh)"
 2022  paco
 2023  ~/.zshrc
 2024  bash -c "$(curl -fsSL https://raw.github.com/xicodomingues/francinette/master/bin/install.sh)"
 2025  paco
 2026  Teste file with stuff inside
 2027  That does nothing
 2028  And also have some lines
 2029  man strerror
 2030  < infile ls -l |  > outfile
 2031  < infile ls -l | wc -l > outfile
 2032  ./pipex infile  "wc -l" outfile
 2033  make re
 2034  ./pipex infile  "wc -l" outfile
 2035  man strerror
 2036  make re
 2037  ./pipex infile  "wc -l" outfile
 2038  ./pipex infile  "wc -l"
 2039  make re
 2040  ./pipex infile  "wc -l"
 2041  man strerror
 2042  man perror
 2043  make re
 2044  ./pipex infile  "wc -l"
 2045  make re
 2046  ./pipex infile  "wc -l" outfile
 2047  echo
 2048  make re
 2049  ./pipex infile  "wc -l" outfile
 2050  make re
 2051  ./pipex infile  "wc -l" outfile
 2052  make re
 2053  ./pipex infile  "wc -l" outfile
 2054  make re
 2055  ./pipex infile  "wc -l" outfile
 2056  valgrind --leak-check=full --show-leak-kinds=all ./pipex infile  "wc -l" outfile
 2057  make re
 2058  ./pipex infile  "wc -l" outfile
 2059  make re
 2060  paco
 2061  Teste file with stuff inside
 2062  That does nothing
 2063  And also have some lines
 2064  make re
 2065  paco
 2066  Teste file with stuff inside
 2067  That does nothing
 2068  And also have some lines
 2069  make re
 2070  paco
 2071  Teste file with stuff inside
 2072  That does nothing
 2073  And also have some lines
 2074  ls
 2075  clear
 2076  paco
 2077  Teste file with stuff inside
 2078  That does nothing
 2079  And also have some lines
 2080  ls
 2081  ./pipex infile  "ls" "wc -l"  outfile
 2082  ./pipex infile  "ls" "cat -e"  outfile
 2083  ./pipex infile  "cat" "cat -e"  outfile
 2084  ./pipex infile  "cat" "ls"  outfile
 2085  make re
 2086  paco
 2087  Teste file with stuff inside
 2088  That does nothing
 2089  And also have some lines
 2090  francinette -u
 2091  paco
 2092  Teste file with stuff inside
 2093  That does nothing
 2094  And also have some lines
 2095  git clone git@github.com:Yoo0lh/pipex_tester_42.git ~
 2096  git clone git@github.com:Yoo0lh/pipex_tester_42.git 
 2097  git clone https://github.com/gmarcha/pipexMedic.git
 2098  bash test.sh basic
 2099  cat tester.log | less
 2100  cd ..
 2101  ./pipex infile  grep Hello" "wc -l"  outfile\n
 2102  ./pipex infile  "grep Hello" "wc -l"  outfile\n
 2103  echo$
 2104  $echo
 2105  < infile grep "Hello", "wc -l" > outfile
 2106  < infile grep "Hello" "wc -l" > outfile
 2107  < infile grep Hello" "wc -l" > outfile
 2108  < infile "grep Hello" "wc -l" > outfile
 2109  echo$
 2110  echo $
 2111  $echo
 2112  $echo$?
 2113  $echo
 2114  $echo$?
 2115  ./pipex infile  "cat"   outfile
 2116  $echo$?
 2117  < infile "grep Hello" | "wc -l" > outfile
 2118  $echo$?
 2119  ./pipex infile "ls -l"  "wc -l" > outfile
 2120  ./pipex infile "ls -l"  "wc -l"  outfile
 2121  ./pipex infile "ls -l"    outfile
 2122  ./pipex infile "ls -l"  "wc -l"  outfile
 2123  bash test.sh basic
 2124  < input grep Hello | awk "{count++} END {print count}" > output
 2125  touch input
 2126  < input grep Hello | awk "{count++} END {print count}" > output
 2127  ./pipex input "grep Hello" "awk {count++} END {print count}" output
 2128  < input grep Hello | awk "{count++} END {print count}" > output
 2129  ./pipex input "grep Hello" "awk {count++} END {print count}" output
 2130  < input grep Hello | awk "{count++} END {print count}" > output
 2131  strace -f ./pipex input "ls -l" "wc -l" output
 2132  strace -f sh -c "< input ls -l | wc -l > output"
 2133  diff
 2134  bash test.sh basic
 2135  cd ..
 2136  clear
 2137  env
 2138  git diff
 2139  pwd
 2140  ls -la
 2141  git add .
 2142  git commit -m "curr working copy b4 drey"
 2143  make re
 2144  ./pipex infile "ls -l"  "wc -l"  outfile
 2145  make
 2146  ./pipex infile "ls -l"  "wc -l"  outfile
 2147  make
 2148  ./pipex infile "ls -l"  "wc -l"  outfile
 2149  make
 2150  ./pipex infile "ls -l"  "wc -l"  outfile
 2151  make
 2152  ./pipex infile "ls -l"  "wc -l"  outfile
 2153  make
 2154  ./pipex infile "ls -l"  "wc -l"  outfile
 2155  make
 2156  ./pipex infile "ls -l"  "wc -l"  outfile
 2157  ./pipex infile "jjj"  "wc -l"  outfile
 2158  make
 2159  ./pipex infile "jjj"  "wc -l"  outfile
 2160  clear
 2161  make re\\n
 2162  ./pipex infile "jjj"  "wc -l"  outfile
 2163  ./pipex infile "ls -l"  "wc -l"  outfile
 2164  make re\n
 2165  cd pipexMedic
 2166  bash test.sh basic
 2167  cd ..
 2168  pwd
 2169  ./pipex  < input "grep Hello"  "ls -la src/"  output
 2170  ./pipex   input "grep Hello"  "ls -la src/"  output
 2171  ./pipex   input "grep Hello"  "ls -la pipexMedic/src/"  output
 2172  ../pipex   input "grep Hello"  "ls -la src/"  output
 2173  pwd
 2174  ../pipex
 2175  ../pipex   input "grep Hello"  "ls -la src/"  output
 2176  make re
 2177  bash test.sh basic
 2178  make re
 2179  ./pipex   input "grep Hello"  "ls -la pipexMedic/src/"  output
 2180  make
 2181  ./pipex   input "grep Hello"  "ls -la pipexMedic/src/"  output
 2182  ./pipex infile "ls -l"  "wc -l"  outfile
 2183  ./pipex infile "lhhffjs -l"  "wc -l"  outfile
 2184  make
 2185  ./pipex infile "ls -l"  "wc -l"  outfile
 2186  ./pipex infile "lhhffjs -l"  "wc -l"  outfile
 2187  make
 2188  ./pipex infile "ls -l"  "wc -l"  outfile
 2189  chsh /bin/bash
 2190  chsh bash
 2191  cc test.c
 2192  man isspace
 2193  cc test.c
 2194  ./a.out input grep Hello  awk '{count++} END {print count}'  output 
 2195  cc test.c
 2196  ./a.out input grep Hello  awk '{count++} END {print count}'  output 
 2197  make re
 2198  ./pipex input "grep Hello"  "awk '{count++} END {print count}'"  output 
 2199  make re
 2200  ./pipex input "grep Hello"  "awk '{count++} END {print count}'"  output 
 2201  make re
 2202  ./pipex input "grep Hello"  "awk '{count++} END {print count}'"  output 
 2203  make re
 2204  ./pipex input "grep Hello"  "awk '{count++} END {print count}'"  output 
 2205  make re
 2206  ./pipex input "grep Hello"  "awk '{count++} END {print count}'"  output 
 2207  make re
 2208  ./pipex input "grep Hello"  "awk '{count++} END {print count}'"  output 
 2209  ./a.out input grep Hello  awk '{count++} END {print count}'  output 
 2210  cc test.c
 2211  ./a.out input grep Hello  awk '{count++} END {print count}'  output 
 2212  make re
 2213  ./pipex input "grep Hello"  "awk '{count++} END {print count}'"  output 
 2214  make re
 2215  ./pipex input "grep Hello"  "awk '{count++} END {print count}'"  output 
 2216  make re
 2217  ./pipex input "grep Hello"  "awk '{count++} END {print count}'"  output 
 2218  make re
 2219  ./pipex input "grep Hello"  "awk '{count++} END {print count}'"  output 
 2220  ./pipex input "'grep Hello'"  "awk '{count++} END {print count}'"  output 
 2221  make re
 2222  ./pipex input "grep Hello"  "awk '{count++} END {print count}'"  output 
 2223  make re
 2224  ./pipex input "grep Hello"  "awk '{count++} END {print count}'"  output 
 2225  cd pipexMedic
 2226  bash test.sh basic
 2227  cd ..
 2228  make re
 2229  ./pipex input "grep Hello"  "awk "{count++} END {print count}""  output 
 2230  cd pipexMedic
 2231  bash test.sh basic
 2232  cd ..
 2233  < input grep Hello | awk "'{count++} END {print count}'" > output
 2234  ./pipex input "grep Hello"  "awk "'{count++} END {print count}'"" output
 2235  ./pipex input "grep Hello"  "awk "\'{count++} END {print count}\'"" output
 2236  ./pipex input "grep Hello"  "awk "'{count++} END {print count}'"" output
 2237  ./pipex input "grep Hello"  "awk '{count++} END {print count}'" output
 2238  make re
 2239  cd pipexMedic
 2240  bash test.sh basic
 2241  cd ..
 2242  paco
 2243  Teste file with stuff inside
 2244  That does nothing
 2245  And also have some lines
 2246  make re
 2247  francinette
 2248  Teste file with stuff inside
 2249  That does nothing
 2250  And also have some lines
 2251  touch input infile
 2252  make re
 2253  francinette
 2254  Teste file with stuff inside
 2255  That does nothing
 2256  And also have some lines
 2257  cd pipexMedic
 2258  bash test.sh basic
 2259  cd ..
 2260  make re
 2261  cd pipexMedic
 2262  bash test.sh basic
 2263  cd ..
 2264  make re
 2265  francinette
 2266  Teste file with stuff inside
 2267  That does nothing
 2268  And also have some lines
 2269  cd pipexMedic
 2270  bash test.sh basic
 2271  cd ..
 2272  make re
 2273  echo$?
 2274  ./pipex input "grep Hello" "awk "'{count++} END {print count}'""  output
 2275  ./pipex input "grep Hello" "awk " '{count++} END {print count}'" "  output
 2276  ./pipex input "grep Hello" "awk "'{count++} END {print count}'" "  output
 2277  ./pipex input "grep Hello" " awk "'{count++} END {print count}'" "  output
 2278  valgrind ./pipex input "grep Hello" " awk "'{count++} END {print count}'" "  output
 2279  valgrind --leak-check=full --show-leak-kinds=all ./pipex input "grep Hello" " awk "'{count++} END {print count}'" "  output
 2280  clear
 2281  make re
 2282  ./pipex input "grep Hello" " awk "'{count++} END {print count}'" "  output
 2283  echo$?
 2284  ./pipex input "grep Hello" " awk "'{count++} END {print count}'" "  output
 2285  make re
 2286  ./pipex input "grep Hello" " awk "'{count++} END {print count}'" "  output
 2287  echo$?
 2288  make re
 2289  ./pipex input "grep Hello" " awk "'{count++} END {print count}'" "  output
 2290  echo$?
 2291  ./pipex input "grep Hello" " awk "'{count++} END {print count}'" " 
 2292  echo$?
 2293  make re
 2294  ./pipex input "grep Hello" " awk "'{count++} END {print count}'" " 
 2295  echo$?
 2296  valgrind --leak-check=full --show-leak-kinds=all ./pipex input "grep Hello" " awk "'{count++} END {print count}'" " 
 2297  < input grep Hello | awk "'{count++} END {print count}'" > output
 2298  ./pipex input "grep Hello"  awk "'{count++} END {print count}'" > output
 2299  ./pipex input "grep Hello"  "awk "'{count++} END {print count}'" > output\n
 2300  ./pipex input "grep Hello"  "awk "'{count++} END {print count}'"  output\n
 2301  ./pipex input "grep Hello"  "awk "'{count++} END {print count}'""  output\n
 2302  echo$?
 2303  ./pipex input "grep Hello"  "awk ''{count++} END {print count}''"  output\n
 2304  ./pipex input "grep Hello"  "awk '"{count++} END {print count}"'"  output\n
 2305  echo$?
 2306  ./pipex input "grep Hello", "awk \"'{count++} END {print count}'\""  output
 2307  echo$?
 2308  make re
 2309  ./pipex input "grep Hello", "awk \"'{count++} END {print count}'\""  output
 2310  echo$?
 2311  francinette
 2312  Teste file with stuff inside
 2313  That does nothing
 2314  And also have some lines
 2315  cd pipexMedic
 2316  bash test.sh basic
 2317  cd ..
 2318  make re
 2319  ./pipex input "grep Hello", "awk \"'{count++} END {print count}'\""  output
 2320  cd pipexMedic
 2321  bash test.sh basic
 2322  cd ..
 2323  clear
 2324  < input grep Hello | ls -la src/ > output
 2325  ./pipex input "grep Hello" "ls -la src/"  outfile
 2326  < input grep Hello | ls -la src/ > outfile
 2327  < input grep Hello | ls -la src/ > output
 2328  ./pipex input "grep Hello" "ls -la src/"  outfile
 2329  ./pipex infile "grep Hello" "ls -la src/"  outfile
 2330  < input grep Hello | ls -la src/ > output
 2331  ./pipex infile "grep Hello" "ls -la src/"  outfile
 2332  echo$?
 2333  cd pipexMedic
 2334  bash test.sh basic
 2335  ../pipex infile "grep Hello" "ls -la src/"  outfile
 2336  touch infile
 2337  ../pipex infile "grep Hello" "ls -la src/"  outfile
 2338  < infile grep Hello | ls -la src/ > outfile
 2339  ../pipex infile "grep Hello" "ls -la src/"  outfile
 2340  cd ..
 2341  ./pipex input "grep Hello", "awk \"'{count++} END {print count}'\""  output
 2342  ./pipex input "ls -l" "wc -l"  output
 2343  echo$?
 2344  francinette
 2345  Teste file with stuff inside
 2346  That does nothing
 2347  And also have some lines
 2348  make re
 2349  francinette
 2350  Teste file with stuff inside
 2351  That does nothing
 2352  And also have some lines
 2353  make re
 2354  francinette
 2355  Teste file with stuff inside
 2356  That does nothing
 2357  And also have some lines
 2358  clear
 2359  ./pipex input "ls -l" "wc -l"  output
 2360  ./pipex input "ls -l" "wc"  output
 2361  < input ls -l | wc output
 2362  < input ls -l | wc > output
 2363  ./pipex input "ls -l" "wc"  output
 2364  < input sed "s/And/But/" |  awk "{count++} END {printf \\"count: %i\\" , count}" > output
 2365  < input sed "s/And/But/" |  awk "{count++} END {printf \"count: %i\" , count}" > output
 2366  ./pipex input 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\" , count}"' output
 2367  ./pipex input 'sed "s/And/But/"' 'awk "{count++} END {printf \"count: %i\" , count}"' output
 2368  ./pipex input 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"  count}"' output
 2369  ./pipex input 'sed "s/And/But/"' 'awk "{count++} END {printf "count: %i"  count}"' output
 2370  ./pipex input  'sed "s/And/But/"' 'awk "{count++} END {print count}"' output
 2371  < infile grep a1 | wc -w > outfile
 2372  < infile jjj a1 | wc -w > outfile
 2373  < infile "jjj a1" | wc -w > outfile
 2374  ./pipex infile "jjj a1" "wc -w" outfile
 2375  echo$?
 2376  ./pipex infile "jjhfhfj a1" "wc -w" outfile
 2377  make re
 2378  ./pipex infile "jjhfhfj a1" "wc -w" outfile
 2379  make re
 2380  ./pipex infile "jjhfhfj a1" "wc -w" outfile
 2381  make re
 2382  ./pipex infile "jjhfhfj a1" "wc -w" outfile
 2383  < infile jjj a1 | wc -w > outfile
 2384  make re
 2385  ./pipex infile "jjhfhfj a1" "wc -w" outfile
 2386  francinette
 2387  Teste file with stuff inside
 2388  That does nothing
 2389  And also have some lines
 2390  cd pipexMedic
 2391  bash test.sh basic
 2392  cd ..
 2393  clear
 2394  valgrind --leak-check=full --show-leak-kinds=all ./pipex input "grep Hello" " awk "'{count++} END {print count}'" " 
 2395  valgrind --leak-check=full --show-leak-kinds=all ./pipex input "grep Hello" " awk "'{count++} END {print count}'" "  output
 2396  valgrind --leak-check=full --show-leak-kinds=all ./pipex input "cat -e" "wc"  output
 2397  < infile cat -e | wc >  outfile
 2398  < infile cat -e | wc >  output
 2399  valgrind --leak-check=full --show-leak-kinds=all ./pipex input "cat -e" "wc"  outfile
 2400  < infile cate -e | wc >  output
 2401  ./pipex infile "cate -e" "wc" outfile
 2402  ./pipex infile "cat -e" "wate -wc" outfile
 2403  < infile cat -e | wate -wc >  output
 2404  cd pipexMedic
 2405  bash test.sh basic
 2406  c..
 2407  cd ..
 2408  francinette
 2409  Teste file with stuff inside
 2410  That does nothing
 2411  And also have some lines
 2412  make
 2413  ./pipex infile "cat -e" "wate -wc" outfile
 2414  ls
 2415  ./pipex infile "cat" "grep tobi" outfile
 2416  ./pipex infile "cat" "grep marve" outfile
 2417  ./pipex infile "ls" "grep marve" outfile
 2418  ./pipex infile "ls" "cat" outfile
 2419  francinette
 2420  Teste file with stuff inside
 2421  That does nothing
 2422  And also have some lines
 2423  man waitpid
 2424  cd ..
 2425  ls
 2426  git clone https://github.com/codedmarve/pipex.git marve_pipex
 2427  cd marve_pipex
 2428  ls
 2429  make
 2430  francinette
 2431  Teste file with stuff inside
 2432  That does nothing
 2433  And also have some lines
 2434  make fclean
 2435  paco
 2436  Teste file with stuff inside
 2437  That does nothing
 2438  And also have some lines
 2439  ls
 2440  cp -r ../pipex/pipexMedic .
 2441  ls
 2442  cd pipexMedic
 2443  ls
 2444  bash test.sh basic
 2445  cd ../../pipex
 2446  ls
 2447  cd pipexMedic
 2448  bash test.sh basic
 2449  cd ..
 2450  < input grep Hello | ls -la src/ > output\n
 2451  ./pipex input "grep Hello"  "ls -la src/"  outfile\n
 2452  valgrind --leak-check=full --show-leak-kinds=all ./pipex input "patriccat -e" "wc"  outfile
 2453  valgrind --leak-check=full --show-leak-kinds=all ./pipex input "pccat -e" "wc"  outfile
 2454  valgrind --leak-check=full --show-leak-kinds=all ./pipex input "cat -e" "wc"  outfile
 2455  valgrind --leak-check=full --show-leak-kinds=all ./pipex input "cat -e" "eeewc"  outfile
 2456  clear
 2457  < input grep Hello | ls -la src/ > output\n
 2458  echo$?
 2459  ./pipex input "grep Hello"  "ls -la src/"  outfile\n
 2460  ./pipex input "grep Hello"  "ls -la src"  outfile\n
 2461  ./pipex input "ls -l"  "wc -l"  outfile\n
 2462  < input grep Hello | ls -la src/ > output\n
 2463  ./pipex input "grep Hello"  "ls -la src/"  outfile\n
 2464  ./pipex input "grep Hello"  "ls -la"  outfile\n
 2465  < input grep Hello | ls -la > output
 2466  echo$?
 2467  ./pipex input "grep Hello"  "ls -la"  outfile\n
 2468  echo$?
 2469  make re
 2470  ./pipex input "grep Hello"  "ls -la"  outfile\n
 2471  make re
 2472  ./pipex input "grep Hello"  "ls -la"  outfile\n
 2473  make re
 2474  ./pipex input "grep Hello"  "ls -la"  outfile\n
 2475  make re
 2476  ./pipex input "grep Hello"  "ls -la"  outfile\n
 2477  ./pipex input "grep"  "ls -la"  outfile\n
 2478  ./pipex input "wc"  "ls -la"  outfile\n
 2479  make re
 2480  ./pipex input "grep"  "ls -la"  outfile\n
 2481  ./pipex input "grep hello"  "ls -la"  outfile\n
 2482  francinette
 2483  Teste file with stuff inside
 2484  That does nothing
 2485  And also have some lines
 2486  cd pipexMedic
 2487  bash test.sh basic
 2488  cd ..
 2489  clear
 2490  make re
 2491  ./pipex input "grep hello"  "ls -la"  outfile\n
 2492  cd pipexMedic
 2493  bash test.sh basic
 2494  cd ..
 2495  clear
 2496  francinette
 2497  Teste file with stuff inside
 2498  That does nothing
 2499  And also have some lines
 2500  clear
 2501  ./pipex input "grep hello"  "ls -la"  outfile\n
 2502  < input grep Hello | ls -la > output
 2503  ./pipex input "grep hello"  "ls -la"  outfile\n
 2504  < input grep Hello | ls -la > outfile
 2505  ./pipex input "ls -la"  "wc -l"  outfile\n
 2506  < input ls -la | wc -l > outfile
 2507  make re
 2508  < input ls -la | wc -l > outfile
 2509  ./pipex input "ls -la"  "wc -l"  outfile\n
 2510  make re
 2511  ./pipex input "ls -la"  "wc -l"  outfile\n
 2512  < input ls -la | wc -l > outfile
 2513  ./pipex input "ls -la"  "wc -l"  outfile
 2514  ./pipex input "grep hello"  "ls -la"  outfile\n
 2515  ./pipex input "grep hello"  "ls -la"  outfile
 2516  ./pipex input 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\" , count}"' outfile
 2517  ./pipex input 'sed "s/And/But/"' 'awk "{count++} END {printf count: %i , count}"' outfile
 2518  < input sed "s/And/But/" | awk "{count++} END {printf \\"count: %i\\" , count}" > outfile
 2519  < input sed "s/And/But/" | awk "{count++} END {printf \\"count: %i\\"  count}" > outfile
 2520  < input sed "s/And/But/" | awk "{count++} END {printf \"count: %i\\" , count}" > outfile
 2521  < input sed "s/And/But/" | awk "{count++} END {printf \"count: %i\" , count}" > outfile
 2522  ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \"count: %i\" , count}"'  outfile
 2523  ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \count: %i\ , count}"'  outfile
 2524  make re
 2525  ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \count: %i\ , count}"'  outfile
 2526  make re
 2527  ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \count: %i\ , count}"'  outfile
 2528  ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \"count: %i\" , count}"'  outfile
 2529  ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \\"count: %i\\" , count}"'  outfile
 2530  make re
 2531  ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \\"count: %i\\" , count}"'  outfile
 2532  < input sed "s/And/But/" | awk "{count++} END {printf \"count: %i\" , count}" > outfile
 2533  cc test.c
 2534  ./a.out
 2535  make re
 2536  ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \\"count: %i\\" , count}"'  outfile
 2537  make re
 2538  ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \\"count: %i\\" , count}"'  outfile
 2539  make re
 2540  ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \\"count: %i\\" , count}"'  outfile
 2541  make re
 2542  ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \\"count: %i\\" , count}"'  outfile
 2543  make re
 2544  ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \\"count: %i\\" , count}"'  outfile
 2545  man ascii
 2546  make re
 2547  ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \\"count: %i\\" , count}"'  outfile
 2548  make re
 2549  ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \\"count: %i\\" , count}"'  outfile
 2550  make re
 2551  ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \\"count: %i\\" , count}"'  outfile
 2552  make re
 2553  ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \\"count: %i\\" , count}"'  outfile
 2554  make re
 2555  ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \\"count: %i\\" , count}"'  outfile
 2556  make re
 2557  ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \\"count: %i\\" , count}"'  outfile
 2558  < input sed "s/And/But/" | awk "{count++} END {printf \"count: %i\" , count}" > outfile
 2559  ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \\"count: %i\\" , count}"'  outfile
 2560  make re
 2561  ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \\"count: %i\\" , count}"'  outfile
 2562  make re
 2563  ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \\"count: %i\\" , count}"'  outfile
 2564  ./pipex input 'sed "s/And/But/"'  'awk {count++} END {printf \\"count: %i\\" , count}'  outfile
 2565  make re
 2566  ./pipex input 'sed "s/And/But/"'  'awk {count++} END {printf \\"count: %i\\" , count}'  outfile
 2567  make re
 2568  ./pipex input 'sed "s/And/But/"'  'awk {count++} END {printf \\"count: %i\\" , count}'  outfile
 2569  make re
 2570  ./pipex input 'sed "s/And/But/"'  'awk {count++} END {printf \\"count: %i\\" , count}'  outfile
 2571  make re
 2572  ./pipex input 'sed "s/And/But/"'  'awk {count++} END {printf \\"count: %i\\" , count}'  outfile
 2573  make re
 2574  ./pipex input 'sed "s/And/But/"'  'awk {count++} END {printf \\"count: %i\\" , count}'  outfile
 2575  make re
 2576  ./pipex input 'sed "s/And/But/"'  'awk {count++} END {printf \\"count: %i\\" , count}'  outfile
 2577  make re
 2578  ./pipex input 'sed "s/And/But/"'  'awk {count++} END {printf \\"count: %i\\" , count}'  outfile
 2579  make re
 2580  ./pipex input 'sed "s/And/But/"'  'awk {count++} END {printf \\"count: %i\\" , count}'  outfile
 2581  make re
 2582  ./pipex input 'sed "s/And/But/"'  'awk {count++} END {printf \\"count: %i\\" , count}'  outfile
 2583  make re
 2584  ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \\"count: %i\\" , count}"'  outfile
 2585  make re
 2586  ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \\"count: %i\\" , count}"'  outfile
 2587  < input sed "s/And/But/" | awk "{count++} END {printf \"count: %i\" , count}" > outfile
 2588  ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \\"count: %i\\" , count}"'  outfile
 2589  ./pipex input 'sed "s/And/But/"'  'awk"{count++} END {printf \\"count: %i\\" , count}"'  outfile
 2590  ./pipex input 'sed "s/And/But/"'  'awk"{count++}END{printf \\"count: %i\\",count}"'  outfile
 2591  ./pipex input 'sed "s/And/But/"'  'awk"{count++}END{printf\\"count:%i\\",count}"'  outfile
 2592  ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \\"count: %i\\",count}"'  outfile
 2593  bash
 2594  ./pipex input 'sed "s/And/But/"'  'awk {count++} END {printf \\"count: %i\\" , count}'  outfile
 2595  ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf count: %i , count}"'  outfile
 2596  < input sed "s/And/But/" | awk "{count++} END {printf \"count: %i\" , count}" > outfile
 2597  make re
 2598  < input sed "s/And/But/" | awk "{count++} END {printf \"count: %i\" , count}" > outfile
 2599  ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf count: %i , count}"'  outfile
 2600  make re
 2601  ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf count: %i , count}"'  outfile
 2602  ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf count %i , count}"'  outfile
 2603  ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \\"count: %i\\",count}"'  outfile
 2604  make re
 2605  ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \\"count: %i\\",count}"'  outfile
 2606  make re
 2607  ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \\"count: %i\\",count}"'  outfile
 2608  make re
 2609  ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \\"count: %i\\",count}"'  outfile
 2610  make re
 2611  ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \\"count: %i\\",count}"'  outfile
 2612  francinette
 2613  Teste file with stuff inside
 2614  That does nothing
 2615  And also have some lines
 2616  cd pipexMedic
 2617  bash test.sh basic
 2618  cd ..
 2619  make re
 2620  ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \\"count: %i\\",count}"'  outfile
 2621  francinette
 2622  Teste file with stuff inside
 2623  That does nothing
 2624  And also have some lines
 2625  make re
 2626  francinette
 2627  Teste file with stuff inside
 2628  That does nothing
 2629  And also have some lines
 2630  cd pipexMedic
 2631  bash test.sh basic
 2632  ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \\"count: %i\\",count}"'  outfile
 2633  make re
 2634  ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \\"count: %i\\",count}"'  outfile
 2635  francinette
 2636  Teste file with stuff inside
 2637  That does nothing
 2638  And also have some lines
 2639  cd pipexMedic
 2640  bash test.sh basic
 2641  cd ..
 2642  clear
 2643  make re
 2644  ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \\"count: %i\\",count}"'  outfile
 2645  francinette
 2646  Teste file with stuff inside
 2647  That does nothing
 2648  And also have some lines
 2649  cp -r ../pipex/pipexMedic .
 2650  cd pipexMedic
 2651  bash test.sh basic
 2652  cd ..
 2653  clear
 2654  < input  ./script.sh | 'wc' > outfile
 2655  < input  script.sh | 'wc' > outfile
 2656  < input.txt  ./script.sh | 'wc' > outfile.txt
 2657  ./pipex input.txt "./script.sh" "wc" outfile.txt
 2658  francinette
 2659  Teste file with stuff inside
 2660  That does nothing
 2661  And also have some lines
 2662  make clean
 2663  make re
 2664  francinette
 2665  Teste file with stuff inside
 2666  That does nothing
 2667  And also have some lines
 2668  make re
 2669  francinette
 2670  Teste file with stuff inside
 2671  That does nothing
 2672  And also have some lines
 2673  touch shrinksplit.c
 2674  valgrind ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \\"count: %i\\",count}"'  outfile
 2675  touch newgptsplit.c
 2676  francinette
 2677  Teste file with stuff inside
 2678  That does nothing
 2679  And also have some lines
 2680  clear
 2681  make
 2682  ./pipex /dev/stdin cat cat /dev/stdout
 2683  ls
 2684  ./pipex none cat cat outfile
 2685  ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \\"count: %i\\",count}"'  outfile
 2686  ./pipex infile 'sed "s/And/But/"'  'awk "{count++} END {printf \\"count: %i\\",count}"'  outfile
 2687  francinette
 2688  Teste file with stuff inside
 2689  That does nothing
 2690  And also have some lines
 2691  man ascii
 2692  touch newgptsplit.c
 2693  make re
 2694  man strlcpy
 2695  make re
 2696  francinette
 2697  Teste file with stuff inside
 2698  That does nothing
 2699  And also have some lines
 2700  make re
 2701  francinette
 2702  Teste file with stuff inside
 2703  That does nothing
 2704  And also have some lines
 2705  make re
 2706  francinette
 2707  Teste file with stuff inside
 2708  That does nothing
 2709  And also have some lines
 2710  make re
 2711  francinette
 2712  Teste file with stuff inside
 2713  That does nothing
 2714  And also have some lines
 2715  make re
 2716  francinette
 2717  Teste file with stuff inside
 2718  That does nothing
 2719  And also have some lines
 2720  make re
 2721  francinette
 2722  Teste file with stuff inside
 2723  That does nothing
 2724  And also have some lines
 2725  make re
 2726  francinette
 2727  Teste file with stuff inside
 2728  That does nothing
 2729  And also have some lines
 2730  cd pipexMedic
 2731  bash test.sh basic
 2732  cd ..
 2733  clear
 2734  ./pipex infile 'sed "s/And/But/"'  'awk "{count++} END {printf \\"count: %i\\",count}"'  outfile
 2735  ./pipex infile cat cat outfile
 2736  ./pipex input  'sed    "s/And/But/"' 'grep But' outfile
 2737  ./pipex infile  'sed    "s/And/But/"' 'grep But' outfile
 2738  make re
 2739  ./pipex infile  'sed    "s/And/But/"' 'grep But' outfile
 2740  < infile sed s/And/But/ | grep But outfile 
 2741  < infile sed "s/And/But/" | grep But outfile 
 2742  < infile sed \"s/And/But/\" | grep But outfile 
 2743  < infile sed    "s/And/But/" | grep But outfile 
 2744  ./pipex infile  'sed    "s/And/But/"' 'grep But' outfile
 2745  make re
 2746  ./pipex infile  'sed    "s/And/But/"' 'grep But' outfile
 2747  make re
 2748  ./pipex infile  'sed    "s/And/But/"' 'grep But' outfile
 2749  ./pipex infile  'sed    s/And/But/' 'grep But' outfile
 2750  ./pipex  input.txt 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\" , count}"' outfile.txt
 2751  < input.txt  sed "s/And/But/" | awk "{count++} END {printf \\"count: %i\\" , count}" > outfile.txt
 2752  < input.txt  sed "s/And/But/" | awk "{count++} END {printf \"count: %i\" , count}" > outfile.txt
 2753  make re
 2754  < input.txt  sed "s/And/But/" | awk "{count++} END {printf \"count: %i\" , count}" > outfile.txt
 2755  francinette
 2756  Teste file with stuff inside
 2757  That does nothing
 2758  And also have some lines
 2759  < input.txt  sed "s/And/But/" | awk "{count++} END {printf \\"count: %i\\" , count}" > outfile.txt
 2760  make re
 2761  < input.txt  sed "s/And/But/" | awk "{count++} END {printf \\"count: %i\\" , count}" > outfile.txt
 2762  make re
 2763  < input.txt  sed "s/And/But/" | awk "{count++} END {printf \\"count: %i\\" , count}" > outfile.txt
 2764  make re
 2765  < input.txt  sed "s/And/But/" | awk "{count++} END {printf \\"count: %i\\" , count}" > outfile.txt
 2766  ./pipex  input.txt 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\" , count}"' outfile.txt
 2767  ./pipex  input.txt 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"  count}"' outfile.txt
 2768  make re
 2769  ./pipex  input.txt 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"  count}"' outfile.txt
 2770  ./pipex  input.txt 'sed s/And/But/' 'awk "{count++} END {printf \\"count: %i\\"  count}"' outfile.txt
 2771  make re
 2772  ./pipex  input.txt 'sed s/And/But/' 'awk "{count++} END {printf \\"count: %i\\"  count}"' outfile.txt
 2773  ./pipex  input.txt 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"  count}"' outfile.txt
 2774  make re
 2775  ./pipex  input.txt 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"  count}"' outfile.txt
 2776  make re
 2777  ./pipex  input.txt 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"  count}"' outfile.txt
 2778  make re
 2779  ./pipex  input.txt 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"  count}"' outfile.txt
 2780  make re
 2781  ./pipex  input.txt 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"  count}"' outfile.txt
 2782  make re
 2783  ./pipex  input.txt 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"  count}"' outfile.txt
 2784  make re
 2785  ./pipex  input.txt 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"  count}"' outfile.txt
 2786  make re
 2787  ./pipex  input.txt 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"  count}"' outfile.txt
 2788  make re
 2789  ./pipex  input.txt 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"  count}"' outfile.txt
 2790  cc newgptsplit.c
 2791  ./a.out
 2792  cc newgptsplit.c
 2793  ./a.out 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"  count}"'
 2794  cc newgptsplit.c
 2795  ./a.out 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"  count}"'
 2796  cc newgptsplit.c
 2797  ./a.out 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"  count}"'
 2798  cc newgptsplit.c
 2799  ./a.out 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"  count}"'
 2800  cc newgptsplit.c
 2801  ./a.out 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"  count}"'
 2802  cc newgptsplit.c
 2803  ./a.out 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"  count}"'
 2804  cc newgptsplit.c
 2805  ./a.out 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"  count}"'
 2806  cc newgptsplit.c
 2807  ./a.out 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"  count}"'
 2808  cc newgptsplit.c
 2809  ./a.out 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"  count}"'
 2810  cc newgptsplit.c
 2811  ./a.out 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"  count}"'
 2812  cc newgptsplit.c
 2813  ./a.out 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"  count}"'
 2814  cc newgptsplit.c
 2815  ./a.out 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"  count}"'
 2816  cc newgptsplit.c
 2817  ./a.out 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"  count}"'
 2818  cc newgptsplit.c
 2819  man strlcpy
 2820  cc newgptsplit.c
 2821  ./a.out 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"  count}"'
 2822  cc newgptsplit.c
 2823  ./a.out 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"  count}"'
 2824  cc newgptsplit.c
 2825  ./a.out 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"  count}"'
 2826  cc newgptsplit.c
 2827  ./a.out 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"  count}"'
 2828  cc newgptsplit.c
 2829  ./a.out 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"  count}"'
 2830  cc newgptsplit.c
 2831  ./a.out 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"  count}"'
 2832  make re
 2833  ./pipex  input.txt 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"  count}"' outfile.txt
 2834  francinette
 2835  Teste file with stuff inside
 2836  That does nothing
 2837  And also have some lines
 2838  clear
 2839  francinette
 2840  Teste file with stuff inside
 2841  That does nothing
 2842  And also have some lines
 2843  clear
 2844  make re
 2845  ./pipex  input.txt 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"  count}"' outfile.txt
 2846  make re
 2847  ./pipex  input.txt 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"  count}"' outfile.txt
 2848  make re
 2849  ./pipex  input.txt 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"  count}"' outfile.txt
 2850  ./pipex  input.txt 'sed "s/And/But/"' 'awk "{count++} END {printf "count: %i"  count}"' outfile.txt
 2851  ./pipex  input.txt 'sed "s/And/But/"' 'awk "{count++} END {printf \"count: %i\"  count}"' outfile.txt
 2852  make re
 2853  ./pipex  input.txt 'sed "s/And/But/"' 'awk "{count++} END {printf \"count: %i\"  count}"' outfile.txt
 2854  ./pipex  input.txt 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"  count}"' outfile.txt
 2855  make re
 2856  ./pipex  input.txt 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"  count}"' outfile.txt
 2857  ./pipex  input "ls -l" "wc -l" outfile
 2858  ./pipex  infile "ls -l" "wc -l" outfile
 2859  make re
 2860  ./pipex  infile "ls -l" "wc -l" outfile
 2861  ./pipex  input.txt 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"  count}"' outfile.txt
 2862  francinette
 2863  Teste file with stuff inside
 2864  That does nothing
 2865  And also have some lines
 2866  cd ..
 2867  cd  pipex
 2868  clear
 2869  ./pipex  input.txt 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"  count}"' outfile.txt
 2870  make re
 2871  ./pipex  input.txt 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"  count}"' outfile.txt
 2872  ./pipex  input.txt 'sed "s/And/But/"' 'awk "{count++} END {printf "count: %i"  count}"' outfile.txt
 2873  ./pipex  input.txt 'sed "s/And/But/"' 'awk "{count++} END {printf "count: %i\"  count}"' outfile.txt
 2874  ./pipex  input.txt 'sed "s/And/But/"' 'awk "{count++} END {printf \"count: %i\"  count}"' outfile.txt
 2875  make re
 2876  ./pipex  input.txt 'sed "s/And/But/"' 'awk "{count++} END {printf \"count: %i\"  count}"' outfile.txt
 2877  ./pipex  input.txt 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"  count}"' outfile.txt
 2878  ./pipex  input.txt 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\" , count}"' outfile.txt
 2879  make re
 2880  ./pipex  input.txt 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\" , count}"' outfile.txt
 2881  francinette
 2882  Teste file with stuff inside
 2883  That does nothing
 2884  And also have some lines
 2885  cd pipexMedic
 2886  bash test.sh basic
 2887  cd ..
 2888  make re
 2889  cd pipexMedic
 2890  bash test.sh basic
 2891  cd ..
 2892  make re
 2893  francinette
 2894  Teste file with stuff inside
 2895  That does nothing
 2896  And also have some lines
 2897  cd pipexMedic
 2898  bash test.sh basic
 2899  cd ..
 2900  touch pipex_aid.c
 2901  make re
 2902  francinette
 2903  Teste file with stuff inside
 2904  That does nothing
 2905  And also have some lines
 2906  cd ..
 2907  cd pipex
 2908  cd pipexMedic
 2909  bash test.sh basic
 2910  cd ..
 2911  ./pipex  input.txt 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\" , count}"' outfile.txt
 2912  make re
 2913  francinette
 2914  Teste file with stuff inside
 2915  That does nothing
 2916  And also have some lines
 2917  francinette
 2918  Teste file with stuff inside
 2919  That does nothing
 2920  And also have some lines
 2921  make re
 2922  francinette
 2923  Teste file with stuff inside
 2924  That does nothing
 2925  And also have some lines
 2926  make re
 2927  francinette
 2928  Teste file with stuff inside
 2929  That does nothing
 2930  And also have some lines
 2931  norminette
 2932  make re
 2933  francinette
 2934  Teste file with stuff inside
 2935  That does nothing
 2936  And also have some lines
 2937  valgrind ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \\"count: %i\\",count}"'  outfile
 2938  valgrind ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \\"count: %i\\",count}"'
 2939  valgrind ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \\"count: %i\unt}"'  outfile
 2940  valgrind --leak-check=full --show-leak-kinds=all ./pipex input "cat -e" "eeewc"  outfile
 2941  valgrind --leak-check=full --show-leak-kinds=all ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \\"count: %i\\",count}"' 
 2942  valgrind --leak-check=full --show-leak-kinds=all ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \\"count: %i\\",count}"' outfile
 2943  make re
 2944  francinette
 2945  Teste file with stuff inside
 2946  That does nothing
 2947  And also have some lines
 2948  clear
 2949  ./pipex  input.txt 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\" , count}"'
 2950  francinette
 2951  Teste file with stuff inside
 2952  That does nothing
 2953  And also have some lines
 2954  make re
 2955  francinette
 2956  Teste file with stuff inside
 2957  That does nothing
 2958  And also have some lines
 2959  ./pipex  input.txt 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\" , count}"'
 2960  make re
 2961  ./pipex  input.txt 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\" , count}"'
 2962  francinette
 2963  Teste file with stuff inside
 2964  That does nothing
 2965  And also have some lines
 2966  ./pipex  input.txt "./script.sh" 'wc' outfile.txt
 2967  pwd
 2968  cp -r /home/ojacobs/francinette/tests/pipex/fsoares/script.sh .
 2969  ls
 2970  ./pipex  input.txt "./script.sh" 'wc' outfile.txt
 2971  ls
 2972  ./pipex  input.txt "./script.sh" 'wc' outfile.txt
 2973  echo $?
 2974  ls
 2975  which ls
 2976  which cat
 2977  /usr/bin/cat infile.txt
 2978  env
 2979  which cat\\n
 2980  env
 2981  ./pipex  input.txt "/usr/bin/cat" 'wc' outfile.txt
 2982  /usr/bin/cat infile.txt
 2983  ./pipex  input.txt "/usr/bin/cat" 'wc' outfile.txpwdt
 2984  pwd
 2985  /home/ojacobs/Documents/ojacobsdev/pipex infile.txt "cat" "grep a" outfile
 2986  ls
 2987  mkdir test
 2988  cd test
 2989  ;s
 2990  ls
 2991  ../pipex infile "grep Hello" "ls -la src/"  outfile
 2992  env | grep PATH
 2993  cd /usr/bin
 2994  ls
 2995  ls | grep cat
 2996  ./cat asjdhfkj
 2997  cat hjksdfhgjks
 2998  ls | grep grp
 2999  ls | grep grep
 3000  ls | ./grep grep
 3001  ls | grep grep
 3002  cd p
 3003  cd
 3004  ls
 3005  cd sgoinfre
 3006  ls
 3007  cd ..
 3008  ls
 3009  cd Documents
 3010  cd ojacobsdev
 3011  cd pipex
 3012  make re
 3013  francinette
 3014  make re
 3015  francinette
 3016  make re
 3017  francinette
 3018  ./pipex  input.txt "/usr/bin/cat" 'wc' outfile.txt
 3019  < input.txt /usr/bin/cat wc > outfile.txpwdt
 3020  < input.txt /usr/bin/cat | wc > outfile.txpwdt
 3021  valgrind --leak-check=full --show-leak-kinds=all ./pipex input 'sed "s/And/But/"'  'awk "{count++} END {printf \\"count: %i\\",count}"' outfile
 3022  valgrind --leak-check=full --show-leak-kinds=all ./pipex  input.txt "/usr/bin/cat" 'wc' outfile.txt 
 3023  valgrind --leak-check=full --show-leak-kinds=all ./pipex  input.txt "/usr/bin/cat" 'wc'
 3024  cd pipexM
 3025  cd pipexMedic
 3026  bash test.sh basic
 3027  cd pipexMedic
 3028  bash test.sh basic
 3029  cd ..
 3030  clear
 3031  francinette
 3032  clear
 3033  ./pipex  input.txt "cat" 'wc' outfile.txt
 3034  < input.txt cat | wc > outfile.txt
 3035  < input.txt cat | echo > outfile.txt
 3036  ./pipex /dev/null 'sleep 3' 'sleep 3' /dev/stdout\n: 1722632983:0;./pipex /dev/null 'sleep 3' 'sleep 3' /dev/stdout
 3037  time ./pipex /dev/null 'sleep 3' 'sleep 3' /dev/stdout
 3038  ./pipex /dev/stdin cat cat /dev/stdout
 3039  ./pipex /dev/stdin cat 'wc -l' /dev/stdout
 3040  ./pipex /dev/stdin 'echo "a b c"' 'cat' /dev/stdout
 3041  francinette
 3042  ./pipex /dev/stdin 'echo "a  \"\"  b     c"' 'cat' /dev/stdout
 3043  make re\n: 1722633448:0;make re
 3044  ./pipex /dev/stdin 'echo "a  \"\"  b     c"' 'cat' /dev/stdout
 3045  francinette
 3046  make re
 3047  francinette
 3048  cd
 3049  cd francinette/`\nls
 3050  cd francinette\nls
 3051  git status
 3052  git log -1
 3053  ./pipex 1 2 3 4
 3054  cd
 3055  cd ..
 3056  ./pipex 1 2 3 4
 3057  bash
 3058  paco --strict
 3059  < 1 2 | 3 > 4
 3060  clear
 3061  < 1 2 | 3 > 4
 3062  ./pipex 1 2 3 4
 3063  make re
 3064  ./pipex 1 2 3 4
 3065  make re
 3066  ./pipex 1 2 3 4
 3067  make re
 3068  ./pipex 1 2 3 4
 3069  < 1 2 | 3 > 4
 3070  <1 2 | 3 > 4
 3071  bash
 3072  make re
 3073  <1 2 | 3 > 4
 3074  bash
 3075  <1 2 | 3 > 4
 3076  ./pipex 1 2 3 4
 3077  bash
 3078  francinette
 3079  ./pipex 1 2 3 4
 3080  make re
 3081  francinette
 3082  make re
 3083  francinette
 3084  make re
 3085  francinette
 3086  make re
 3087  francinette
 3088  make re
 3089  francinette
 3090  ./pipex 1 2 3 4
 3091  make re
 3092  ./pipex 1 2 3 4
 3093  <1 2 | 3 > 4
 3094  bash
 3095  francinette
 3096  make re
 3097  francinette
 3098  make re
 3099  francinette
 3100  ./pipex 1 2 3 4
 3101  <1 2 | 3 > 4
 3102  ./pipex /dev/stdin 'echo "a  \"\"  b     c"' 'cat' /dev/stdout
 3103  ./pipex /dev/stdin  /dev/stdout
 3104  ./pipex /dev/stdin cat cat   /dev/stdout
 3105  git commit -m "curr working"
 3106  git add .
 3107  git commit -m "curr working"
 3108  git push -u origin main
 3109  make fclean
 3110  git commit -m "final version"
 3111  git add .
 3112  git commit -m "final version"
 3113  git push -u origin main
 3114  ls
 3115  pwd
 3116  cd inc/libft
 3117  ls -a
 3118  rm -rf .git
 3119  cd ..
 3120  cd..
 3121  cd ..
 3122  git add .
 3123  git commit -m "final version"
 3124  git push -u origin main
 3125  git remote
 3126  git remote rm origin
 3127  git remote
 3128  git remote add origin https://github.com/Remi-Jacobs/pipex.git
 3129  git branch -M main
 3130  git push -u origin main
 3131  ls -a
 3132  rm -rf .git
 3133  cd inc
 3134  ls -a
 3135  cd ..
 3136  git remote rm origin
 3137  git remote
 3138  git remote add origin https://github.com/Remi-Jacobs/pipex.git
 3139  git branch -M main
 3140  git add .
 3141  git commit -m "final version"
 3142  mkdir .git
 3143  ls
 3144  ls -a
 3145  git remote rm origin
 3146  git init
 3147  git add .
 3148  ls -a
 3149  rm -rf .git
 3150  ls -a
 3151  git init
 3152  ls -a
 3153  git remote add origin https://github.com/Remi-Jacobs/pipex.git
 3154  cd libft/ft_printf
 3155  cd /libft/ft_printf
 3156  cd libft
 3157  cd ..
 3158  cd pipex
 3159  ls
 3160  cd inc/libft/printf
 3161  cd inc
 3162  cd libft
 3163  ls
 3164  cd ft_printf
 3165  ls -a
 3166  rm -rf .git
 3167  cd ..
 3168  cd ft_printf
 3169  git init
 3170  cd ..
 3171  cd getnextline
 3172  ls -a
 3173  rm -rf .git
 3174  git init
 3175  cd ..
 3176  git init
 3177  git remote add origin https://github.com/Remi-Jacobs/pipex.git
 3178  git add .
 3179  git commit -m "final version"
 3180  git add .
 3181  git submodule update --init --recursive
 3182  git status
 3183  git add .
 3184  git submodule update --init --recursive\n
 3185  git branch -M main
 3186  git push -u origin main
 3187  git init
 3188  git add .
 3189  cd inc/libft/ft_printf
 3190  ls -a
 3191  git init
 3192  ls -a
 3193  git add .
 3194  cd ..
 3195  cd getnextline
 3196  git add .
 3197  cd ..
 3198  git add .
 3199  cd /libft/ft_printf
 3200  cd inc/libft/ft_printf
 3201  git submodule update --init --recursive
 3202  cd ..
 3203  git submodule update --init --recursive
 3204  cd ..
 3205  git push -u origin main
 3206  git branch
 3207  git branch -M main
 3208  git push -u origin main
 3209  git add .
 3210  git submodule update --init --recursive
 3211  git submodule status
 3212  git add .
 3213  bash
 3214  exit
 3215  git add .
 3216  zsh
 3217  exit
 3218  git init
 3219  git add .
 3220  cd ..
 3221  cd getnextline
 3222  git init
 3223  git add .
 3224  git submodule update --init --recursive
 3225  git submodule status
 3226  git add .
 3227  cd ..
 3228  cd pipex/inc/libft
 3229  git add .
 3230  git submodule status
 3231  git submodule update --init --recursive
 3232  cd ft_printf
 3233  git commit -m "final version"
 3234  cd ..
 3235  cd getnextline
 3236  git commit -m "final version"
 3237  cd ..
 3238  cd ../..
 3239  git add .
 3240  git remote add origin https://github.com/Remi-Jacobs/pipex.git
 3241  git branch -M main
 3242  git push -u origin main
 3243  git commit -m "final version"
 3244  git push -u origin main
 3245  git push git@vogsphere.42wolfsburg.de:vogsphere/intra-uuid-d5056a00-d881-47b8-910a-0642392dffc1-5893111-ojacobs
 3246  make re
 3247  cd inc/libft/ft_printf
 3248  git add .
 3249  git commit -m "final version"
 3250  git innit
 3251  git init
 3252  git add ft_print_char.c
 3253  git add .
 3254  git commit -m "final version"
 3255  git add ft_print_char.c ft_print_hex.c ft_print_num.c ft_print_num.c ft_print_percent.c ft_print_str.c ft_print_unint.c ft_printf.c ft_putaddress.c ft_putchar.c ft_putstr.c
 3256  git commit -m "final version"
 3257  cd ..
 3258  cd getnextline
 3259  git add .c
 3260  git add .
 3261  cd ..
 3262  git add .
 3263  git commit -m "final version"
 3264  git push -u origin main
 3265  git push -all
 3266  git push --all
 3267  make re
 3268  ./pipex /dev/stdin cat cat   /dev/stdout
 3269  valgrind --leak-check=full --show-leak-kinds=all ./pipex  input.txt "ls -l" 'wc'
 3270  valgrind --leak-check=full --show-leak-kinds=all ./pipex  input.txt "ls -l" 'wc' ouyie
 3271  make re
 3272  valgrind --leak-check=full --show-leak-kinds=all ./pipex  input.txt "ls -l" 'wc' ouyie
 3273  francinette
 3274  ./pipex /dev/stdin cat cat   /dev/stdout
 3275  make re
 3276  valgrind --leak-check=full --show-leak-kinds=all ./pipex  input.txt "ls -l" 'wc' ouyie
 3277  make re
 3278  valgrind --leak-check=full --show-leak-kinds=all ./pipex  input.txt "ls -l" 'wc' ouyie
 3279  francinette
 3280  make fclean
 3281  clear
 3282  git add .
 3283  git commit -m "final version"
 3284  git push https://github.com/Remi-Jacobs/pipex.git
 3285  git push git@vogsphere.42wolfsburg.de:vogsphere/intra-uuid-d5056a00-d881-47b8-910a-0642392dffc1-5893111-ojacobs
 3286  make
 3287  norminette
 3288  francinette
 3289  clear
 3290  ./pipex /dev/stdin cat cat   /dev/stdout
 3291  valgrind --leak-check=full --show-leak-kinds=all ./pipex  input.txt "ls -l" 'wc' ouyie
 3292  ./pipex 1 2 3 4
 3293  <1 2 | 3 > 4
 3294  bash
 3295  zsh
 3296  ./pipex 1 2 3 4
 3297  <1 2 | 3 > 4
 3298  exit
 3299  <1 2 | 3 > 4
 3300  cc ..
 3301  cd ..
 3302  cd eval
 3303  cd intra-uuid-d5056a00-d881-47b8-910a-0642392dffc1-5893111-ojacobs
 3304  exit git 
 3305  cd ..
 3306  ls -a
 3307  rm -rf .git
 3308  <1 2 | 3 > 4
 3309  git init
 3310  ls
 3311  make fclean
 3312  ls
 3313  touch infile
 3314  make re
 3315  < infile ls -l | wc -l > outfile
 3316  < infile grep a1 | wc -w > outfile
 3317  touch infile
 3318  < infile grep a1 | wc -w > outfile
 3319  touch infile
 3320  < infile grep a1 | wc -w > outfile
 3321  touch infile
 3322  < infile grep a1 | wc -w > outfile
 3323  ./pipex infile "grep a1" "wc -w" outfile
 3324  echo $?
 3325  < infile grep a1 | wc -w > outfile
 3326  echo $?
 3327  francinette
 3328  bash
 3329  < infile grep a1 | wc -w > outfile
 3330  ./pipex infile "grep a1" "wc -w" outfile
 3331  ./pipex infile "ls l" "wc -w" outfile
 3332  ./pipex infile "ls -l" "wc -w" outfile
 3333  ./pipex infile "wc" "grep a1" outfile
 3334  ./pipex infile "wc" "grep" outfile
 3335  ./pipex infile "wc" "grep 56" outfile
 3336  < infile wc | grep 56 > outfile
 3337  < infile wc | grep a1 > outfile
 3338  < infile grep a1 | grep a1 > outfile
 3339  < infile grep a1 | wc > outfile
 3340  make re
 3341  ./pipex infile "wc" "grep 56" outfile
 3342  ./pipex infile "grep a1" "wc -w" outfile
 3343  make re
 3344  ./pipex infile "grep a1" "wc -w" outfile
 3345  < infile grep a1 | wc -w > outfile
 3346  ./pipex infile "grep a1" "wc -w" outfile
 3347  < infile grep a1 | wc -w > outfile
 3348  ./pipex infile "grep a1" "wc -w" outfile
 3349  < infile wc | grep a > outfile
 3350  < infile grep apple | grep a > outfile
 3351  ./pipex infile "grep apple" "grep a" outfile
 3352  ./pipex infile "grep apple" "grep b" outfile
 3353  < infile grep apple | grep b > outfile
 3354  make re
 3355  francinette
 3356  ./pipex infile "grep a1" "wc -w" outfile
 3357  make re
 3358  ./pipex infile "grep a1" "wc -w" outfile
 3359  < 1 2 | 3 > 4
 3360  bash
 3361  make re
 3362  ./pipex infile "grep a1" "wc -w" outfile
 3363  ./pipex infile "grep apple" "grep a" outfile
 3364  ./pipex infile "grep apple" "grep b" outfile
 3365  francinette
 3366  ./pipex infile "grep apple" "grep g" outfile
 3367  < infile grep apple | grep b > outfile
 3368  < infile grep apple | grep g > outfile
 3369  make re
 3370  francinette
 3371  < infile grep apple | grep g > outfile
 3372  < infile grep apple | grep a > outfile
 3373  ./pipex infile "grep apple" "grep g" outfile
 3374  ./pipex infile "grep apple" "grep a" outfile
 3375  cd pipexMedic
 3376  bash test.sh basic
 3377  cd ..
 3378  ./pipex /dev/stdin cat cat   /dev/stdout
 3379  git commit -m "final version"
 3380  git add .
 3381  git commit -m "final version"
 3382  make re
 3383  ./pipex < infile grep a1 | wc -w > outfile
 3384  touch infile
 3385  ./pipex < infile grep a1 | wc -w > outfile
 3386  ./pipex infile 'grep a1'  'wc -w'  outfile
 3387  ./pipex infile 'grep a1'  'grep a1'  outfile
 3388  < infile grep apple | grep a > outfile
 3389  ./pipex infile 'grep apple'  'grep a'  outfile
 3390  ./pipex infile "grep apple" "grep a" outfile
 3391  < infile grep apple | grep a > outfile
 3392  ./pipex infile "grep apple" "grep ggg" outfile
 3393  make re
 3394  ./pipex infile "grep apple" "grep ggg" outfile
 3395  ./pipex infile "grep apple" "grep a" outfile
 3396  < infile grep apple | grep a > outfile
 3397  < infile grep apples | grep a > outfile
 3398  < infile grep apple | grep a > outfile
 3399  ./pipex infile "grep apples" "grep a" outfile
 3400  ./pipex infile "grep apple" "grep a" outfile
 3401  < infile grep apple | grep a > outfile
 3402  < infile grep apple | grep j > outfile
 3403  ./pipex infile "grep apple" "grep j" outfile
 3404  < infile grep k | wc > outfile
 3405  ./pipex infile "grep k" "wc" outfile
 3406  make re
 3407  ./pipex infile "grep k" "wc" outfile
 3408  < infile grep k | grep k > outfile
 3409  ./pipex infile "grep k" "grep k" outfile
 3410  make re
 3411  ./pipex infile "grep k" "grep k" outfile
 3412  make re
 3413  make
 3414  francinette
 3415  ./pipex infile "grep k" "grep k" outfile
 3416  ls
 3417  cd Desktop
 3418  ls
 3419  git clone git@vogsphere.42wolfsburg.de:vogsphere/intra-uuid-d5056a00-d881-47b8-910a-0642392dffc1-5893111-ojacobs fmaurer-eval
 3420  lks
 3421  ls
 3422  cd fmaurer-eval
 3423  ls
 3424  la
 3425  vim Makefile
 3426  ls
 3427  cd ..
 3428  ls
 3429  md tmp
 3430  cd tmp
 3431  ls
 3432  < infile ls -l | wc -l > outfile
 3433  touch infile
 3434  < infile ls -l | wc -l > outfile
 3435  cat infile
 3436  mkdir bla
 3437  ls
 3438  cat infile
 3439  echo "/tmp" > infile
 3440  < infile ls -l | wc -l > outfile
 3441  cat outfile
 3442  < infile ls -l
 3443  cat ifn
 3444  cat infile
 3445  < infile cat
 3446  < ls -l | wc -l > outfile
 3447  cat infile |  ls -l
 3448  ls -l
 3449  ls
 3450  cd infile
 3451  ls -la
 3452  < infile ls -la
 3453  < infile cat
 3454  < infile ls
 3455  which la
 3456  which ls
 3457  bash --help
 3458  bash --norc --noprofile
 3459  cd ..
 3460  ls
 3461  cd fmaurer-eval
 3462  ls
 3463  norminette
 3464  make
 3465  make re
 3466  make clean
 3467  make fclean
 3468  make clean
 3469  make bonus
 3470  ls
 3471  make
 3472  ls
 3473  pipex
 3474  ./pipex
 3475  ./pipex < /dev/null
 3476  ./pipex /dev/null
 3477  ./pipex 1 2 3 4
 3478  ./pipex 1 2 3 4 4 5
 3479  ./pipex 
 3480  ls
 3481  rm 4
 3482  l;s
 3483  ls
 3484  cd inc
 3485  ls
 3486  cd ..
 3487  ls
 3488  cd src
 3489  ls
 3490  code .
 3491  cd ..
 3492  ls
 3493  code .
 3494  grep -rn printf
 3495  ls
 3496  francinette
 3497  ls
 3498  cd
 3499  cd francinette/temp/pipex
 3500  ls
 3501  cd fsoares
 3502  ls
 3503  cd ..
 3504  ls
 3505  cd pipex-tester
 3506  ls
 3507  cd ..
 3508  ls
 3509  cd ..
 3510  ls
 3511  cd ..
 3512  ls
 3513  cd tests/pipex
 3514  ls
 3515  cd fsoares
 3516  ls
 3517  cd ..
 3518  ls
 3519  cd ..
 3520  ls
 3521  cd  temp/pipex/fsoares
 3522  ls
 3523  ./heredoc.sh
 3524  ./middle_fail.sh
 3525  vim middle_fail.sh
 3526  file pipex
 3527  cd ..
 3528  ls
 3529  vim Makefile
 3530  cd pipex
 3531  ls
 3532  cd temp
 3533  ls
 3534  cd 
 3535  cd francinette/tests/pipex
 3536  ls
 3537  cd pipex-tester
 3538  ls
 3539  vim run.sh
 3540  cd ..
 3541  ls
 3542  cd ..
 3543  ls
 3544  cd
 3545  cd francinette/temp/pipex
 3546  ls
 3547  cd pipex-tester
 3548  ls
 3549  ./run.sh
 3550  cd ..
 3551  cd
 3552  ls
 3553  ./pipex bla blub vbluia asd
 3554  ./pipex /dev/random echo wc -l bla
 3555  ./pipex /dev/random echo "wc -l" bla
 3556  cat bla
 3557  ./pipex /dev/random echo echo ""
 3558  ./pipex /dev/random echo echo bla
 3559  cat bla
 3560  ./pipex /dev/random cat echo bla
 3561  ./pipex /dev/random cat cat bla
 3562  cat bla
 3563  cat /dev/random
 3564  ./pipex /dev/null cat cat bla
 3565  ./pipex /root/.bashrc cat cat bla 
 3566  ls
 3567  echo "asdfasd\nasdf\nasdf\nasdf\na1\nasdf\n"
 3568  echo "asdfasd\nasdf\nasdf\nasdf\na1\nasdf\n" > infile
 3569  s
 3570  ls
 3571  cat infile
 3572  ./pipex infile "grep a1" "wc -w" outf
 3573  cat outf
 3574  valgrind ./pipex infile "grep a1" "wc -w" outf
 3575  valgrind ./pipex infile "grep a1" "wc -w" /dev/sda
 3576  ./pipex infile "grep a1" "wc -w" /dev/sda
 3577  ls
 3578  cd
 3579  ls
 3580  git clone git@vogsphere.42wolfsburg.de:vogsphere/intra-uuid-d5056a00-d881-47b8-910a-0642392dffc1-5893111-ojacobs dyaoeval
 3581  cd dyaoeval
 3582  code .
 3583  make
 3584  make clean
 3585  make fclean
 3586  make
 3587  make re
 3588  ./pipex test1.txt ls wc test1.txt
 3589  ./pipex test1.txt "ls -l" "wc -l" test1.txt
 3590  ./pipex
 3591  ./pipex test1.txt "ls -l"
 3592  ./pipex test1.txt 
 3593  ./pipex test1.txt "ls -l" "wc -l"
 3594  ./pipex test1.txt sport sports test1.txt
 3595  norminette
 3596  ./pipex infile 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\"' outfile
 3597  ./pipex infile 'sed "s/And/But/"', 'awk "{count++} END {printf \\"count: %i\\" , count}"' outfile
 3598  ./pipex infile 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\" , count}"' outfile
 3599  <infile sed "s/And/But/" | awk "{count++} END {printf \\"count: %i\\" , count}" > outfile
 3600  <infile sed "s/And/But/" | awk "{count++} END {printf \\"count: %i \\" , count}" > outfile
 3601  <infile sed "s/And/But/" | awk "{count++} END {printf \"count: %i \" , count}" > outfile
 3602  make re
 3603  ./pipex infile 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\" , count}"' outfile
 3604  man mlx
 3605  sudo apt-get update && sudo apt-get install xorg libxext-dev zlib1g-dev libbsd-dev
 3606  tar -zxvf minilibx-linux.tgz
 3607  cd mlx
 3608  tar -zxvf minilibx-opengl.tgz
 3609  tar -zxvf minilibx_opengl.tgz
 3610  cd ..
 3611  tar -zxvf minilibx_opengl.tgz
 3612  tar -zxvf minilibx_mms_20200219_beta.tgz
 3613  cd mlx
 3614  make
 3615  cd minilibx_mms_20200219
 3616  make
 3617  cd ..
 3618  cd minilibx-linux
 3619  make
 3620  make fclean
 3621  make clean
 3622  make fclean
 3623  francinette
 3624  clear
 3625  cc get_next_line.c
 3626  cc get_next_line.c get_next_line_utils.c get_next_line.h
 3627  touch lyrics.txt
 3628  ./a.out > result.txt
 3629  ./a.out
 3630  cc get_next_line.c get_next_line_utils.c get_next_line.h
 3631  ./a.out
 3632  cc get_next_line.c get_next_line_utils.c get_next_line.h
 3633  ./a.out
 3634  clear
 3635  ./a.out > result.txt
 3636  ./a.out
 3637  valgrind --leak-check=full --show-leak-kinds=all ./a.out > result.txt
 3638  norminette
 3639  clear
 3640  norminette
 3641  cc -D BUFFER_SIZE=1 get_next_line.c get_next_line_utils.c get_next_line.h
 3642  ./a.out > result.txt
 3643  ./a.out > result2.txt
 3644  cc -D BUFFER_SIZE=1 get_next_line.c get_next_line_utils.c get_next_line.h
 3645  ./a.out > result2.txt
 3646  cc -D BUFFER_SIZE=1 get_next_line.c get_next_line_utils.c get_next_line.h
 3647  ./a.out > result2.txt
 3648  cc -D BUFFER_SIZE=1 get_next_line.c get_next_line_utils.c get_next_line.h
 3649  ./a.out > result2.txt
 3650  cc -D BUFFER_SIZE=1 get_next_line.c get_next_line_utils.c get_next_line.h
 3651  ./a.out > result2.txt
 3652  echo $?
 3653  cc -D BUFFER_SIZE=1 get_next_line.c get_next_line_utils.c get_next_line.h
 3654  ./a.out > result2.txt
 3655  cc -D BUFFER_SIZE=25 get_next_line.c get_next_line_utils.c get_next_line.h
 3656  ./a.out > result2.txt
 3657  cc -D BUFFER_SIZE=25 get_next_line.c get_next_line_utils.c get_next_line.h
 3658  ./a.out > result2.txt
 3659  < test.txt ./a.out
 3660  touch test.txt
 3661  < test.txt ./a.out
 3662  cc -D BUFFER_SIZE=25 get_next_line.c get_next_line_utils.c get_next_line.h
 3663  < test.txt ./a.out
 3664  cc -D BUFFER_SIZE=25 get_next_line.c get_next_line_utils.c get_next_line.h
 3665  ./a.out /dev/stdin
 3666  /dev/stdin 
 3667  a.out /dev/stdin 
 3668  a.out /dev/stdin
 3669  ./a.out /dev/stdin
 3670  cd ..
 3671  cd minilibx-linux
 3672  sudo apt-get update && sudo apt-get install xorg libxext-dev zlib1g-dev libbsd-dev\n
 3673  cd ..
 3674  sudo apt-get update && sudo apt-get install xorg libxext-dev zlib1g-dev libbsd-dev
 3675  cd ..
 3676  sudo apt-get update && sudo apt-get install xorg libxext-dev zlib1g-dev libbsd-dev
 3677  mkdir inc maps src
 3678  touch Makefile
 3679  touch makefile
 3680  cd inc
 3681  mkdir libft
 3682  touch so_long.h
 3683  cd ..
 3684  cd mlx
 3685  cd minilibx-linux
 3686  make
 3687  touch main.c
 3688  make
 3689  cd src
 3690  cc main.c
 3691  cd ..
 3692  make
 3693  make fclean
 3694  clear
 3695  make
 3696  make re
 3697  ./pipex infile 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\" , count}"' outfile
 3698  make re
 3699  ./pipex infile 'sed "s/And/But/"' 'awk "{count++} END {printf \\"count: %i\\" , count}"' outfile
 3700  francinette
 3701  cd ..
 3702  cd pipex
 3703  clear
 3704  make fclean
 3705  make clean
 3706  make
 3707  ./so_long
 3708  make
 3709  ./so_long
 3710  make
 3711  make re
 3712  ./so_long
 3713  cd mlx/minilibx-linux
 3714  make re
 3715  cd ..
 3716  make
 3717  ./so_long
 3718  make re
 3719  ./so_long
 3720  make re
 3721  cd mlx/minilibx-linux
 3722  make re
 3723  cd ../..
 3724  make re
 3725  cd mlx/minilibx-linux
 3726  make re
 3727  cd ../..
 3728  make
 3729  ./so_long
 3730  make
 3731  ./so_long
 3732  make
 3733  ./so_long
 3734  make fclean
 3735  make clean
 3736  make fclean
 3737  make 
 3738  ./so_long
 3739  make 
 3740  ./so_long
 3741  make 
 3742  ./so_long
 3743  make 
 3744  ./so_long
 3745  make 
 3746  ./so_long
 3747  make 
 3748  ./so_long
 3749  make 
 3750  ./so_long
 3751  make 
 3752  ./so_long
 3753  make 
 3754  ./so_long
 3755  man mlx_pixel_put
 3756  make re
 3757  ./pipex input "ls -l"  "wc -l"  outfile
 3758  ./pipex infile "grep h"  "wc -l"  outfile
 3759  echo $?
 3760  < infile grep h | wc -l > outfile
 3761  echo $?
 3762  < infile grep h > output < infile wc -l > outfile
 3763  touch input
 3764  < infile grep h > output < input wc -l > outfile
 3765  man mlx_pixel_put
 3766  make re
 3767  ./so_long
 3768  make re
 3769  ./so_long
 3770  make re
 3771  ./so_long
 3772  make re
 3773  ./so_long
 3774  make re
 3775  ./so_long
 3776  make re
 3777  ./so_long
 3778  make re
 3779  ./so_long
 3780  make re
 3781  ./so_long
 3782  make
 3783  ./so_long
 3784  make
 3785  ./so_long
 3786  make
 3787  ./so_long
 3788  make
 3789  ./so_long
 3790  make
 3791  ./so_long
 3792  make
 3793  ./so_long
 3794  make
 3795  ./so_long
 3796  make
 3797  ./so_long
 3798  make
 3799  ./so_long
 3800  make
 3801  ./so_long
 3802  make
 3803  ./so_long
 3804  make
 3805  ./so_long
 3806  make
 3807  ./so_long
 3808  make
 3809  ./so_long
 3810  make
 3811  ./so_long
 3812  make
 3813  ./so_long
 3814  make
 3815  ./so_long
 3816  make
 3817  ./so_long
 3818  make
 3819  ./so_long
 3820  make
 3821  ./so_long
 3822  make
 3823  ./so_long
 3824  make
 3825  ./so_long
 3826  make
 3827  ./so_long
 3828  make
 3829  ./so_long
 3830  make
 3831  ./so_long
 3832  make
 3833  ./so_long
 3834  make
 3835  ./so_long
 3836  make
 3837  ./so_long
 3838  make
 3839  ./so_long
 3840  make
 3841  ./so_long
 3842  make
 3843  ./so_long
 3844  make
 3845  ./so_long
 3846  make
 3847  ./so_long
 3848  make
 3849  ./so_long
 3850  make
 3851  ./so_long
 3852  make
 3853  ./so_long
 3854  make
 3855  ./so_long
 3856  make
 3857  ./so_long
 3858  make
 3859  ./so_long
 3860  lscpu | grep "Byte Order"
 3861  lscpu > output
 3862  env | grep PATH > output
 3863  env | grep PATH= > output
 3864  env | grep PATH=/home > output
 3865  ./so_long
 3866  touch bitex.c
 3867  cc bitex.c
 3868  ./a.out
 3869  cc bitex.c
 3870  ./a.out
 3871  touch color.c
 3872  make
 3873  ./a.out
 3874  ./so_long
 3875  make
 3876  ./so_long
 3877  make
 3878  ./so_long
 3879  file.bfe:VAA0DAYFf07ym3ROeASsmsgnY0o0sDMJev7zFHhwQS8mvM8V5xQQpLc6cDCFXDWTiFzZ2H9skYkiJ/DpQtnM/uZ0 -o
 3880  VAA0DAYFf07ym3ROeASsmsgnY0o0sDMJev7zFHhwQS8mvM8V5xQQpLc6cDCFXDWTiFzZ2H9skYkiJ/DpQtnM/uZ0 -o
 3881  VAA0DAYFf07ym3ROeASsmsgnY0o0sDMJev7zFHhwQS8mvM8V5xQQpLc6cDCFXDWTiFzZ2H9skYkiJ/DpQtnM/uZ0 - o
 3882  file.bfe:VAA0DAYFf07ym3ROeASsmsgnY0o0sDMJev7zFHhwQS8mvM8V5xQQpLc6cDCFXDWTiFzZ2H9skYkiJ/DpQtnM/uZ0 - o
 3883  file.bfe:VAA0DAYFf07ym3ROeASsmsgnY0o0sDMJev7zFHhwQ\nS8mvM8V5xQQpLc6cDCFXDWTiFzZ2H9skYkiJ/DpQtnM/uZ0 - o
 3884  file.bfe:VAA0DAYFf07ym3ROeASsmsgnY0o0sDMJev7zFHhwQS8mvM8V5xQQpLc6cDCFXDWTiFzZ2H9skYkiJ/DpQtnM/uZ0 - o
 3885  file.bfe:VAA0DAYFf07ym3ROeASsmsgnY0o0sDMJev7zFHhwQS8mvM8V5xQQpLc6cDCFXDWTiFzZ2H9skYkiJ/DpQtnM/uZ0 -o
 3886  grep /usr/include/linux/input-event-codes.h > output
 3887  /usr/include/linux/input-event-codes.h grep > output
 3888  /usr/include/linux/input-event-codes.h
 3889  ls
 3890  cd ..
 3891  ls
 3892  cd ..
 3893  ls
 3894  cd ..
 3895  ls
 3896  ls -la
 3897  ls -a
 3898  cd ..
 3899  ls
 3900  cd ..
 3901  ls
 3902  cd  bin
 3903  ls
 3904  cd ..
 3905  ls
 3906  cd usr
 3907  ls
 3908  cd include
 3909  ld
 3910  ls
 3911  cd linux
 3912  ls
 3913  grep input
 3914  grep in
 3915  cd input-event-codes.h
 3916  cat input-event-codes.h > output
 3917  cat input-event-codes.h >> output
 3918  cat input-event-codes.h
 3919  < input-event-codes.h cat > output
 3920  < input-event-codes.h grep #define > output
 3921  < input-event-codes.h grep define > output
 3922  clear
 3923  cd ..
 3924  cd ...
 3925  ls
 3926  cd home/ojacobs/Documents/ojacobsdev/Scribble/So_long
 3927  clear
 3928  ./keycode_finder
 3929  touch keycode_finder.c
 3930  xev
 3931  gcc -o keycode_finder keycode_finder.c -lmlx -lXext -lX11 -lm
 3932  ./keycode_finder
 3933  touch main2.c
 3934  cc main2.c
 3935  make
 3936  ./so_long
 3937  make
 3938  ./so_long
 3939  make
 3940  ./so_long
 3941  make
 3942  ./so_long
 3943  make
 3944  ./so_long
 3945  make
 3946  ./so_long
 3947  make
 3948  ./so_long
 3949  make
 3950  ./so_long
 3951  make
 3952  ./so_long
 3953  make
 3954  ./so_long
 3955  make
 3956  ./so_long
 3957  make
 3958  ./so_long
 3959  make
 3960  ./so_long
 3961  make
 3962  ./so_long
 3963  make
 3964  make re
 3965  ./so_long
 3966  man clock
 3967  ./so_long
 3968  make
 3969  ./so_long
 3970  make
 3971  ./so_long
 3972  make
 3973  ./so_long
 3974  make
 3975  ./so_long
 3976  make
 3977  ./so_long
 3978  make
 3979  ./so_long
 3980  make
 3981  ./so_long
 3982  make
 3983  ./so_long
 3984  make
 3985  ./so_long
 3986  make
 3987  ./so_long
 3988  make
 3989  ./so_long
 3990  touch /src/ main3.c
 3991  touch src/ main3.c
 3992  touch  main3.c src/
 3993  make
 3994  ./so_long
 3995  tar -zxvf minilibx_opengl.tgz
 3996  make
 3997  ./so_long
 3998  make
 3999  ./so_long
 4000  make
 4001  ./so_long
 4002  cd minilibx_opengl_20191021
 4003  make
 4004  cd ..
 4005  make
 4006  cd ..
 4007  cd So_long
 4008  make
 4009  ./so_long
 4010  make
 4011  ./so_long
 4012  pwd
 4013  make re
 4014  ./pipex infile /usr/bin/ls cat outfile
 4015  ls
 4016  ./pipex infile /usr/bin/lse cat outfile
 4017  valgrind --leak-check=full ./pipex infile /usr/bin/lse cat outfile
 4018  valgrind --leak-check=full ./pipex infile /usr/bin/lse cat outfileerrr
 4019  lse | cat > new.txt 
 4020  bash
 4021  ./so_long
 4022  make
 4023  ./so_long
 4024  cc keycode_finder.c
 4025  ./keycode_finder
 4026  make
 4027  ./so_long
 4028  ./keycode_finder
 4029  make
 4030  ./so_long
 4031  ./keycode_finder
 4032  ./so_long
 4033  pwd
 4034  cd ..
 4035  ls
 4036  man va list
 4037  va arg
 4038  man va arg
 4039  cd So_long
 4040  make
 4041  ./so_long
 4042  make re
 4043  tar -zxvf Tiny\ Swords.zip
 4044  touch  main4.c
 4045  make
 4046  ./so_long
 4047  make
 4048  ./so_long
 4049  make
 4050  ./so_long
 4051  make
 4052  ./so_long
 4053  make
 4054  ./so_long
 4055  make
 4056  ./so_long
 4057  make
 4058  ./so_long
 4059  make
 4060  ./so_long
 4061  make
 4062  ./so_long
 4063  make
 4064  ./so_long
 4065  make
 4066  ./so_long
 4067  man opwn
 4068  man open
 4069  man open()
 4070  man read
 4071  touch game_init.c render_map.c hooks.c
 4072  make
 4073  make re
 4074  make fclean
 4075  cd ..
 4076  make re
 4077  ./so_long
 4078  ./so_long map1.ber
 4079  make re
 4080  ./so_long map1.ber
 4081  make re
 4082  ./so_long map1.ber
 4083  make re
 4084  ./so_long map1.ber
 4085  ./so_long ./map1.ber
 4086  ./so_long ../map1.ber
 4087  ./so_long ./map1.ber
 4088  valgrind --leak-check=full ./so_long ./map1.ber
 4089  francinette
 4090  clear
 4091  francinette
 4092  make re
 4093  valgrind --leak-check=full ./so_long ./map1.ber
 4094  make re
 4095  valgrind --leak-check=full ./so_long ./map1.ber
 4096  make re
 4097  valgrind --leak-check=full ./so_long ./map1.ber
 4098  make re
 4099  valgrind --leak-check=full ./so_long ./map1.ber
 4100  make re
 4101  valgrind --leak-check=full ./so_long ./map1.ber
 4102  touch ft_strncpy.c
 4103  cc ft_strncpy.c
 4104  ./a.out
 4105  man strncpy
 4106  cc ft_strncpy.c
 4107  man strncpy
 4108  ./a.out
 4109  cd ..
 4110  clear
 4111  touch test_main.c
 4112  make
 4113  clear
 4114  make
 4115  clear
 4116  make
 4117  clear
 4118  make
 4119  ./so_long ./map1.ber
 4120  make
 4121  ./so_long ./map1.ber
 4122  touch check.c
 4123  make
 4124  ./so_long ./map1.ber
 4125  touch blah.c
 4126  cc blah.c
 4127  ./a.out
 4128  cc blah.c
 4129  ./a.out
 4130  cc blah.c
 4131  ./a.out
 4132  cc blah.c
 4133  ./a.out
 4134  cc blah.c
 4135  ./a.out
 4136  make
 4137  cc blah.c
 4138  ./a.out
 4139  cc blah.c
 4140  ./a.out
 4141  cc blah.c
 4142  ./a.out
 4143  cc blah.c
 4144  ./a.out
 4145  cc blah.c
 4146  ./a.out
 4147  cc blah.c
 4148  ./a.out
 4149  cc blah.c
 4150  ./a.out
 4151  cc blah.c
 4152  ./a.out
 4153  cc blah.c
 4154  ./a.out
 4155  cc blah.c
 4156  ./a.out
 4157  cc blah.c
 4158  ./a.out
 4159  cc blah.c
 4160  ./a.out
 4161  cc blah.c
 4162  ./a.out
 4163  cc blah.c
 4164  ./a.out
 4165  cc blah.c
 4166  ./a.out
 4167  cc blah.c
 4168  ./a.out
 4169  cc blah.c
 4170  ./a.out
 4171  cc blah.c
 4172  ./a.out
 4173  cc blah.c
 4174  ./a.out
 4175  cc blah.c
 4176  ./a.out
 4177  cc blah.c
 4178  ./a.out
 4179  cc blah.c
 4180  ./a.out
 4181  cc blah.c
 4182  ./a.out
 4183  cc blah.c
 4184  ./a.out
 4185  cc blah.c
 4186  ./a.out
 4187  cc blah.c
 4188  ./a.out
 4189  cc blah.c
 4190  ./a.out
 4191  cc blah.c
 4192  ./a.out
 4193  cc blah.c
 4194  ./a.out
 4195  cc blah.c
 4196  ./a.out
 4197  cc blah.c
 4198  ./a.out
 4199  cc blah.c
 4200  ./a.out
 4201  cc blah.c
 4202  ./a.out
 4203  cc blah.c
 4204  ./a.out
 4205  cc blah.c
 4206  ./a.out
 4207  cc blah.c
 4208  ./a.out
 4209  cc blah.c
 4210  ./a.out
 4211  cc blah.c
 4212  ./a.out
 4213  cc blah.c
 4214  ./a.out
 4215  git config --global user.email "ojacobs@student.42wolfsburg.de"
 4216  git config --global user.name "Oluremilekun Jacobs"
 4217  pwd
 4218  cd src
 4219  ls
 4220  gcc test_main.c
 4221  cd ..
 4222  make
 4223  ./so_long ./map1.ber
 4224  echo $?
 4225  ./so_long ./map1.ber
 4226  echo $?
 4227  ./so_long ./map1.ber
 4228  echo $?
 4229  gcc test_main.c
 4230  make
 4231  ./so_long ./map1.ber
 4232  echo $?
 4233  ./so_long ./map1.ber
 4234  echo $?
 4235  ./so_long ./map1.ber
 4236  echo $?
 4237  ./so_long ./map1.ber
 4238  echo $?
 4239  make
 4240  ./so_long ./map1.ber
 4241  make
 4242  ./so_long ./map1.ber
 4243  make
 4244  ./so_long ./map1.ber
 4245  make
 4246  ./so_long ./map1.ber
 4247  make
 4248  ./so_long ./map1.ber
 4249  echo $?
 4250  ./so_long ./map1.ber
 4251  echo $?
 4252  make
 4253  ./so_long ./map1.ber
 4254  make
 4255  ./so_long ./map1.ber
 4256  make
 4257  ./so_long ./map1.ber
 4258  make
 4259  ./so_long ./map1.ber
 4260  make
 4261  ./so_long ./map1.ber
 4262  make
 4263  ./so_long ./map1.ber
 4264  make
 4265  ./so_long ./map1.ber
 4266  make
 4267  ./so_long ./map1.ber
 4268  make
 4269  ./so_long ./map1.ber
 4270  make
 4271  ./so_long ./map1.ber
 4272  make
 4273  ./so_long ./map1.ber
 4274  make
 4275  ./so_long ./map1.ber
 4276  make
 4277  ./so_long ./map1.ber
 4278  make
 4279  ./so_long ./map1.ber
 4280  make
 4281  ./so_long ./map1.ber
 4282  make
 4283  ./so_long ./map1.ber
 4284  make
 4285  ./so_long ./map1.ber
 4286  make
 4287  ./so_long ./map1.ber
 4288  make
 4289  ./so_long ./map1.ber
 4290  make
 4291  ./so_long ./map1.ber
 4292  make
 4293  ./so_long ./map1.ber
 4294  make
 4295  ./so_long ./map1.ber
 4296  make
 4297  ./so_long ./map1.ber
 4298  make
 4299  ./so_long ./map1.ber
 4300  make
 4301  ./so_long ./map1.ber
 4302  make
 4303  ./so_long ./map1.ber
 4304  make
 4305  ./so_long ./map1.ber
 4306  make
 4307  ./so_long ./map1.ber
 4308  make
 4309  ./so_long ./map1.ber
 4310  make
 4311  ./so_long ./map1.ber
 4312  make
 4313  ./so_long ./map1.ber
 4314  make
 4315  ./so_long ./map1.ber
 4316  make
 4317  ./so_long ./map1.ber
 4318  make
 4319  ./so_long ./map1.ber
 4320  make
 4321  ./so_long ./map1.ber
 4322  echo $?
 4323  make
 4324  echo $?
 4325  ./so_long ./map1.ber
 4326  make
 4327  ./so_long ./map1.ber
 4328  make
 4329  ./so_long ./map1.ber
 4330  make
 4331  ./so_long ./map1.ber
 4332  make
 4333  ./so_long ./map1.ber
 4334  make
 4335  ./so_long ./map1.ber
 4336  make
 4337  ./so_long ./map1.ber
 4338  make
 4339  ./so_long ./map1.ber
 4340  make
 4341  ./so_long ./map1.ber
 4342  make
 4343  ./so_long ./map1.ber
 4344  make
 4345  ./so_long ./map1.ber
 4346  make
 4347  ./so_long ./map1.ber
 4348  make
 4349  ./so_long ./map1.ber
 4350  make
 4351  ./so_long ./map1.ber
 4352  make
 4353  ./so_long ./map1.ber
 4354  make
 4355  ./so_long ./map1.ber
 4356  make
 4357  ./so_long ./map1.ber
 4358  valgrind --leak-check=full ./so_long ./map1.ber
 4359  make
 4360  valgrind --leak-check=full ./so_long ./map1.ber
 4361  ./so_long ./map1.ber
 4362  make
 4363  ./so_long ./map1.ber
 4364  make
 4365  ./so_long ./map1.ber
 4366  make
 4367  ./so_long ./map1.ber
 4368  make
 4369  ./so_long ./map1.ber
 4370  make
 4371  ./so_long ./map1.ber
 4372  make
 4373  ./so_long ./map1.ber
 4374  touch pre_load_map.c
 4375  touch map_error_check.c
 4376  touch error_check_utils.c
 4377  make re
 4378  ./so_long ./map1.ber
 4379  man strchr
 4380  man strmapi
 4381  valgrind --leak-check=full ./so_long ./map1.ber
 4382  make
 4383  ./so_long ./map1.ber
 4384  make
 4385  ./so_long ./map1.ber
 4386  man strncmp
 4387  make
 4388  ./so_long ./map1.ber
 4389  make
 4390  ./so_long ./map1.ber
 4391  ./so_long ./map1.be
 4392  touch map2.ber
 4393  ./so_long ./map2.ber
 4394  touch map2.ber
 4395  make
 4396  ./so_long ./map2.ber
 4397  ./so_long ./map1.be
 4398  make
 4399  ./so_long ./map2.ber
 4400  make
 4401  ./so_long ./map2.ber
 4402  make
 4403  ./so_long ./map2.ber
 4404  make
 4405  ./so_long ./map2.ber
 4406  make
 4407  ./so_long ./map2.ber
 4408  make
 4409  ./so_long ./map2.ber
 4410  valgrind --leak-check=full ./so_long ./map2.ber
 4411  make
 4412  valgrind --leak-check=full ./so_long ./map2.ber
 4413  make
 4414  ./so_long ./map2.ber
 4415  make
 4416  ./so_long ./map2.ber
 4417  make
 4418  ./so_long ./map2.ber
 4419  make
 4420  ./so_long ./map2.ber
 4421  make
 4422  ./so_long ./map2.ber
 4423  make
 4424  ./so_long ./map2.ber
 4425  make
 4426  ./so_long ./map2.ber
 4427  make
 4428  ./so_long ./map2.ber
 4429  make
 4430  ./so_long ./map2.ber
 4431  make
 4432  ./so_long ./map2.ber
 4433  make
 4434  ./so_long ./map2.ber
 4435  make
 4436  ./so_long ./map2.ber
 4437  make
 4438  ./so_long ./map2.ber
 4439  make
 4440  ./so_long ./map2.ber
 4441  make
 4442  ./so_long ./map2.ber
 4443  make
 4444  ./so_long ./map2.ber
 4445  make
 4446  ./so_long ./map2.ber
 4447  make
 4448  ./so_long ./map2.ber
 4449  make
 4450  ./so_long ./map2.ber
 4451  make
 4452  ./so_long ./map2.ber
 4453  touch validate_map.c
 4454  make
 4455  make re
 4456  ./so_long ./map2.ber
 4457  make re
 4458  ./so_long ./map2.ber
 4459  ./so_long ./map1.be
 4460  make re
 4461  ./so_long ./map2.ber
 4462  valgrind --leak-check=full ./so_long ./map2.ber
 4463  make re
 4464  ./so_long ./map2.ber
 4465  valgrind --leak-check=full ./so_long ./map2.ber
 4466  make re
 4467  valgrind --leak-check=full ./so_long ./map2.ber
 4468  make re
 4469  valgrind --leak-check=full ./so_long ./map2.ber
 4470  make re
 4471  valgrind --leak-check=full ./so_long ./map2.ber
 4472  make re
 4473  valgrind --leak-check=full ./so_long ./map2.ber
 4474  make re
 4475  valgrind --leak-check=full ./so_long ./map2.ber
 4476  make re
 4477  valgrind --leak-check=full ./so_long ./map2.ber
 4478  make re
 4479  valgrind --leak-check=full ./so_long ./map2.ber
 4480  make re
 4481  valgrind --leak-check=full ./so_long ./map2.ber
 4482  valgrind --leak-check=full ./so_long ./map1.be
 4483  make re
 4484  valgrind --leak-check=full ./so_long ./map1.be
 4485  make re
 4486  valgrind --leak-check=full ./so_long ./map1.be
 4487  ./so_long ./map2.ber
 4488  make re
 4489  ./so_long ./map2.ber
 4490  ./so_long ./map1.be
 4491  ./so_long ./map2.ber
 4492  ./so_long ./map1.be
 4493  ./so_long ./map2.ber
 4494  make re
 4495  ./so_long ./map2.ber
 4496  valgrind --leak-check=full ./so_long ./map2.ber
 4497  make re
 4498  valgrind --leak-check=full ./so_long ./map2.ber
 4499  make re
 4500  valgrind --leak-check=full ./so_long ./map2.ber
 4501  make re
 4502  valgrind --leak-check=full ./so_long ./map2.ber
 4503  make re
 4504  valgrind --leak-check=full ./so_long ./map2.ber
 4505  cd ..
 4506  make re
 4507  bash
 4508  vim ~/.zshrc
 4509  make re
 4510  valgrind --leak-check=full ./so_long ./map2.ber
 4511  make re
 4512  valgrind --leak-check=full ./so_long ./map2.ber
 4513  valgrind --leak-check=full --show-leak=full ./so_long ./map2.ber
 4514  valgrind --leak-check=full --show-leak=all ./so_long ./map2.ber
 4515  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4516  make re
 4517  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4518  make re
 4519  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4520  make re
 4521  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4522  make re
 4523  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4524  make re
 4525  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4526  ./so_long ./map2.ber
 4527  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4528  make re
 4529  ./so_long ./map2.ber
 4530  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4531  make re
 4532  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4533  make re
 4534  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4535  make re
 4536  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4537  make re
 4538  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4539  make re
 4540  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4541  make re
 4542  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4543  make re
 4544  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4545  make re
 4546  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4547  norminette
 4548  clear
 4549  norminette src
 4550  clear
 4551  norminette inc
 4552  make re
 4553  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4554  make re
 4555  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4556  make re
 4557  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4558  make re
 4559  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4560  make re
 4561  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4562  make re
 4563  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4564  make re
 4565  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4566  make re
 4567  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4568  make re
 4569  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4570  touch so_long_utils.c
 4571  make re
 4572  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4573  make re
 4574  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4575  make re
 4576  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4577  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map1.be
 4578  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber hoho
 4579  norminette src
 4580  cd src
 4581  ks
 4582  ls
 4583  cd ..
 4584  make re
 4585  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber hoho
 4586  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4587  make re
 4588  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4589  make re
 4590  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4591  make re
 4592  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4593  make re
 4594  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4595  make re
 4596  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4597  make re
 4598  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4599  make re
 4600  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4601  make re
 4602  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4603  make re
 4604  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4605  norminette src
 4606  make re
 4607  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4608  make re
 4609  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4610  norminette src
 4611  make re
 4612  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4613  norminette src
 4614  make re
 4615  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./map2.ber
 4616  norminette src
 4617  norminette src inc
 4618  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./maps/map2.ber
 4619  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./maps/map1.be
 4620  mkdir Images
 4621  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./maps/map2.ber
 4622  make re
 4623  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./maps/map2.ber
 4624  make re
 4625  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./maps/map2.ber
 4626  make re
 4627  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./maps/map2.ber
 4628  make re
 4629  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./maps/map2.ber
 4630  make re
 4631  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./maps/map2.ber
 4632  make re
 4633  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./maps/map2.ber
 4634  make re
 4635  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./maps/map2.ber
 4636  make re
 4637  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./maps/map2.ber
 4638  make re
 4639  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./maps/map2.ber
 4640  make re
 4641  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./maps/map2.ber
 4642  make re
 4643  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./maps/map2.ber
 4644  make re
 4645  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./maps/map2.ber
 4646  make re
 4647  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./maps/map2.ber
 4648  make re
 4649  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./maps/map2.ber
 4650  make re
 4651  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./maps/map2.ber
 4652  make re
 4653  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./maps/map2.ber
 4654  make re
 4655  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./maps/map2.ber
 4656  make re
 4657  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./maps/map2.ber
 4658  make re
 4659  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./maps/map2.ber
 4660  make re
 4661  < 1 2 | 3 > 4
 4662  make re
 4663  make fclean
 4664  make re
 4665  make clean
 4666  make re
 4667  ./so_long ./map2.ber
 4668  ./so_long ./maps/map2.ber
 4669  make re
 4670  ./so_long ./maps/map2.ber
 4671  make re
 4672  ./so_long ./maps/map2.ber
 4673  make re
 4674  ./so_long ./maps/map2.ber
 4675  make re
 4676  ./so_long ./maps/map2.ber
 4677  make re
 4678  ./so_long ./maps/map2.ber
 4679  make re
 4680  ./so_long ./maps/map2.ber
 4681  make re
 4682  ./so_long ./maps/map2.ber
 4683  make re
 4684  ./so_long ./maps/map2.ber
 4685  make re
 4686  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./maps/map2.ber
 4687  make re
 4688  norminette 
 4689  make clean
 4690  make fclean
 4691  make re
 4692  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./maps/map2.ber
 4693  make re
 4694  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./maps/map2.ber
 4695  make re
 4696  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./maps/map2.ber
 4697  make re
 4698  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./maps/map2.ber
 4699  cd mlx
 4700  ls
 4701  cd minilibx-linux
 4702  make clean
 4703  make re
 4704  make fclean
 4705  make clean
 4706  make fclean
 4707  cd ..
 4708  make re
 4709  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./maps/map2.ber
 4710  cd mlx/minilibx-linux
 4711  make re
 4712  make clean
 4713  cd ../..
 4714  make re
 4715  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./maps/map2.ber
 4716  cd mlx/minilibx-linux
 4717  make re
 4718  cd ../..
 4719  make re
 4720  valgrind --leak-check=full --show-leak-kinds=all ./so_long ./maps/map2.ber
 4721  ./so_long ./maps/map2.ber
 4722  ./so_long ./maps/map3.ber
 4723  make re
 4724  ./so_long ./maps/map3.ber
 4725  make re
 4726  ./so_long ./maps/map3.ber
 4727  make re
 4728  ./so_long ./maps/map3.ber
 4729  ./so_long ./maps/map2.ber
 4730  touch map3.ber
 4731  ./so_long ./maps/map3.ber
 4732  make re
 4733  ./so_long ./maps/map3.ber
 4734  make fclean
 4735  make
 4736  ./so_long
 4737  ./so_long map.ber
 4738  ./so_long map.ber.ber
 4739  ./so_long maps
 4740  ./so_long map0.ber.ber
 4741  ./so_long map/map0.ber.ber
 4742  ./so_long maps/map0.ber.ber
 4743  ./so_long maps/map0.be
 4744  ./so_long maps/map1.be
 4745  ./so_long maps/map.berlin
 4746  ./so_long maps/map.ber
 4747  touch main.c.c
 4748  rm main.c.c
 4749  ./so_long maps/map.ber
 4750  valgrind ./so_long maps/map.ber
 4751  ./so_long maps/map.ber
 4752  make
 4753  ./so_long maps/map.ber
 4754  norminette
 4755  norminette pre_load_map.c
 4756  norminette src/pre_load_map.c
 4757  make
 4758  ./so_long maps/map.ber
 4759  valgrind ./so_long maps/map.ber
 4760  norminette pre_load_map.c
 4761  norminette src/pre_load_map.c
 4762  rm -rf mlx/minilibx-linux/.git
 4763  ls
 4764  git add .
 4765  cd mlx
 4766  ls -a
 4767  cd ..
 4768  mv mlx/minilibx-linux .
 4769  \trm mlx
 4770  \trm -rf mlx
 4771  ls
 4772  ./so_long maps/map.ber
 4773  make
 4774  make re
 4775  ls
 4776  make re
 4777  ./so_long maps/map2.ber
 4778  make re
 4779  ./so_long maps/map2.ber
 4780  make re
 4781  ./so_long maps/map2.ber
 4782  mkdir mlx
 4783  mv minilibx-linux/ mlx
 4784  mv mlx/minilibx-linux .
 4785  rm -rf mlx
 4786  make re
 4787  ./so_long maps/map2.ber
 4788  make re
 4789  ./so_long maps/map2.ber
 4790  mkdir mlx
 4791  mv minilibx-linux mlx
 4792  make re
 4793  ./so_long maps/map2.ber
 4794  make re
 4795  ./so_long maps/map2.ber
 4796  mv mlx/minilibx-linux .
 4797  make re
 4798  ./so_long maps/map2.ber
 4799  make fclean
 4800  git add .
 4801  git add Makefile
 4802  ls -a
 4803  git add Makefile
 4804  git status
 4805  git remote
 4806  cd ..
 4807  ls
 4808  cp -r so_long so_long2
 4809  ls
 4810  ls so_long
 4811  cd so_long
 4812  git pull
 4813  git branch
 4814  ls
 4815  git add Makefile
 4816  git pull origin
 4817  git pull origin main
 4818  rm -rf .git
 4819  git init
 4820  git remote add github https://github.com/Remi-Jacobs/Play_Ground_for_So_long.git
 4821  ls
 4822  git add .
 4823  rm -rf inc/libft/getnextline/.git
 4824  git add .
 4825  git commit -m "fix empty map file"
 4826  git branch
 4827  git push github master
 4828  git branch rename master main
 4829  git branch
 4830  git pull github 
 4831  git pull github main
 4832  git config pull.rebase false 
 4833  git branch
 4834  ls
 4835  git remote add intra git@vogsphere.42wolfsburg.de:vogsphere/intra-uuid-a9987c6c-87e4-40b7-bac9-2f98f98b3610-5950416-ojacobs
 4836  git push intra master
 4837  git clone git@vogsphere.42wolfsburg.de:vogsphere/intra-uuid-a9987c6c-87e4-40b7-bac9-2f98f98b3610-5950416-ojacobs
 4838  ls
 4839  rm -rf intra-uuid-a9987c6c-87e4-40b7-bac9-2f98f98b3610-5950416-ojacobs
 4840  cd ..
 4841  git clone git@vogsphere.42wolfsburg.de:vogsphere/intra-uuid-a9987c6c-87e4-40b7-bac9-2f98f98b3610-5950416-ojacobs
 4842  code intra-uuid-a9987c6c-87e4-40b7-bac9-2f98f98b3610-5950416-ojacobs
 4843  make re
 4844  cd ..
 4845  make re
 4846  norminette src
 4847  make re
 4848  valgrind ./so_long maps/map.ber
 4849  valgrind ./so_long maps/map1.ber
 4850  valgrind ./so_long maps/map1.be
 4851  valgrind ./so_long maps/map2.ber
 4852  make fclean
 4853  git add .
 4854  git commit -m "fix gnl"
 4855  git push intra master
 4856  git push github master
 4857  git clone git@vogsphere.42wolfsburg.de:vogsphere/intra-uuid-a9987c6c-87e4-40b7-bac9-2f98f98b3610-5950416-ojacobs so_long_fin
 4858  make re
 4859  ./so_long maps/map2.ber
 4860  ./so_long maps/map2.ber jj
 4861  ./so_long 
 4862  ./so_long maps/map.ber
 4863  make re
 4864  ./so_long maps/map.ber
 4865  ./so_long maps/map2.ber
 4866  make re
 4867  ./so_long maps/map2.ber
 4868  make fclean
 4869  norminette src inc
 4870  git add .
 4871  git commit -m "fixed move count"
 4872  git push intra master
 4873  git push github master
 4874  make re
 4875  ./so_long maps/map2.ber
 4876  norminette src inc
 4877  make fclean
 4878  git add .
 4879  git commit -m "fixed final move count"
 4880  git push github master
 4881  git push intra master
 4882  cd ..
 4883  git clone git@vogsphere.42wolfsburg.de:vogsphere/intra-uuid-a9987c6c-87e4-40b7-bac9-2f98f98b3610-5950416-ojacobs so_long_end
 4884  code so_long_end
 4885  cd ..
 4886  make
 4887  ./so_long maps/map.ber
 4888  ./so_long maps/map1.be
 4889  ./so_long maps/map0.ber.ber
 4890  ./so_long maps/map2.ber
 4891  norminette src inc
 4892  cd so_long
 4893  norminette src inc
 4894  git add .
 4895  git commit -m "fixed Error Messages"
 4896  git push intra master
 4897  git push github master
 4898  cd ..
 4899  git clone git@vogsphere.42wolfsburg.de:vogsphere/intra-uuid-a9987c6c-87e4-40b7-bac9-2f98f98b3610-5950416-ojacobs so_long_end2
 4900  code so_long_end2
 4901  make
 4902  ./so_long maps/map2.ber
 4903  cd so_long
 4904  make
 4905  ./so_long maps/map2.ber
 4906  make
 4907  ./so_long maps/map2.ber
 4908  make
 4909  ./so_long maps/map2.ber
 4910  make re
 4911  ./so_long maps/map2.ber
 4912  make re
 4913  ./so_long maps/map2.ber
 4914  make re
 4915  ./so_long maps/map2.ber
 4916  norminette src inc
 4917  make fclean
 4918  git add .
 4919  git commit -m "fixed Total Moves"
 4920  git push github master
 4921  git push intra master
 4922  cd ..
 4923  git clone git@vogsphere.42wolfsburg.de:vogsphere/intra-uuid-a9987c6c-87e4-40b7-bac9-2f98f98b3610-5950416-ojacobs so_long_end
 4924  code so_long_end
 4925  make
 4926  ./so_long maps/map2.ber
 4927  norminette src inc
 4928  ./so_long maps/map1.ber
 4929  cd so_long
 4930  make clean
 4931  make fclean
 4932  git add .
 4933  git commit -m "fixed all Error Messages"
 4934  git push intra master
 4935  git push github master
 4936  git clone git@vogsphere.42wolfsburg.de:vogsphere/intra-uuid-a9987c6c-87e4-40b7-bac9-2f98f98b3610-5950416-ojacobs so_long_end
 4937  cd ..
 4938  code so_long_end
 4939  mv so_long/so_long_end .
 4940  code so_long_end
 4941  make
 4942  ./so_long maps/map1.ber
 4943  ./so_long maps/map2.ber
 4944  norminette src inc
 4945  valgrind ./so_long maps/map2.ber
 4946  valgrind ./so_long maps/map1.ber
 4947  valgrind ./so_long maps/map0.ber
 4948  valgrind ./so_long maps/map.ber
 4949  valgrind ./so_long maps/map3.ber
 4950  valgrind ./so_long maps/map0.ber.ber
 4951  ls
 4952  git clone git@vogsphere.42wolfsburg.de:vogsphere/intra-uuid-a9987c6c-87e4-40b7-bac9-2f98f98b3610-5950416-ojacobs sfrankie
 4953  cd sfrankie
 4954  ls
 4955  norminette src inc 
 4956  clear
 4957  make
 4958  make re
 4959  make
 4960  make fclean
 4961  ls
 4962  make
 4963  clear
 4964  code .
 4965  ./so_long maps/map.ber
 4966  valgrind ./so_long maps/map.ber
 4967  valgrind ./so_long maps/map0ber.ber.ber
 4968  valgrind ./so_long maps/map0.ber.ber
 4969  valgrind ./so_long maps/map1.be
 4970  valgrind ./so_long maps/map2.ber
 4971  valgrind ./so_long maps/map3.ber
 4972  clear
 4973  valgrind ./so_long maps/map1.ber
 4974  clear
 4975  valgrind ./so_long maps/map1.ber
 4976  valgrind ./so_long maps/map3.ber
 4977  git clone https://github.com/paulobeckhauser/cub3d.git
 4978  cd cub3d
 4979  make
 4980  make fclean
 4981  make bonus
 4982  ./cub3d maps_testing_progress/good/preview.cub
 4983  cd ..
 4984  ls
 4985  ./so_long ./maps/map3.ber
 4986  clear
 4987  pwd
 4988  cd ..
 4989  make -j8
 4990  make -j8 re
 4991  make re
 4992  cd src
 4993  norminette
 4994  cd ..
 4995  norminette inc
 4996  pwd
 4997  make
 4998  ./so_long ./maps/map3.ber
 4999  ./so_long ./maps/map.ber
 5000  ./so_long ./maps/map1.be
 5001  ./so_long ./maps/map1.ber
 5002  ./so_long ./maps/map1.be
 5003  ./so_long ./maps/map2.ber
 5004  ./so_long ./maps/map3.ber
 5005  make leak
 5006  make re
 5007  ./so_long ./maps/map.ber
 5008  OB
 5009  ./so_long ./maps/map.ber
 5010  make re
 5011  ./so_long ./maps/map.ber
 5012  ./so_long ./maps/map2.ber
 5013  cd Images
 5014  mv Gate_Opened.xpm Gate_Opened2.xpm
 5015  ./so_long ./maps/map2.ber
 5016  cd ..
 5017  ./so_long ./maps/map2.ber
 5018  cd Images
 5019  ls
 5020  cd ..
 5021  ./so_long ./maps/map2.ber
 5022  ls
 5023  clear
 5024  ls
 5025  make
 5026  make fclean
 5027  clear
 5028  norminette
 5029  norminette images
 5030  norminette src inc
 5031  make
 5032  touch main.c.c
 5033  make
 5034  make re
 5035  valgrind ./so_long maps/map.berlin
 5036  valgrind ./so_long maps/map.berlin.ber
 5037  valgrind ./so_long maps/map2.ber
 5038  valgrind ./so_long maps/map.berlin.ber
 5039  make re
 5040  valgrind ./so_long maps/map.berlin.ber
 5041  man mlx_xpm_file_to_image
 5042  man mlx_xpm
 5043  valgrind ./so_long maps/map0.ber.ber
 5044  make
 5045  ./so_long ./maps/map2.ber
 5046  make re
 5047  ./so_long ./maps/map2.ber
 5048  make re
 5049  ./so_long ./maps/map2.ber
 5050  make re
 5051  ./so_long ./maps/map2.ber
 5052  make re
 5053  ./so_long ./maps/map2.ber
 5054  make re
 5055  ./so_long ./maps/map2.ber
 5056  make re
 5057  ./so_long ./maps/map2.ber
 5058  make re
 5059  ./so_long ./maps/map2.ber
 5060  make
 5061  ./so_long ./maps/map2.ber
 5062  make
 5063  ./so_long ./maps/map2.ber
 5064  make
 5065  ./so_long ./maps/map2.ber
 5066  make
 5067  ./so_long ./maps/map2.ber
 5068  make
 5069  ./so_long ./maps/map2.ber
 5070  make
 5071  ./so_long ./maps/map2.ber
 5072  make
 5073  ./so_long ./maps/map2.ber
 5074  git checkout .
 5075  make re
 5076  git checkout .
 5077  make re
 5078  ./so_long ./maps/map2.ber
 5079  make re
 5080  ./so_long ./maps/map2.ber
 5081  make re
 5082  ./so_long ./maps/map2.ber
 5083  git checkout .
 5084  make re
 5085  ./so_long ./maps/map2.ber
 5086  make re
 5087  ./so_long ./maps/map2.ber
 5088  make re
 5089  ./so_long ./maps/map2.ber
 5090  make re
 5091  ./so_long ./maps/map2.ber
 5092  make re
 5093  ./so_long ./maps/map2.ber
 5094  git add .
 5095  git commit -m "fixed for github"
 5096  make fclean
 5097  git add .
 5098  git commit -m "fixed for github"
 5099  git push github master
 5100  mkdir Exam 02
 5101  mkdir Exam 03
 5102  rm 02 03 Exam
 5103  rm -rf  02 03 Exam
 5104  mkdir Exam_03 Exam_02
 5105  cd Exam_03
 5106  touch printf.c
 5107  cc printf.c
 5108  ./a.out
 5109  cc printf.c
 5110  ./a.out
 5111  make re
 5112  valgrind ./push_swap gjdfgdfdf rjhvfrfjh 
 5113  valgrind ./push_swap 43 64 98
 5114  valgrind ./push_swap 43 64 98 9
 5115  omz update
 5116  clear
 5117  cc printf.c
 5118  cd Exam_03
 5119  cc printf.c
 5120  ./a.out
 5121  cc neattrick.c
 5122  ./a.out
 5123  cc neattrick.c
 5124  ./a.out
 5125  cc neattrick.c
 5126  ./a.out
 5127  touch my_printf.c
 5128  man va arg
 5129  cc my_printf.c
 5130  ./a.out
 5131  cc my_printf.c
 5132  ./a.out
 5133  cc my_printf.c
 5134  ./a.out
 5135  cc my_printf.c
 5136  ./a.out
 5137  clear
 5138  cc my_printf.c
 5139  ./a.out
 5140  cc my_printf.c
 5141  ./a.out
 5142  clear
 5143  man va arg
 5144  cc my_printf.c
 5145  cd Exam_03
 5146  cc my_printf.c
 5147  ./a.out
 5148  cc my_printf.c
 5149  ./a.out
 5150  cc my_printf.c
 5151  ./a.out
 5152  cc my_printf.c
 5153  ./a.out
 5154  cc my_printf.c
 5155  ./a.out
 5156  cc my_printf.c
 5157  ./a.out
 5158  cc my_printf.c
 5159  ./a.out
 5160  cd Exam_03
 5161  cc my_printf.c
 5162  ./a.out
 5163  cc my_printf.c
 5164  ./a.out
 5165  cc my_printf.c
 5166  ./a.out
 5167  cc my_printf.c
 5168  ./a.out
 5169  cd Exam_03
 5170  touch ge-_next_line.c
 5171  touch ge-_next_line.h
 5172  cc -D BUFFER_SIZE=42 get_next_line.c get_next_line.h
 5173  ./get_next_line.h.gch
 5174  ./a.out
 5175  cc -D BUFFER_SIZE=42 get_next_line.c get_next_line.h
 5176  cc get_next_line.c get_next_line.h
 5177  ./a.out
 5178  touch example.txt
 5179  ./a.out
 5180  cc get_next_line.c get_next_line.h
 5181  ./a.out
 5182  cc get_next_line.c get_next_line.h
 5183  ./a.out
 5184  touch str_len.c
 5185  man strlen
 5186  cc str_len.c
 5187  ./a.out
 5188  cc get_next_line.c get_next_line.h
 5189  ./a.out
 5190  cc get_next_line.c get_next_line.h
 5191  cd Exam_03
 5192  cc get_next_line.c get_next_line.h
 5193  ./a.out
 5194  valgrind ./a.out
 5195  cc get_next_line.c get_next_line.h
 5196  valgrind ./a.out
 5197  cd Exam_03
 5198  touch my_gnl.c
 5199  touch my_gnl.h
 5200  man read()
 5201  man open()
 5202  man open
 5203  man read
 5204  cc my_gnl.c my_gnl.h
 5205  ./a.out
 5206  cc my_gnl.c my_gnl.h
 5207  ./a.out
 5208  cc -D BUFFER_SIZE=100 my_gnl.c my_gnl.h
 5209  ./a.out
 5210  cd Exam_03
 5211  touch my_gnl.h
 5212  touch my_gnl.c
 5213  cc my_gnl.c my_gnl.h
 5214  ./a.out
 5215  cc my_gnl.c my_gnl.h
 5216  ./a.out
 5217  touch za_printf.c
 5218  cc za_printf.c
 5219  ./a.out
 5220  cc za_printf.c
 5221  ./a.out
 5222  cc za_printf.c
 5223  ./a.out
 5224  cc za_printf.c
 5225  ./a.out
 5226  cc za_printf.c
 5227  ./a.out
 5228  cc za_printf.c
 5229  ./a.out
 5230  cc za_printf.c
 5231  ./a.out
 5232  cc za_printf.c
 5233  ./a.out
 5234  cc za_printf.c
 5235  ./a.out
 5236  cc za_printf.c
 5237  ./a.out
 5238  cd Threads
 5239  touch first_thread.c
 5240  cc first_thread.c
 5241  ./a.out
 5242  cc first_thread.c
 5243  ./a.out
 5244  touch threadvpro.c
 5245  touch provthread.c
 5246  cc provthread.c
 5247  ./a.out
 5248  cc provthread.c
 5249  ./a.out
 5250  cc threadvpro.c
 5251  ./a.out
 5252  cc threadvpro.c
 5253  ./a.out
 5254  cc provthread.c
 5255  ./a.out
 5256  cc provthread.c
 5257  ./a.out
 5258  cc provthread.c
 5259  ./a.out
 5260  cc threadvpro.c
 5261  ./a.out
 5262  cc threadvpro.c
 5263  ./a.out
 5264  cc threadvpro.c
 5265  ./a.out
 5266  cc threadvpro.c
 5267  ./a.out
 5268  cd Exam_03
 5269  touch gnl.c gnl.h
 5270  cc gnl.c gnl.h
 5271  ./a.out
 5272  valgrind ./a.out
 5273  touch za_printf.c
 5274  cc za_printf.c
 5275  ./a.out
 5276  cd ..
 5277  bash -c "$(curl https://grademe.fr)"
 5278  cd Examsimulition
 5279  grademe
 5280  examshell
 5281  cd ..
 5282  clear
 5283  cd Exam_0
 5284  cd Exam_03
 5285  ls
 5286  cc za_printf.c
 5287  ./a.out
 5288  cc za_printf.c
 5289  ./a.out
 5290  cc za_printf.c
 5291  ./a.out
 5292  cc za_printf.c
 5293  ./a.out
 5294  cc za_printf.c
 5295  ./a.out
 5296  cc za_printf.c
 5297  ./a.out
 5298  touch gitprintf.c
 5299  cc gitprintf.c
 5300  ./a.out
 5301  cc za_printf.c
 5302  ./a.out
 5303  cc za_printf.c
 5304  ./a.out
 5305  clear
 5306  make re
 5307  ./so_long ./maps/map2.ber
 5308  make re
 5309  ./so_long ./maps/map2.ber
 5310  git branch
 5311  ls
 5312  git checkout -b remidev
 5313  git checkout development
 5314  git checkout remidev
 5315  git add .
 5316  git commit -m "Improve README"
 5317  git push origin remidev
 5318  cat Languages
 5319  cat README.md
 5320  more README.md
 5321  less README.md
 5322  head -2 README.md
 5323  tail -2 README.md
 5324  enable -a
 5325  h
